{
	"info": {
		"_postman_id": "9565a6a4-db3c-4f5c-83ab-a14cad3cbd99",
		"name": "GitHub v3 REST API",
		"description": "GitHub's v3 REST API.\n\nContact Support:\n Name: Support",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "actions",
			"item": [
				{
					"name": "List repository workflows",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/workflows?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"workflows"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists the workflows in a repository. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/workflows?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"workflows"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 2,\n \"workflows\": [\n  {\n   \"id\": 161335,\n   \"node_id\": \"MDg6V29ya2Zsb3cxNjEzMzU=\",\n   \"name\": \"CI\",\n   \"path\": \".github/workflows/blank.yml\",\n   \"state\": \"active\",\n   \"created_at\": \"2020-01-08T23:48:37.000-08:00\",\n   \"updated_at\": \"2020-01-08T23:50:21.000-08:00\",\n   \"url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/workflows/161335\",\n   \"html_url\": \"https://github.com/octo-org/octo-repo/blob/master/.github/workflows/161335\",\n   \"badge_url\": \"https://github.com/octo-org/octo-repo/workflows/CI/badge.svg\"\n  },\n  {\n   \"id\": 269289,\n   \"node_id\": \"MDE4OldvcmtmbG93IFNlY29uZGFyeTI2OTI4OQ==\",\n   \"name\": \"Linter\",\n   \"path\": \".github/workflows/linter.yml\",\n   \"state\": \"active\",\n   \"created_at\": \"2020-01-08T23:48:37.000-08:00\",\n   \"updated_at\": \"2020-01-08T23:50:21.000-08:00\",\n   \"url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/workflows/269289\",\n   \"html_url\": \"https://github.com/octo-org/octo-repo/blob/master/.github/workflows/269289\",\n   \"badge_url\": \"https://github.com/octo-org/octo-repo/workflows/Linter/badge.svg\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a workflow dispatch event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ref\": \"topic-branch\",\n    \"inputs\": {\n        \"name\": \"Mona the Octocat\",\n        \"home\": \"San Francisco, CA\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/workflows/:workflow_id/dispatches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"workflows",
								":workflow_id",
								"dispatches"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "workflow_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "You can use this endpoint to manually trigger a GitHub Actions workflow run. You can also replace `{workflow_id}` with the workflow file name. For example, you could use `main.yml`.\n\nYou must configure your GitHub Actions workflow to run when the [`workflow_dispatch` webhook](/developers/webhooks-and-events/webhook-events-and-payloads#workflow_dispatch) event occurs. The `inputs` are configured in the workflow file. For more information about how to configure the `workflow_dispatch` event in the workflow file, see \"[Events that trigger workflows](/actions/reference/events-that-trigger-workflows#workflow_dispatch).\"\n\nYou must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint. For more information, see \"[Creating a personal access token for the command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line).\""
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ref\": \"topic-branch\",\n    \"inputs\": {\n        \"name\": \"Mona the Octocat\",\n        \"home\": \"San Francisco, CA\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/workflows/:workflow_id/dispatches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"workflows",
										":workflow_id",
										"dispatches"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "workflow_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a self-hosted runner from an organization",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/actions/runners/:runner_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"actions",
								"runners",
								":runner_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "runner_id",
									"value": "41891364",
									"description": "(Required) runner_id parameter"
								}
							]
						},
						"description": "**Warning:** The self-hosted runners API for organizations is currently in public beta and subject to change.\n\nForces the removal of a self-hosted runner from an organization. You can use this endpoint to completely remove the runner when the machine you were using no longer exists. You must authenticate using an access token with the `admin:org` scope to use this endpoint."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/runners/:runner_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"runners",
										":runner_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "runner_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a self-hosted runner for an organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/actions/runners/:runner_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"actions",
								"runners",
								":runner_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "runner_id",
									"value": "41891364",
									"description": "(Required) runner_id parameter"
								}
							]
						},
						"description": "**Warning:** The self-hosted runners API for organizations is currently in public beta and subject to change.\n\nGets a specific self-hosted runner for an organization. You must authenticate using an access token with the `admin:org` scope to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/runners/:runner_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"runners",
										":runner_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "runner_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 23,\n \"name\": \"MBP\",\n \"os\": \"macos\",\n \"status\": \"online\"\n}"
						}
					]
				},
				{
					"name": "List self-hosted runners for an organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/actions/runners?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"actions",
								"runners"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Warning:** The self-hosted runners API for organizations is currently in public beta and subject to change.\n\nLists all self-hosted runners for an organization. You must authenticate using an access token with the `admin:org` scope to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/runners?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"runners"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 2,\n \"runners\": [\n  {\n   \"id\": 23,\n   \"name\": \"MBP\",\n   \"os\": \"macos\",\n   \"status\": \"online\"\n  },\n  {\n   \"id\": 24,\n   \"name\": \"iMac\",\n   \"os\": \"macos\",\n   \"status\": \"offline\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List runner applications for a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runners/downloads",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runners",
								"downloads"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists binaries for the runner application that you can download and run. You must authenticate using an access token with the `repo` scope to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runners/downloads",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runners",
										"downloads"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"os\": \"osx\",\n  \"architecture\": \"x64\",\n  \"download_url\": \"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-osx-x64-2.164.0.tar.gz\",\n  \"filename\": \"actions-runner-osx-x64-2.164.0.tar.gz\"\n },\n {\n  \"os\": \"linux\",\n  \"architecture\": \"x64\",\n  \"download_url\": \"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-x64-2.164.0.tar.gz\",\n  \"filename\": \"actions-runner-linux-x64-2.164.0.tar.gz\"\n },\n {\n  \"os\": \"linux\",\n  \"architecture\": \"arm\",\n  \"download_url\": \"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm-2.164.0.tar.gz\",\n  \"filename\": \"actions-runner-linux-arm-2.164.0.tar.gz\"\n },\n {\n  \"os\": \"win\",\n  \"architecture\": \"x64\",\n  \"download_url\": \"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-win-x64-2.164.0.zip\",\n  \"filename\": \"actions-runner-win-x64-2.164.0.zip\"\n },\n {\n  \"os\": \"linux\",\n  \"architecture\": \"arm64\",\n  \"download_url\": \"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm64-2.164.0.tar.gz\",\n  \"filename\": \"actions-runner-linux-arm64-2.164.0.tar.gz\"\n }\n]"
						}
					]
				},
				{
					"name": "List artifacts for a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/artifacts?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"artifacts"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists all artifacts for a repository. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/artifacts?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"artifacts"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 2,\n \"artifacts\": [\n  {\n   \"id\": 11,\n   \"node_id\": \"MDg6QXJ0aWZhY3QxMQ==\",\n   \"name\": \"Rails\",\n   \"size_in_bytes\": 556,\n   \"url\": \"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11\",\n   \"archive_download_url\": \"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip\",\n   \"expired\": false,\n   \"created_at\": \"2020-01-10T14:59:22Z\",\n   \"expires_at\": \"2020-03-21T14:59:22Z\",\n   \"updated_at\": \"2020-02-21T14:59:22Z\"\n  },\n  {\n   \"id\": 13,\n   \"node_id\": \"MDg6QXJ0aWZhY3QxMw==\",\n   \"name\": \"\",\n   \"size_in_bytes\": 453,\n   \"url\": \"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13\",\n   \"archive_download_url\": \"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13/zip\",\n   \"expired\": false,\n   \"created_at\": \"2020-01-10T14:59:22Z\",\n   \"expires_at\": \"2020-03-21T14:59:22Z\",\n   \"updated_at\": \"2020-02-21T14:59:22Z\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List repository secrets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/secrets?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"secrets"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists all secrets available in a repository without revealing their encrypted values. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/secrets?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"secrets"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 2,\n \"secrets\": [\n  {\n   \"name\": \"GH_TOKEN\",\n   \"created_at\": \"2019-08-10T14:59:22Z\",\n   \"updated_at\": \"2020-01-10T14:59:22Z\"\n  },\n  {\n   \"name\": \"GIST_ID\",\n   \"created_at\": \"2020-01-10T10:59:22Z\",\n   \"updated_at\": \"2020-01-11T11:59:22Z\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create or update an organization secret",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"encrypted_value\": \"****************************************************************************************\",\n    \"key_id\": \"012345678912345678\",\n    \"visibility\": \"selected\",\n    \"selected_repository_ids\": [\n        \"1296269\",\n        \"1296280\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"actions",
								"secrets",
								":secret_name"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "secret_name",
									"value": "aliquip sint",
									"description": "(Required) secret_name parameter"
								}
							]
						},
						"description": "Creates or updates an organization secret with an encrypted value. Encrypt your secret using\n[LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access\ntoken with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to\nuse this endpoint.\n\n#### Example encrypting a secret using Node.js\n\nEncrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.\n\n```\nconst sodium = require('tweetsodium');\n\nconst key = \"base64-encoded-public-key\";\nconst value = \"plain-text-secret\";\n\n// Convert the message and key to Uint8Array's (Buffer implements that interface)\nconst messageBytes = Buffer.from(value);\nconst keyBytes = Buffer.from(key, 'base64');\n\n// Encrypt using LibSodium.\nconst encryptedBytes = sodium.seal(messageBytes, keyBytes);\n\n// Base64 the encrypted secret\nconst encrypted = Buffer.from(encryptedBytes).toString('base64');\n\nconsole.log(encrypted);\n```\n\n\n#### Example encrypting a secret using Python\n\nEncrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/stable/public/#nacl-public-sealedbox) with Python 3.\n\n```\nfrom base64 import b64encode\nfrom nacl import encoding, public\n\ndef encrypt(public_key: str, secret_value: str) -> str:\n  \"\"\"Encrypt a Unicode string using the public key.\"\"\"\n  public_key = public.PublicKey(public_key.encode(\"utf-8\"), encoding.Base64Encoder())\n  sealed_box = public.SealedBox(public_key)\n  encrypted = sealed_box.encrypt(secret_value.encode(\"utf-8\"))\n  return b64encode(encrypted).decode(\"utf-8\")\n```\n\n#### Example encrypting a secret using C#\n\nEncrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.\n\n```\nvar secretValue = System.Text.Encoding.UTF8.GetBytes(\"mySecret\");\nvar publicKey = Convert.FromBase64String(\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=\");\n\nvar sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\nConsole.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n```\n\n#### Example encrypting a secret using Ruby\n\nEncrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.\n\n```ruby\nrequire \"rbnacl\"\nrequire \"base64\"\n\nkey = Base64.decode64(\"+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=\")\npublic_key = RbNaCl::PublicKey.new(key)\n\nbox = RbNaCl::Boxes::Sealed.from_public_key(public_key)\nencrypted_secret = box.encrypt(\"my_secret\")\n\n# Print the base64 encoded secret\nputs Base64.strict_encode64(encrypted_secret)\n```"
					},
					"response": [
						{
							"name": "Response when creating a secret",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"encrypted_value\": \"****************************************************************************************\",\n    \"key_id\": \"012345678912345678\",\n    \"visibility\": \"selected\",\n    \"selected_repository_ids\": [\n        \"1296269\",\n        \"1296280\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"secrets",
										":secret_name"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "secret_name"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response when updating a secret",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"encrypted_value\": \"****************************************************************************************\",\n    \"key_id\": \"012345678912345678\",\n    \"visibility\": \"selected\",\n    \"selected_repository_ids\": [\n        \"1296269\",\n        \"1296280\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"secrets",
										":secret_name"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "secret_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an organization secret",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"actions",
								"secrets",
								":secret_name"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "secret_name",
									"value": "aliquip sint",
									"description": "(Required) secret_name parameter"
								}
							]
						},
						"description": "Deletes a secret in an organization using the secret name. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"secrets",
										":secret_name"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "secret_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an organization secret",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"actions",
								"secrets",
								":secret_name"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "secret_name",
									"value": "aliquip sint",
									"description": "(Required) secret_name parameter"
								}
							]
						},
						"description": "Gets a single organization secret without revealing its encrypted value. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"secrets",
										":secret_name"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "secret_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"GH_TOKEN\",\n \"created_at\": \"2019-08-10T14:59:22Z\",\n \"updated_at\": \"2020-01-10T14:59:22Z\",\n \"visibility\": \"selected\",\n \"selected_repositories_url\": \"https://api.github.com/orgs/octo-org/actions/secrets/SUPER_SECRET/repositories\"\n}"
						}
					]
				},
				{
					"name": "List organization secrets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/actions/secrets?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"actions",
								"secrets"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists all secrets available in an organization without revealing their encrypted values. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/secrets?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"secrets"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 3,\n \"secrets\": [\n  {\n   \"name\": \"GIST_ID\",\n   \"created_at\": \"2019-08-10T14:59:22Z\",\n   \"updated_at\": \"2020-01-10T14:59:22Z\",\n   \"visibility\": \"private\"\n  },\n  {\n   \"name\": \"DEPLOY_TOKEN\",\n   \"created_at\": \"2019-08-10T14:59:22Z\",\n   \"updated_at\": \"2020-01-10T14:59:22Z\",\n   \"visibility\": \"all\"\n  },\n  {\n   \"name\": \"GH_TOKEN\",\n   \"created_at\": \"2019-08-10T14:59:22Z\",\n   \"updated_at\": \"2020-01-10T14:59:22Z\",\n   \"visibility\": \"selected\",\n   \"selected_repositories_url\": \"https://api.github.com/orgs/octo-org/actions/secrets/SUPER_SECRET/repositories\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get workflow usage",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/workflows/:workflow_id/timing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"workflows",
								":workflow_id",
								"timing"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "workflow_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Warning:** This GitHub Actions usage endpoint is currently in public beta and subject to change. For more information, see \"[GitHub Actions API workflow usage](https://developer.github.com/changes/2020-05-15-actions-api-workflow-usage).\"\n\nGets the number of billable minutes used by a specific workflow during the current billing cycle. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nYou can also replace `:workflow_id` with `:workflow_file_name`. For example, you could use `main.yml`. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/workflows/:workflow_id/timing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"workflows",
										":workflow_id",
										"timing"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "workflow_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"billable\": {\n  \"UBUNTU\": {\n   \"total_ms\": 180000\n  },\n  \"MACOS\": {\n   \"total_ms\": 240000\n  },\n  \"WINDOWS\": {\n   \"total_ms\": 300000\n  }\n }\n}"
						}
					]
				},
				{
					"name": "Delete an artifact",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/artifacts/:artifact_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"artifacts",
								":artifact_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "artifact_id",
									"value": "41891364",
									"description": "(Required) artifact_id parameter"
								}
							]
						},
						"description": "Deletes an artifact for a workflow run. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/artifacts/:artifact_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"artifacts",
										":artifact_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "artifact_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an artifact",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/artifacts/:artifact_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"artifacts",
								":artifact_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "artifact_id",
									"value": "41891364",
									"description": "(Required) artifact_id parameter"
								}
							]
						},
						"description": "Gets a specific artifact for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/artifacts/:artifact_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"artifacts",
										":artifact_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "artifact_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 11,\n \"node_id\": \"MDg6QXJ0aWZhY3QxMQ==\",\n \"name\": \"Rails\",\n \"size_in_bytes\": 556,\n \"url\": \"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11\",\n \"archive_download_url\": \"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip\",\n \"expired\": false,\n \"created_at\": \"2020-01-10T14:59:22Z\",\n \"expires_at\": \"2020-01-21T14:59:22Z\",\n \"updated_at\": \"2020-01-21T14:59:22Z\"\n}"
						}
					]
				},
				{
					"name": "Delete a repository secret",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/secrets/:secret_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"secrets",
								":secret_name"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "secret_name",
									"value": "aliquip sint",
									"description": "(Required) secret_name parameter"
								}
							]
						},
						"description": "Deletes a secret in a repository using the secret name. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/secrets/:secret_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"secrets",
										":secret_name"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "secret_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a repository secret",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/secrets/:secret_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"secrets",
								":secret_name"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "secret_name",
									"value": "aliquip sint",
									"description": "(Required) secret_name parameter"
								}
							]
						},
						"description": "Gets a single repository secret without revealing its encrypted value. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/secrets/:secret_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"secrets",
										":secret_name"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "secret_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"GH_TOKEN\",\n \"created_at\": \"2019-08-10T14:59:22Z\",\n \"updated_at\": \"2020-01-10T14:59:22Z\"\n}"
						}
					]
				},
				{
					"name": "Create or update a repository secret",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"encrypted_value\": \"****************************************************************************************\",\n    \"key_id\": \"012345678912345678\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/secrets/:secret_name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"secrets",
								":secret_name"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "secret_name",
									"value": "aliquip sint",
									"description": "(Required) secret_name parameter"
								}
							]
						},
						"description": "Creates or updates a repository secret with an encrypted value. Encrypt your secret using\n[LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages). You must authenticate using an access\ntoken with the `repo` scope to use this endpoint. GitHub Apps must have the `secrets` repository permission to use\nthis endpoint.\n\n#### Example encrypting a secret using Node.js\n\nEncrypt your secret using the [tweetsodium](https://github.com/github/tweetsodium) library.\n\n```\nconst sodium = require('tweetsodium');\n\nconst key = \"base64-encoded-public-key\";\nconst value = \"plain-text-secret\";\n\n// Convert the message and key to Uint8Array's (Buffer implements that interface)\nconst messageBytes = Buffer.from(value);\nconst keyBytes = Buffer.from(key, 'base64');\n\n// Encrypt using LibSodium.\nconst encryptedBytes = sodium.seal(messageBytes, keyBytes);\n\n// Base64 the encrypted secret\nconst encrypted = Buffer.from(encryptedBytes).toString('base64');\n\nconsole.log(encrypted);\n```\n\n\n#### Example encrypting a secret using Python\n\nEncrypt your secret using [pynacl](https://pynacl.readthedocs.io/en/stable/public/#nacl-public-sealedbox) with Python 3.\n\n```\nfrom base64 import b64encode\nfrom nacl import encoding, public\n\ndef encrypt(public_key: str, secret_value: str) -> str:\n  \"\"\"Encrypt a Unicode string using the public key.\"\"\"\n  public_key = public.PublicKey(public_key.encode(\"utf-8\"), encoding.Base64Encoder())\n  sealed_box = public.SealedBox(public_key)\n  encrypted = sealed_box.encrypt(secret_value.encode(\"utf-8\"))\n  return b64encode(encrypted).decode(\"utf-8\")\n```\n\n#### Example encrypting a secret using C#\n\nEncrypt your secret using the [Sodium.Core](https://www.nuget.org/packages/Sodium.Core/) package.\n\n```\nvar secretValue = System.Text.Encoding.UTF8.GetBytes(\"mySecret\");\nvar publicKey = Convert.FromBase64String(\"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvvcCU=\");\n\nvar sealedPublicKeyBox = Sodium.SealedPublicKeyBox.Create(secretValue, publicKey);\n\nConsole.WriteLine(Convert.ToBase64String(sealedPublicKeyBox));\n```\n\n#### Example encrypting a secret using Ruby\n\nEncrypt your secret using the [rbnacl](https://github.com/RubyCrypto/rbnacl) gem.\n\n```ruby\nrequire \"rbnacl\"\nrequire \"base64\"\n\nkey = Base64.decode64(\"+ZYvJDZMHUfBkJdyq5Zm9SKqeuBQ4sj+6sfjlH4CgG0=\")\npublic_key = RbNaCl::PublicKey.new(key)\n\nbox = RbNaCl::Boxes::Sealed.from_public_key(public_key)\nencrypted_secret = box.encrypt(\"my_secret\")\n\n# Print the base64 encoded secret\nputs Base64.strict_encode64(encrypted_secret)\n```"
					},
					"response": [
						{
							"name": "Response when creating a secret",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"encrypted_value\": \"****************************************************************************************\",\n    \"key_id\": \"012345678912345678\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/secrets/:secret_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"secrets",
										":secret_name"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "secret_name"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response when updating a secret",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"encrypted_value\": \"****************************************************************************************\",\n    \"key_id\": \"012345678912345678\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/secrets/:secret_name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"secrets",
										":secret_name"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "secret_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a registration token for an organization",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/actions/runners/registration-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"actions",
								"runners",
								"registration-token"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Warning:** The self-hosted runners API for organizations is currently in public beta and subject to change.\n\n\nReturns a token that you can pass to the `config` script. The token expires after one hour. You must authenticate\nusing an access token with the `admin:org` scope to use this endpoint.\n\n#### Example using registration token\n\nConfigure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.\n\n```\n./config.sh --url https://github.com/octo-org --token TOKEN\n```"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/runners/registration-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"runners",
										"registration-token"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"token\": \"LLBF3JGZDX3P5PMEXLND6TS6FCWO6\",\n \"expires_at\": \"2020-01-22T12:13:35.123-08:00\"\n}"
						}
					]
				},
				{
					"name": "Download an artifact",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/artifacts/:artifact_id/:archive_format",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"artifacts",
								":artifact_id",
								":archive_format"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "artifact_id",
									"value": "41891364",
									"description": "(Required) artifact_id parameter"
								},
								{
									"key": "archive_format",
									"value": "aliquip sint",
									"description": "(Required) archive_format parameter"
								}
							]
						},
						"description": "Gets a redirect URL to download an archive for a repository. This URL expires after 1 minute. Look for `Location:` in\nthe response header to find the URL for the download. The `:archive_format` must be `zip`. Anyone with read access to\nthe repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope.\nGitHub Apps must have the `actions:read` permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/artifacts/:artifact_id/:archive_format",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"artifacts",
										":artifact_id",
										":archive_format"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "artifact_id"
										},
										{
											"key": "archive_format"
										}
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a self-hosted runner from a repository",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runners/:runner_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runners",
								":runner_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "runner_id",
									"value": "41891364",
									"description": "(Required) runner_id parameter"
								}
							]
						},
						"description": "Forces the removal of a self-hosted runner from a repository. You can use this endpoint to completely remove the runner when the machine you were using no longer exists. You must authenticate using an access token with the `repo` scope to use this endpoint."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runners/:runner_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runners",
										":runner_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "runner_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a self-hosted runner for a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runners/:runner_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runners",
								":runner_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "runner_id",
									"value": "41891364",
									"description": "(Required) runner_id parameter"
								}
							]
						},
						"description": "Gets a specific self-hosted runner. You must authenticate using an access token with the `repo` scope to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runners/:runner_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runners",
										":runner_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "runner_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 23,\n \"name\": \"MBP\",\n \"os\": \"macos\",\n \"status\": \"online\"\n}"
						}
					]
				},
				{
					"name": "Download job logs for a workflow run",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/jobs/:job_id/logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"jobs",
								":job_id",
								"logs"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "job_id",
									"value": "41891364",
									"description": "(Required) job_id parameter"
								}
							]
						},
						"description": "Gets a redirect URL to download a plain text file of logs for a workflow job. This link expires after 1 minute. Look\nfor `Location:` in the response header to find the URL for the download. Anyone with read access to the repository can\nuse this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must\nhave the `actions:read` permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/jobs/:job_id/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"jobs",
										":job_id",
										"logs"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "job_id"
										}
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List jobs for a workflow run",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id/jobs?filter=all&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runs",
								":run_id",
								"jobs"
							],
							"query": [
								{
									"key": "filter",
									"value": "all",
									"description": "Filters jobs by their `completed_at` timestamp. Can be one of:  \n\\* `latest`: Returns jobs from the most recent execution of the workflow run.  \n\\* `all`: Returns all jobs for a workflow run, including from old executions of the workflow run."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "run_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists jobs for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://developer.github.com/v3/#parameters)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id/jobs?filter=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runs",
										":run_id",
										"jobs"
									],
									"query": [
										{
											"key": "filter",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "run_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 1,\n \"jobs\": [\n  {\n   \"id\": 399444496,\n   \"run_id\": 29679449,\n   \"run_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449\",\n   \"node_id\": \"MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==\",\n   \"head_sha\": \"f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0\",\n   \"url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496\",\n   \"html_url\": \"https://github.com/octo-org/octo-repo/runs/399444496\",\n   \"status\": \"completed\",\n   \"conclusion\": \"success\",\n   \"started_at\": \"2020-01-20T17:42:40Z\",\n   \"completed_at\": \"2020-01-20T17:44:39Z\",\n   \"name\": \"build\",\n   \"steps\": [\n    {\n     \"name\": \"Set up job\",\n     \"status\": \"completed\",\n     \"conclusion\": \"success\",\n     \"number\": 1,\n     \"started_at\": \"2020-01-20T09:42:40.000-08:00\",\n     \"completed_at\": \"2020-01-20T09:42:41.000-08:00\"\n    },\n    {\n     \"name\": \"Run actions/checkout@v2\",\n     \"status\": \"completed\",\n     \"conclusion\": \"success\",\n     \"number\": 2,\n     \"started_at\": \"2020-01-20T09:42:41.000-08:00\",\n     \"completed_at\": \"2020-01-20T09:42:45.000-08:00\"\n    },\n    {\n     \"name\": \"Set up Ruby\",\n     \"status\": \"completed\",\n     \"conclusion\": \"success\",\n     \"number\": 3,\n     \"started_at\": \"2020-01-20T09:42:45.000-08:00\",\n     \"completed_at\": \"2020-01-20T09:42:45.000-08:00\"\n    },\n    {\n     \"name\": \"Run actions/cache@v2\",\n     \"status\": \"completed\",\n     \"conclusion\": \"success\",\n     \"number\": 4,\n     \"started_at\": \"2020-01-20T09:42:45.000-08:00\",\n     \"completed_at\": \"2020-01-20T09:42:48.000-08:00\"\n    },\n    {\n     \"name\": \"Install Bundler\",\n     \"status\": \"completed\",\n     \"conclusion\": \"success\",\n     \"number\": 5,\n     \"started_at\": \"2020-01-20T09:42:48.000-08:00\",\n     \"completed_at\": \"2020-01-20T09:42:52.000-08:00\"\n    },\n    {\n     \"name\": \"Install Gems\",\n     \"status\": \"completed\",\n     \"conclusion\": \"success\",\n     \"number\": 6,\n     \"started_at\": \"2020-01-20T09:42:52.000-08:00\",\n     \"completed_at\": \"2020-01-20T09:42:53.000-08:00\"\n    },\n    {\n     \"name\": \"Run Tests\",\n     \"status\": \"completed\",\n     \"conclusion\": \"success\",\n     \"number\": 7,\n     \"started_at\": \"2020-01-20T09:42:53.000-08:00\",\n     \"completed_at\": \"2020-01-20T09:42:59.000-08:00\"\n    },\n    {\n     \"name\": \"Deploy to Heroku\",\n     \"status\": \"completed\",\n     \"conclusion\": \"success\",\n     \"number\": 8,\n     \"started_at\": \"2020-01-20T09:42:59.000-08:00\",\n     \"completed_at\": \"2020-01-20T09:44:39.000-08:00\"\n    },\n    {\n     \"name\": \"Post actions/cache@v2\",\n     \"status\": \"completed\",\n     \"conclusion\": \"success\",\n     \"number\": 16,\n     \"started_at\": \"2020-01-20T09:44:39.000-08:00\",\n     \"completed_at\": \"2020-01-20T09:44:39.000-08:00\"\n    },\n    {\n     \"name\": \"Complete job\",\n     \"status\": \"completed\",\n     \"conclusion\": \"success\",\n     \"number\": 17,\n     \"started_at\": \"2020-01-20T09:44:39.000-08:00\",\n     \"completed_at\": \"2020-01-20T09:44:39.000-08:00\"\n    }\n   ],\n   \"check_run_url\": \"https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List self-hosted runners for a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runners?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runners"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists all self-hosted runners for a repository. You must authenticate using an access token with the `repo` scope to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runners?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runners"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 2,\n \"runners\": [\n  {\n   \"id\": 23,\n   \"name\": \"MBP\",\n   \"os\": \"macos\",\n   \"status\": \"online\"\n  },\n  {\n   \"id\": 24,\n   \"name\": \"iMac\",\n   \"os\": \"macos\",\n   \"status\": \"offline\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get a workflow",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/workflows/:workflow_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"workflows",
								":workflow_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "workflow_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Gets a specific workflow. You can also replace `:workflow_id` with `:workflow_file_name`. For example, you could use `main.yml`. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/workflows/:workflow_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"workflows",
										":workflow_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "workflow_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 161335,\n \"node_id\": \"MDg6V29ya2Zsb3cxNjEzMzU=\",\n \"name\": \"CI\",\n \"path\": \".github/workflows/blank.yml\",\n \"state\": \"active\",\n \"created_at\": \"2020-01-08T23:48:37.000-08:00\",\n \"updated_at\": \"2020-01-08T23:50:21.000-08:00\",\n \"url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/workflows/161335\",\n \"html_url\": \"https://github.com/octo-org/octo-repo/blob/master/.github/workflows/161335\",\n \"badge_url\": \"https://github.com/octo-org/octo-repo/workflows/CI/badge.svg\"\n}"
						}
					]
				},
				{
					"name": "Add selected repository to an organization secret",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name/repositories/:repository_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"actions",
								"secrets",
								":secret_name",
								"repositories",
								":repository_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "secret_name",
									"value": "aliquip sint",
									"description": "(Required) secret_name parameter"
								},
								{
									"key": "repository_id",
									"value": "41891364",
									"description": "(Required) repository_id parameter"
								}
							]
						},
						"description": "Adds a repository to an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://developer.github.com/v3/actions/secrets/#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint."
					},
					"response": [
						{
							"name": "Response when repository was added to the selected list",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name/repositories/:repository_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"secrets",
										":secret_name",
										"repositories",
										":repository_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "secret_name"
										},
										{
											"key": "repository_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response when visibility type is not set to selected",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name/repositories/:repository_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"secrets",
										":secret_name",
										"repositories",
										":repository_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "secret_name"
										},
										{
											"key": "repository_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove selected repository from an organization secret",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name/repositories/:repository_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"actions",
								"secrets",
								":secret_name",
								"repositories",
								":repository_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "secret_name",
									"value": "aliquip sint",
									"description": "(Required) secret_name parameter"
								},
								{
									"key": "repository_id",
									"value": "41891364",
									"description": "(Required) repository_id parameter"
								}
							]
						},
						"description": "Removes a repository from an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://developer.github.com/v3/actions/secrets/#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint."
					},
					"response": [
						{
							"name": "Response when repository was removed from the selected list",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name/repositories/:repository_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"secrets",
										":secret_name",
										"repositories",
										":repository_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "secret_name"
										},
										{
											"key": "repository_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response when visibility type not set to selected",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name/repositories/:repository_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"secrets",
										":secret_name",
										"repositories",
										":repository_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "secret_name"
										},
										{
											"key": "repository_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List runner applications for an organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/actions/runners/downloads",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"actions",
								"runners",
								"downloads"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Warning:** The self-hosted runners API for organizations is currently in public beta and subject to change.\n\nLists binaries for the runner application that you can download and run. You must authenticate using an access token with the `admin:org` scope to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/runners/downloads",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"runners",
										"downloads"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"os\": \"osx\",\n  \"architecture\": \"x64\",\n  \"download_url\": \"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-osx-x64-2.164.0.tar.gz\",\n  \"filename\": \"actions-runner-osx-x64-2.164.0.tar.gz\"\n },\n {\n  \"os\": \"linux\",\n  \"architecture\": \"x64\",\n  \"download_url\": \"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-x64-2.164.0.tar.gz\",\n  \"filename\": \"actions-runner-linux-x64-2.164.0.tar.gz\"\n },\n {\n  \"os\": \"linux\",\n  \"architecture\": \"arm\",\n  \"download_url\": \"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm-2.164.0.tar.gz\",\n  \"filename\": \"actions-runner-linux-arm-2.164.0.tar.gz\"\n },\n {\n  \"os\": \"win\",\n  \"architecture\": \"x64\",\n  \"download_url\": \"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-win-x64-2.164.0.zip\",\n  \"filename\": \"actions-runner-win-x64-2.164.0.zip\"\n },\n {\n  \"os\": \"linux\",\n  \"architecture\": \"arm64\",\n  \"download_url\": \"https://github.com/actions/runner/releases/download/v2.164.0/actions-runner-linux-arm64-2.164.0.tar.gz\",\n  \"filename\": \"actions-runner-linux-arm64-2.164.0.tar.gz\"\n }\n]"
						}
					]
				},
				{
					"name": "Get a job for a workflow run",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/jobs/:job_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"jobs",
								":job_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "job_id",
									"value": "41891364",
									"description": "(Required) job_id parameter"
								}
							]
						},
						"description": "Gets a specific job in a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/jobs/:job_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"jobs",
										":job_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "job_id"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 399444496,\n \"run_id\": 29679449,\n \"run_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/29679449\",\n \"node_id\": \"MDEyOldvcmtmbG93IEpvYjM5OTQ0NDQ5Ng==\",\n \"head_sha\": \"f83a356604ae3c5d03e1b46ef4d1ca77d64a90b0\",\n \"url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/jobs/399444496\",\n \"html_url\": \"https://github.com/octo-org/octo-repo/runs/399444496\",\n \"status\": \"completed\",\n \"conclusion\": \"success\",\n \"started_at\": \"2020-01-20T17:42:40Z\",\n \"completed_at\": \"2020-01-20T17:44:39Z\",\n \"name\": \"build\",\n \"steps\": [\n  {\n   \"name\": \"Set up job\",\n   \"status\": \"completed\",\n   \"conclusion\": \"success\",\n   \"number\": 1,\n   \"started_at\": \"2020-01-20T09:42:40.000-08:00\",\n   \"completed_at\": \"2020-01-20T09:42:41.000-08:00\"\n  },\n  {\n   \"name\": \"Run actions/checkout@v2\",\n   \"status\": \"completed\",\n   \"conclusion\": \"success\",\n   \"number\": 2,\n   \"started_at\": \"2020-01-20T09:42:41.000-08:00\",\n   \"completed_at\": \"2020-01-20T09:42:45.000-08:00\"\n  },\n  {\n   \"name\": \"Set up Ruby\",\n   \"status\": \"completed\",\n   \"conclusion\": \"success\",\n   \"number\": 3,\n   \"started_at\": \"2020-01-20T09:42:45.000-08:00\",\n   \"completed_at\": \"2020-01-20T09:42:45.000-08:00\"\n  },\n  {\n   \"name\": \"Run actions/cache@v2\",\n   \"status\": \"completed\",\n   \"conclusion\": \"success\",\n   \"number\": 4,\n   \"started_at\": \"2020-01-20T09:42:45.000-08:00\",\n   \"completed_at\": \"2020-01-20T09:42:48.000-08:00\"\n  },\n  {\n   \"name\": \"Install Bundler\",\n   \"status\": \"completed\",\n   \"conclusion\": \"success\",\n   \"number\": 5,\n   \"started_at\": \"2020-01-20T09:42:48.000-08:00\",\n   \"completed_at\": \"2020-01-20T09:42:52.000-08:00\"\n  },\n  {\n   \"name\": \"Install Gems\",\n   \"status\": \"completed\",\n   \"conclusion\": \"success\",\n   \"number\": 6,\n   \"started_at\": \"2020-01-20T09:42:52.000-08:00\",\n   \"completed_at\": \"2020-01-20T09:42:53.000-08:00\"\n  },\n  {\n   \"name\": \"Run Tests\",\n   \"status\": \"completed\",\n   \"conclusion\": \"success\",\n   \"number\": 7,\n   \"started_at\": \"2020-01-20T09:42:53.000-08:00\",\n   \"completed_at\": \"2020-01-20T09:42:59.000-08:00\"\n  },\n  {\n   \"name\": \"Deploy to Heroku\",\n   \"status\": \"completed\",\n   \"conclusion\": \"success\",\n   \"number\": 8,\n   \"started_at\": \"2020-01-20T09:42:59.000-08:00\",\n   \"completed_at\": \"2020-01-20T09:44:39.000-08:00\"\n  },\n  {\n   \"name\": \"Post actions/cache@v2\",\n   \"status\": \"completed\",\n   \"conclusion\": \"success\",\n   \"number\": 16,\n   \"started_at\": \"2020-01-20T09:44:39.000-08:00\",\n   \"completed_at\": \"2020-01-20T09:44:39.000-08:00\"\n  },\n  {\n   \"name\": \"Complete job\",\n   \"status\": \"completed\",\n   \"conclusion\": \"success\",\n   \"number\": 17,\n   \"started_at\": \"2020-01-20T09:44:39.000-08:00\",\n   \"completed_at\": \"2020-01-20T09:44:39.000-08:00\"\n  }\n ],\n \"check_run_url\": \"https://api.github.com/repos/octo-org/octo-repo/check-runs/399444496\"\n}"
						}
					]
				},
				{
					"name": "Cancel a workflow run",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id/cancel",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runs",
								":run_id",
								"cancel"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "run_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Cancels a workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id/cancel",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runs",
										":run_id",
										"cancel"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "run_id"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Download workflow run logs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id/logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runs",
								":run_id",
								"logs"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "run_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Gets a redirect URL to download an archive of log files for a workflow run. This link expires after 1 minute. Look for\n`Location:` in the response header to find the URL for the download. Anyone with read access to the repository can use\nthis endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have\nthe `actions:read` permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runs",
										":run_id",
										"logs"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "run_id"
										}
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete workflow run logs",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id/logs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runs",
								":run_id",
								"logs"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "run_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Deletes all logs for a workflow run. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id/logs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runs",
										":run_id",
										"logs"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "run_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Re-run a workflow",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id/rerun",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runs",
								":run_id",
								"rerun"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "run_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Re-runs your workflow run using its `id`. You must authenticate using an access token with the `repo` scope to use this endpoint. GitHub Apps must have the `actions:write` permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id/rerun",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runs",
										":run_id",
										"rerun"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "run_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a workflow run",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runs",
								":run_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "run_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Gets a specific workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runs",
										":run_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "run_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 30433642,\n \"node_id\": \"MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==\",\n \"head_branch\": \"master\",\n \"head_sha\": \"acb5820ced9479c074f688cc328bf03f341a511d\",\n \"run_number\": 562,\n \"event\": \"push\",\n \"status\": \"queued\",\n \"conclusion\": null,\n \"workflow_id\": 159038,\n \"url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642\",\n \"html_url\": \"https://github.com/octo-org/octo-repo/actions/runs/30433642\",\n \"pull_requests\": [],\n \"created_at\": \"2020-01-22T19:33:08Z\",\n \"updated_at\": \"2020-01-22T19:33:08Z\",\n \"jobs_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs\",\n \"logs_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs\",\n \"check_suite_url\": \"https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374\",\n \"artifacts_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts\",\n \"cancel_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel\",\n \"rerun_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun\",\n \"workflow_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038\",\n \"head_commit\": {\n  \"id\": \"acb5820ced9479c074f688cc328bf03f341a511d\",\n  \"tree_id\": \"d23f6eedb1e1b9610bbc754ddb5197bfe7271223\",\n  \"message\": \"Create linter.yml\",\n  \"timestamp\": \"2020-01-22T19:33:05Z\",\n  \"author\": {\n   \"name\": \"Octo Cat\",\n   \"email\": \"octocat@github.com\"\n  },\n  \"committer\": {\n   \"name\": \"GitHub\",\n   \"email\": \"noreply@github.com\"\n  }\n },\n \"repository\": {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\"\n },\n \"head_repository\": {\n  \"id\": 217723378,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=\",\n  \"name\": \"octo-repo\",\n  \"full_name\": \"octo-org/octo-repo\",\n  \"private\": true,\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"html_url\": \"https://github.com/octo-org/octo-repo\",\n  \"description\": null,\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octo-org/octo-repo\",\n  \"forks_url\": \"https://api.github.com/repos/octo-org/octo-repo/forks\",\n  \"keys_url\": \"https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}\",\n  \"teams_url\": \"https://api.github.com/repos/octo-org/octo-repo/teams\",\n  \"hooks_url\": \"https://api.github.com/repos/octo-org/octo-repo/hooks\",\n  \"issue_events_url\": \"https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}\",\n  \"events_url\": \"https://api.github.com/repos/octo-org/octo-repo/events\",\n  \"assignees_url\": \"https://api.github.com/repos/octo-org/octo-repo/assignees{/user}\",\n  \"branches_url\": \"https://api.github.com/repos/octo-org/octo-repo/branches{/branch}\",\n  \"tags_url\": \"https://api.github.com/repos/octo-org/octo-repo/tags\",\n  \"blobs_url\": \"https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}\",\n  \"trees_url\": \"https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}\",\n  \"statuses_url\": \"https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}\",\n  \"languages_url\": \"https://api.github.com/repos/octo-org/octo-repo/languages\",\n  \"stargazers_url\": \"https://api.github.com/repos/octo-org/octo-repo/stargazers\",\n  \"contributors_url\": \"https://api.github.com/repos/octo-org/octo-repo/contributors\",\n  \"subscribers_url\": \"https://api.github.com/repos/octo-org/octo-repo/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octo-org/octo-repo/subscription\",\n  \"commits_url\": \"https://api.github.com/repos/octo-org/octo-repo/commits{/sha}\",\n  \"git_commits_url\": \"https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}\",\n  \"comments_url\": \"https://api.github.com/repos/octo-org/octo-repo/comments{/number}\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}\",\n  \"contents_url\": \"https://api.github.com/repos/octo-org/octo-repo/contents/{+path}\",\n  \"compare_url\": \"https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}\",\n  \"merges_url\": \"https://api.github.com/repos/octo-org/octo-repo/merges\",\n  \"archive_url\": \"https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}\",\n  \"downloads_url\": \"https://api.github.com/repos/octo-org/octo-repo/downloads\",\n  \"issues_url\": \"https://api.github.com/repos/octo-org/octo-repo/issues{/number}\",\n  \"pulls_url\": \"https://api.github.com/repos/octo-org/octo-repo/pulls{/number}\",\n  \"milestones_url\": \"https://api.github.com/repos/octo-org/octo-repo/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}\",\n  \"labels_url\": \"https://api.github.com/repos/octo-org/octo-repo/labels{/name}\",\n  \"releases_url\": \"https://api.github.com/repos/octo-org/octo-repo/releases{/id}\",\n  \"deployments_url\": \"https://api.github.com/repos/octo-org/octo-repo/deployments\"\n }\n}"
						}
					]
				},
				{
					"name": "Delete a workflow run",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runs",
								":run_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "run_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Delete a specific workflow run. Anyone with write access to the repository can use this endpoint. If the repository is\nprivate you must use an access token with the `repo` scope. GitHub Apps must have the `actions:write` permission to use\nthis endpoint."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runs",
										":run_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "run_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a remove token for an organization",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/actions/runners/remove-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"actions",
								"runners",
								"remove-token"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Warning:** The self-hosted runners API for organizations is currently in public beta and subject to change.\n\n\nReturns a token that you can pass to the `config` script to remove a self-hosted runner from an organization. The\ntoken expires after one hour. You must authenticate using an access token with the `admin:org` scope to use this\nendpoint.\n\n#### Example using remove token\n\nTo remove your self-hosted runner from an organization, replace `TOKEN` with the remove token provided by this\nendpoint.\n\n```\n./config.sh remove --token TOKEN\n```"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/runners/remove-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"runners",
										"remove-token"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"token\": \"AABF3JGZDX3P5PMEXLND6TS6FCWO6\",\n \"expires_at\": \"2020-01-29T12:13:35.123-08:00\"\n}"
						}
					]
				},
				{
					"name": "Get workflow run usage",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id/timing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runs",
								":run_id",
								"timing"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "run_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Warning:** This GitHub Actions usage endpoint is currently in public beta and subject to change. For more information, see \"[GitHub Actions API workflow usage](https://developer.github.com/changes/2020-05-15-actions-api-workflow-usage).\"\n\nGets the number of billable minutes and total run time for a specific workflow run. Billable minutes only apply to workflows in private repositories that use GitHub-hosted runners. Usage is listed for each GitHub-hosted runner operating system in milliseconds. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id/timing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runs",
										":run_id",
										"timing"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "run_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"billable\": {\n  \"UBUNTU\": {\n   \"total_ms\": 180000,\n   \"jobs\": 1\n  },\n  \"MACOS\": {\n   \"total_ms\": 240000,\n   \"jobs\": 4\n  },\n  \"WINDOWS\": {\n   \"total_ms\": 300000,\n   \"jobs\": 2\n  }\n },\n \"run_duration_ms\": 500000\n}"
						}
					]
				},
				{
					"name": "List selected repositories for an organization secret",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name/repositories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"actions",
								"secrets",
								":secret_name",
								"repositories"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "secret_name",
									"value": "aliquip sint",
									"description": "(Required) secret_name parameter"
								}
							]
						},
						"description": "Lists all repositories that have been selected when the `visibility` for repository access to a secret is set to `selected`. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"secrets",
										":secret_name",
										"repositories"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "secret_name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 1,\n \"repositories\": [\n  {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Set selected repositories for an organization secret",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"selected_repository_ids\": [\n        64780797\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name/repositories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"actions",
								"secrets",
								":secret_name",
								"repositories"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "secret_name",
									"value": "aliquip sint",
									"description": "(Required) secret_name parameter"
								}
							]
						},
						"description": "Replaces all repositories for an organization secret when the `visibility` for repository access is set to `selected`. The visibility is set when you [Create or update an organization secret](https://developer.github.com/v3/actions/secrets/#create-or-update-an-organization-secret). You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"selected_repository_ids\": [\n        64780797\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/secrets/:secret_name/repositories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"secrets",
										":secret_name",
										"repositories"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "secret_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an organization public key",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/actions/secrets/public-key",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"actions",
								"secrets",
								"public-key"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. You must authenticate using an access token with the `admin:org` scope to use this endpoint. GitHub Apps must have the `secrets` organization permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/actions/secrets/public-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"actions",
										"secrets",
										"public-key"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"key_id\": \"012345678912345678\",\n \"key\": \"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234\"\n}"
						}
					]
				},
				{
					"name": "Get a repository public key",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/secrets/public-key",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"secrets",
								"public-key"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Gets your public key, which you need to encrypt secrets. You need to encrypt a secret before you can create or update secrets. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `secrets` repository permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/secrets/public-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"secrets",
										"public-key"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"key_id\": \"012345678912345678\",\n \"key\": \"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234\"\n}"
						}
					]
				},
				{
					"name": "List workflow run artifacts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id/artifacts?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runs",
								":run_id",
								"artifacts"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "run_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists artifacts for a workflow run. Anyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs/:run_id/artifacts?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runs",
										":run_id",
										"artifacts"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "run_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 2,\n \"artifacts\": [\n  {\n   \"id\": 11,\n   \"node_id\": \"MDg6QXJ0aWZhY3QxMQ==\",\n   \"name\": \"Rails\",\n   \"size_in_bytes\": 556,\n   \"url\": \"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11\",\n   \"archive_download_url\": \"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/11/zip\",\n   \"expired\": false,\n   \"created_at\": \"2020-01-10T14:59:22Z\",\n   \"expires_at\": \"2020-03-21T14:59:22Z\",\n   \"updated_at\": \"2020-02-21T14:59:22Z\"\n  },\n  {\n   \"id\": 13,\n   \"node_id\": \"MDg6QXJ0aWZhY3QxMw==\",\n   \"name\": \"\",\n   \"size_in_bytes\": 453,\n   \"url\": \"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13\",\n   \"archive_download_url\": \"https://api.github.com/repos/octo-org/octo-docs/actions/artifacts/13/zip\",\n   \"expired\": false,\n   \"created_at\": \"2020-01-10T14:59:22Z\",\n   \"expires_at\": \"2020-03-21T14:59:22Z\",\n   \"updated_at\": \"2020-02-21T14:59:22Z\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a registration token for a repository",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runners/registration-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runners",
								"registration-token"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns a token that you can pass to the `config` script. The token expires after one hour. You must authenticate\nusing an access token with the `repo` scope to use this endpoint.\n\n#### Example using registration token\n \nConfigure your self-hosted runner, replacing `TOKEN` with the registration token provided by this endpoint.\n\n```\n./config.sh --url https://github.com/octo-org/octo-repo-artifacts --token TOKEN\n```"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runners/registration-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runners",
										"registration-token"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"token\": \"LLBF3JGZDX3P5PMEXLND6TS6FCWO6\",\n \"expires_at\": \"2020-01-22T12:13:35.123-08:00\"\n}"
						}
					]
				},
				{
					"name": "Create a remove token for a repository",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runners/remove-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runners",
								"remove-token"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns a token that you can pass to remove a self-hosted runner from a repository. The token expires after one hour.\nYou must authenticate using an access token with the `repo` scope to use this endpoint.\n\n#### Example using remove token\n \nTo remove your self-hosted runner from a repository, replace TOKEN with the remove token provided by this endpoint.\n\n```\n./config.sh remove --token TOKEN\n```"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runners/remove-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runners",
										"remove-token"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"token\": \"AABF3JGZDX3P5PMEXLND6TS6FCWO6\",\n \"expires_at\": \"2020-01-29T12:13:35.123-08:00\"\n}"
						}
					]
				},
				{
					"name": "List workflow runs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/workflows/:workflow_id/runs?actor=aliquip sint&branch=aliquip sint&event=aliquip sint&status=conclusion&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"workflows",
								":workflow_id",
								"runs"
							],
							"query": [
								{
									"key": "actor",
									"value": "aliquip sint",
									"description": "Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or workflow run."
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`."
								},
								{
									"key": "event",
									"value": "aliquip sint",
									"description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more information, see \"[Events that trigger workflows](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows).\""
								},
								{
									"key": "status",
									"value": "conclusion",
									"description": "Returns workflow runs associated with the check run `status` or `conclusion` you specify. For example, a conclusion can be `success` or a status can be `completed`. For more information, see the `status` and `conclusion` options available in \"[Create a check run](https://developer.github.com/v3/checks/runs/#create-a-check-run).\""
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "workflow_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "List all workflow runs for a workflow. You can also replace `:workflow_id` with `:workflow_file_name`. For example, you could use `main.yml`. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://developer.github.com/v3/#parameters).\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/workflows/:workflow_id/runs?actor=nisi reprehenderit&branch=nisi reprehenderit&event=nisi reprehenderit&status=completed&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"workflows",
										":workflow_id",
										"runs"
									],
									"query": [
										{
											"key": "actor",
											"value": "nisi reprehenderit"
										},
										{
											"key": "branch",
											"value": "nisi reprehenderit"
										},
										{
											"key": "event",
											"value": "nisi reprehenderit"
										},
										{
											"key": "status",
											"value": "completed"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "workflow_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 1,\n \"workflow_runs\": [\n  {\n   \"id\": 30433642,\n   \"node_id\": \"MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==\",\n   \"head_branch\": \"master\",\n   \"head_sha\": \"acb5820ced9479c074f688cc328bf03f341a511d\",\n   \"run_number\": 562,\n   \"event\": \"push\",\n   \"status\": \"queued\",\n   \"conclusion\": null,\n   \"workflow_id\": 159038,\n   \"url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642\",\n   \"html_url\": \"https://github.com/octo-org/octo-repo/actions/runs/30433642\",\n   \"pull_requests\": [],\n   \"created_at\": \"2020-01-22T19:33:08Z\",\n   \"updated_at\": \"2020-01-22T19:33:08Z\",\n   \"jobs_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs\",\n   \"logs_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs\",\n   \"check_suite_url\": \"https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374\",\n   \"artifacts_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts\",\n   \"cancel_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel\",\n   \"rerun_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun\",\n   \"workflow_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038\",\n   \"head_commit\": {\n    \"id\": \"acb5820ced9479c074f688cc328bf03f341a511d\",\n    \"tree_id\": \"d23f6eedb1e1b9610bbc754ddb5197bfe7271223\",\n    \"message\": \"Create linter.yml\",\n    \"timestamp\": \"2020-01-22T19:33:05Z\",\n    \"author\": {\n     \"name\": \"Octo Cat\",\n     \"email\": \"octocat@github.com\"\n    },\n    \"committer\": {\n     \"name\": \"GitHub\",\n     \"email\": \"noreply@github.com\"\n    }\n   },\n   \"repository\": {\n    \"id\": 1296269,\n    \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n    \"name\": \"Hello-World\",\n    \"full_name\": \"octocat/Hello-World\",\n    \"owner\": {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    },\n    \"private\": false,\n    \"html_url\": \"https://github.com/octocat/Hello-World\",\n    \"description\": \"This your first repo!\",\n    \"fork\": false,\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n    \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n    \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n    \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n    \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n    \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n    \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n    \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n    \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n    \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n    \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n    \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n    \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n    \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n    \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n    \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n    \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n    \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n    \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n    \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n    \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n    \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n    \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n    \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n    \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n    \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n    \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n    \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n    \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n    \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n    \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n    \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n    \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n    \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n    \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\"\n   },\n   \"head_repository\": {\n    \"id\": 217723378,\n    \"node_id\": \"MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=\",\n    \"name\": \"octo-repo\",\n    \"full_name\": \"octo-org/octo-repo\",\n    \"private\": true,\n    \"owner\": {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    },\n    \"html_url\": \"https://github.com/octo-org/octo-repo\",\n    \"description\": null,\n    \"fork\": false,\n    \"url\": \"https://api.github.com/repos/octo-org/octo-repo\",\n    \"forks_url\": \"https://api.github.com/repos/octo-org/octo-repo/forks\",\n    \"keys_url\": \"https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}\",\n    \"collaborators_url\": \"https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}\",\n    \"teams_url\": \"https://api.github.com/repos/octo-org/octo-repo/teams\",\n    \"hooks_url\": \"https://api.github.com/repos/octo-org/octo-repo/hooks\",\n    \"issue_events_url\": \"https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}\",\n    \"events_url\": \"https://api.github.com/repos/octo-org/octo-repo/events\",\n    \"assignees_url\": \"https://api.github.com/repos/octo-org/octo-repo/assignees{/user}\",\n    \"branches_url\": \"https://api.github.com/repos/octo-org/octo-repo/branches{/branch}\",\n    \"tags_url\": \"https://api.github.com/repos/octo-org/octo-repo/tags\",\n    \"blobs_url\": \"https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}\",\n    \"git_tags_url\": \"https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}\",\n    \"git_refs_url\": \"https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}\",\n    \"trees_url\": \"https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}\",\n    \"statuses_url\": \"https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}\",\n    \"languages_url\": \"https://api.github.com/repos/octo-org/octo-repo/languages\",\n    \"stargazers_url\": \"https://api.github.com/repos/octo-org/octo-repo/stargazers\",\n    \"contributors_url\": \"https://api.github.com/repos/octo-org/octo-repo/contributors\",\n    \"subscribers_url\": \"https://api.github.com/repos/octo-org/octo-repo/subscribers\",\n    \"subscription_url\": \"https://api.github.com/repos/octo-org/octo-repo/subscription\",\n    \"commits_url\": \"https://api.github.com/repos/octo-org/octo-repo/commits{/sha}\",\n    \"git_commits_url\": \"https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}\",\n    \"comments_url\": \"https://api.github.com/repos/octo-org/octo-repo/comments{/number}\",\n    \"issue_comment_url\": \"https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}\",\n    \"contents_url\": \"https://api.github.com/repos/octo-org/octo-repo/contents/{+path}\",\n    \"compare_url\": \"https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}\",\n    \"merges_url\": \"https://api.github.com/repos/octo-org/octo-repo/merges\",\n    \"archive_url\": \"https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}\",\n    \"downloads_url\": \"https://api.github.com/repos/octo-org/octo-repo/downloads\",\n    \"issues_url\": \"https://api.github.com/repos/octo-org/octo-repo/issues{/number}\",\n    \"pulls_url\": \"https://api.github.com/repos/octo-org/octo-repo/pulls{/number}\",\n    \"milestones_url\": \"https://api.github.com/repos/octo-org/octo-repo/milestones{/number}\",\n    \"notifications_url\": \"https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}\",\n    \"labels_url\": \"https://api.github.com/repos/octo-org/octo-repo/labels{/name}\",\n    \"releases_url\": \"https://api.github.com/repos/octo-org/octo-repo/releases{/id}\",\n    \"deployments_url\": \"https://api.github.com/repos/octo-org/octo-repo/deployments\"\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List workflow runs for a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs?actor=aliquip sint&branch=aliquip sint&event=aliquip sint&status=conclusion&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"actions",
								"runs"
							],
							"query": [
								{
									"key": "actor",
									"value": "aliquip sint",
									"description": "Returns someone's workflow runs. Use the login for the user who created the `push` associated with the check suite or workflow run."
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "Returns workflow runs associated with a branch. Use the name of the branch of the `push`."
								},
								{
									"key": "event",
									"value": "aliquip sint",
									"description": "Returns workflow run triggered by the event you specify. For example, `push`, `pull_request` or `issue`. For more information, see \"[Events that trigger workflows](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows).\""
								},
								{
									"key": "status",
									"value": "conclusion",
									"description": "Returns workflow runs associated with the check run `status` or `conclusion` you specify. For example, a conclusion can be `success` or a status can be `completed`. For more information, see the `status` and `conclusion` options available in \"[Create a check run](https://developer.github.com/v3/checks/runs/#create-a-check-run).\""
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists all workflow runs for a repository. You can use parameters to narrow the list of results. For more information about using parameters, see [Parameters](https://developer.github.com/v3/#parameters).\n\nAnyone with read access to the repository can use this endpoint. If the repository is private you must use an access token with the `repo` scope. GitHub Apps must have the `actions:read` permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/actions/runs?actor=nisi reprehenderit&branch=nisi reprehenderit&event=nisi reprehenderit&status=completed&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"actions",
										"runs"
									],
									"query": [
										{
											"key": "actor",
											"value": "nisi reprehenderit"
										},
										{
											"key": "branch",
											"value": "nisi reprehenderit"
										},
										{
											"key": "event",
											"value": "nisi reprehenderit"
										},
										{
											"key": "status",
											"value": "completed"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 1,\n \"workflow_runs\": [\n  {\n   \"id\": 30433642,\n   \"node_id\": \"MDEyOldvcmtmbG93IFJ1bjI2OTI4OQ==\",\n   \"head_branch\": \"master\",\n   \"head_sha\": \"acb5820ced9479c074f688cc328bf03f341a511d\",\n   \"run_number\": 562,\n   \"event\": \"push\",\n   \"status\": \"queued\",\n   \"conclusion\": null,\n   \"workflow_id\": 159038,\n   \"url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642\",\n   \"html_url\": \"https://github.com/octo-org/octo-repo/actions/runs/30433642\",\n   \"pull_requests\": [],\n   \"created_at\": \"2020-01-22T19:33:08Z\",\n   \"updated_at\": \"2020-01-22T19:33:08Z\",\n   \"jobs_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/jobs\",\n   \"logs_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/logs\",\n   \"check_suite_url\": \"https://api.github.com/repos/octo-org/octo-repo/check-suites/414944374\",\n   \"artifacts_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/artifacts\",\n   \"cancel_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/cancel\",\n   \"rerun_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/runs/30433642/rerun\",\n   \"workflow_url\": \"https://api.github.com/repos/octo-org/octo-repo/actions/workflows/159038\",\n   \"head_commit\": {\n    \"id\": \"acb5820ced9479c074f688cc328bf03f341a511d\",\n    \"tree_id\": \"d23f6eedb1e1b9610bbc754ddb5197bfe7271223\",\n    \"message\": \"Create linter.yml\",\n    \"timestamp\": \"2020-01-22T19:33:05Z\",\n    \"author\": {\n     \"name\": \"Octo Cat\",\n     \"email\": \"octocat@github.com\"\n    },\n    \"committer\": {\n     \"name\": \"GitHub\",\n     \"email\": \"noreply@github.com\"\n    }\n   },\n   \"repository\": {\n    \"id\": 1296269,\n    \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n    \"name\": \"Hello-World\",\n    \"full_name\": \"octocat/Hello-World\",\n    \"owner\": {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    },\n    \"private\": false,\n    \"html_url\": \"https://github.com/octocat/Hello-World\",\n    \"description\": \"This your first repo!\",\n    \"fork\": false,\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n    \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n    \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n    \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n    \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n    \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n    \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n    \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n    \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n    \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n    \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n    \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n    \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n    \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n    \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n    \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n    \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n    \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n    \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n    \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n    \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n    \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n    \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n    \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n    \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n    \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n    \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n    \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n    \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n    \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n    \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n    \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n    \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n    \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n    \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\"\n   },\n   \"head_repository\": {\n    \"id\": 217723378,\n    \"node_id\": \"MDEwOlJlcG9zaXRvcnkyMTc3MjMzNzg=\",\n    \"name\": \"octo-repo\",\n    \"full_name\": \"octo-org/octo-repo\",\n    \"private\": true,\n    \"owner\": {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    },\n    \"html_url\": \"https://github.com/octo-org/octo-repo\",\n    \"description\": null,\n    \"fork\": false,\n    \"url\": \"https://api.github.com/repos/octo-org/octo-repo\",\n    \"forks_url\": \"https://api.github.com/repos/octo-org/octo-repo/forks\",\n    \"keys_url\": \"https://api.github.com/repos/octo-org/octo-repo/keys{/key_id}\",\n    \"collaborators_url\": \"https://api.github.com/repos/octo-org/octo-repo/collaborators{/collaborator}\",\n    \"teams_url\": \"https://api.github.com/repos/octo-org/octo-repo/teams\",\n    \"hooks_url\": \"https://api.github.com/repos/octo-org/octo-repo/hooks\",\n    \"issue_events_url\": \"https://api.github.com/repos/octo-org/octo-repo/issues/events{/number}\",\n    \"events_url\": \"https://api.github.com/repos/octo-org/octo-repo/events\",\n    \"assignees_url\": \"https://api.github.com/repos/octo-org/octo-repo/assignees{/user}\",\n    \"branches_url\": \"https://api.github.com/repos/octo-org/octo-repo/branches{/branch}\",\n    \"tags_url\": \"https://api.github.com/repos/octo-org/octo-repo/tags\",\n    \"blobs_url\": \"https://api.github.com/repos/octo-org/octo-repo/git/blobs{/sha}\",\n    \"git_tags_url\": \"https://api.github.com/repos/octo-org/octo-repo/git/tags{/sha}\",\n    \"git_refs_url\": \"https://api.github.com/repos/octo-org/octo-repo/git/refs{/sha}\",\n    \"trees_url\": \"https://api.github.com/repos/octo-org/octo-repo/git/trees{/sha}\",\n    \"statuses_url\": \"https://api.github.com/repos/octo-org/octo-repo/statuses/{sha}\",\n    \"languages_url\": \"https://api.github.com/repos/octo-org/octo-repo/languages\",\n    \"stargazers_url\": \"https://api.github.com/repos/octo-org/octo-repo/stargazers\",\n    \"contributors_url\": \"https://api.github.com/repos/octo-org/octo-repo/contributors\",\n    \"subscribers_url\": \"https://api.github.com/repos/octo-org/octo-repo/subscribers\",\n    \"subscription_url\": \"https://api.github.com/repos/octo-org/octo-repo/subscription\",\n    \"commits_url\": \"https://api.github.com/repos/octo-org/octo-repo/commits{/sha}\",\n    \"git_commits_url\": \"https://api.github.com/repos/octo-org/octo-repo/git/commits{/sha}\",\n    \"comments_url\": \"https://api.github.com/repos/octo-org/octo-repo/comments{/number}\",\n    \"issue_comment_url\": \"https://api.github.com/repos/octo-org/octo-repo/issues/comments{/number}\",\n    \"contents_url\": \"https://api.github.com/repos/octo-org/octo-repo/contents/{+path}\",\n    \"compare_url\": \"https://api.github.com/repos/octo-org/octo-repo/compare/{base}...{head}\",\n    \"merges_url\": \"https://api.github.com/repos/octo-org/octo-repo/merges\",\n    \"archive_url\": \"https://api.github.com/repos/octo-org/octo-repo/{archive_format}{/ref}\",\n    \"downloads_url\": \"https://api.github.com/repos/octo-org/octo-repo/downloads\",\n    \"issues_url\": \"https://api.github.com/repos/octo-org/octo-repo/issues{/number}\",\n    \"pulls_url\": \"https://api.github.com/repos/octo-org/octo-repo/pulls{/number}\",\n    \"milestones_url\": \"https://api.github.com/repos/octo-org/octo-repo/milestones{/number}\",\n    \"notifications_url\": \"https://api.github.com/repos/octo-org/octo-repo/notifications{?since,all,participating}\",\n    \"labels_url\": \"https://api.github.com/repos/octo-org/octo-repo/labels{/name}\",\n    \"releases_url\": \"https://api.github.com/repos/octo-org/octo-repo/releases{/id}\",\n    \"deployments_url\": \"https://api.github.com/repos/octo-org/octo-repo/deployments\"\n   }\n  }\n ]\n}"
						}
					]
				}
			],
			"description": "Endpoints to manage GitHub Actions using the REST API.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "activity",
			"item": [
				{
					"name": "Get a repository subscription",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/subscription",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"subscription"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Response if you subscribe to the repository",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"subscription"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"subscribed\": true,\n \"ignored\": false,\n \"reason\": null,\n \"created_at\": \"2012-10-06T21:34:12Z\",\n \"url\": \"https://api.github.com/repos/octocat/example/subscription\",\n \"repository_url\": \"https://api.github.com/repos/octocat/example\"\n}"
						},
						{
							"name": "Response if you don't subscribe to the repository",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"subscription"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"subscription"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Set a repository subscription",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"subscribed\": true,\n    \"ignored\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/subscription",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"subscription"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "If you would like to watch a repository, set `subscribed` to `true`. If you would like to ignore notifications made within a repository, set `ignored` to `true`. If you would like to stop watching a repository, [delete the repository's subscription](https://developer.github.com/v3/activity/watching/#delete-a-repository-subscription) completely."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subscribed\": true,\n    \"ignored\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"subscription"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"subscribed\": true,\n \"ignored\": false,\n \"reason\": null,\n \"created_at\": \"2012-10-06T21:34:12Z\",\n \"url\": \"https://api.github.com/repos/octocat/example/subscription\",\n \"repository_url\": \"https://api.github.com/repos/octocat/example\"\n}"
						}
					]
				},
				{
					"name": "Delete a repository subscription",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/subscription",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"subscription"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "This endpoint should only be used to stop watching a repository. To control whether or not you wish to receive notifications from a repository, [set the repository's subscription manually](https://developer.github.com/v3/activity/watching/#set-a-repository-subscription)."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"subscription"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List public events for a network of repositories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/networks/:owner/:repo/events?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"networks",
								":owner",
								":repo",
								"events"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networks/:owner/:repo/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":owner",
										":repo",
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networks/:owner/:repo/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":owner",
										":repo",
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Moved Permanently",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networks/:owner/:repo/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":owner",
										":repo",
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Moved Permanently",
							"code": 301,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networks/:owner/:repo/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":owner",
										":repo",
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/networks/:owner/:repo/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"networks",
										":owner",
										":repo",
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"laboris culpa do\",\n  \"type\": \"pariatur labore cupidatat\",\n  \"actor\": {\n   \"id\": 88252344,\n   \"login\": \"dolor culpa\",\n   \"gravatar_id\": \"enim exercitation esse\",\n   \"url\": \"ullamco\",\n   \"avatar_url\": \"incididunt consequat sed dolo\",\n   \"display_login\": \"fugiat Ut id est\"\n  },\n  \"repo\": {\n   \"id\": -28870451,\n   \"name\": \"Lorem occaecat\",\n   \"url\": \"consectetur eiusmod sit\"\n  },\n  \"payload\": {\n   \"action\": \"non qui\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"officia\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -11408165,\n      \"node_id\": \"in ad ex consequat\",\n      \"url\": \"fugiat\",\n      \"name\": \"mollit ut offici\",\n      \"description\": \"deserunt\",\n      \"color\": \"laboris velit cillum\",\n      \"default\": true\n     },\n     {\n      \"id\": 83338791,\n      \"node_id\": \"officia aute quis\",\n      \"url\": \"deserunt id Lorem\",\n      \"name\": \"laboris Lorem\",\n      \"description\": \"ut esse aute est\",\n      \"color\": \"non laboris nulla est\",\n      \"default\": false\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": false,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"commodo ad sint esse\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"nostru\",\n     \"html_url\": \"nostrud elit qui\",\n     \"patch_url\": \"enim laboris\",\n     \"url\": \"cupidatat cillum\",\n     \"merged_at\": \"aliquip veniam sed\"\n    },\n    \"body_html\": \"officia ut sit\",\n    \"body_text\": \"officia sunt cupidatat consequat\",\n    \"timeline_url\": \"do dolor in volu\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": -61641183,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"culpa aliqua labore\",\n     \"archived\": true,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": 52988511,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"ut est\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -58779489,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": false,\n      \"pull\": false,\n      \"push\": false,\n      \"triage\": true,\n      \"maintain\": true\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"qui eiusmod do dolo\",\n      \"culpa mo\"\n     ],\n     \"visibility\": \"sint pariatur iru\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": -11723839,\n      \"node_id\": \"laboris\",\n      \"name\": \"dolor exercitation sunt\",\n      \"full_name\": \"elit qui veniam commodo\",\n      \"owner\": {\n       \"login\": \"ad dolore\",\n       \"id\": -96819604,\n       \"node_id\": \"non Ut nostrud elit\",\n       \"avatar_url\": \"aliquip esse ipsum\",\n       \"gravatar_id\": \"culpa\",\n       \"url\": \"cupidatat voluptate\",\n       \"html_url\": \"Duis in nulla\",\n       \"followers_url\": \"sed\",\n       \"following_url\": \"ex deserunt nisi\",\n       \"gists_url\": \"amet adipisicing aliqua\",\n       \"starred_url\": \"non voluptate Duis reprehenderit\",\n       \"subscriptions_url\": \"culpa aliquip sit\",\n       \"organizations_url\": \"consequat voluptate\",\n       \"repos_url\": \"officia\",\n       \"events_url\": \"in ea et\",\n       \"received_events_url\": \"fugiat esse cupid\",\n       \"type\": \"sed sit\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"dolore pariatur incididunt ad\",\n      \"description\": \"adipisicing dolore incididunt exercitation Excepteur\",\n      \"fork\": false,\n      \"url\": \"ea in officia in\",\n      \"archive_url\": \"dolor\",\n      \"assignees_url\": \"consequat est ut labore\",\n      \"blobs_url\": \"irure\",\n      \"branches_url\": \"et est qui\",\n      \"collaborators_url\": \"magn\",\n      \"comments_url\": \"non\",\n      \"commits_url\": \"veniam elit \",\n      \"compare_url\": \"adipisicing non\",\n      \"contents_url\": \"ut commodo cupidatat consequat\",\n      \"contributors_url\": \"officia ad cillum sed\",\n      \"deployments_url\": \"eiusmod non irure\",\n      \"downloads_url\": \"consequat amet adipisicing\",\n      \"events_url\": \"Lorem dolor\",\n      \"forks_url\": \"dolor labore id aliqua in\",\n      \"git_commits_url\": \"cillum Duis\",\n      \"git_refs_url\": \"dolor Excepteur in\",\n      \"git_tags_url\": \"esse Ut Excepteur minim\",\n      \"git_url\": \"Lorem officia sint laboris\",\n      \"issue_comment_url\": \"eiu\",\n      \"issue_events_url\": \"velit reprehenderit adipisicing magna esse\",\n      \"issues_url\": \"consequat\",\n      \"keys_url\": \"culpa non\",\n      \"labels_url\": \"nulla amet aliqua consequat\",\n      \"languages_url\": \"velit et ex nisi\",\n      \"merges_url\": \"incididunt commodo exercitation\",\n      \"milestones_url\": \"nostr\",\n      \"notifications_url\": \"Ut\",\n      \"pulls_url\": \"amet esse aute veniam\",\n      \"releases_url\": \"dolor sunt\",\n      \"ssh_url\": \"aliquip\",\n      \"stargazers_url\": \"Exce\",\n      \"statuses_url\": \"in tempor irure sed\",\n      \"subscribers_url\": \"ut laborum nulla voluptate\",\n      \"subscription_url\": \"cupidatat cillum\",\n      \"tags_url\": \"irure commodo dolor\",\n      \"teams_url\": \"cillum aliquip Lorem\",\n      \"trees_url\": \"eiusmod\",\n      \"clone_url\": \"adipisicing irure\",\n      \"mirror_url\": \"labore tempor dolore sed\",\n      \"hooks_url\": \"commodo ut voluptate\",\n      \"svn_url\": \"eiusmod consequat\",\n      \"homepage\": \"aliqua amet do officia\",\n      \"language\": \"id Duis consectetur\",\n      \"forks_count\": 36505039,\n      \"stargazers_count\": -15209385,\n      \"watchers_count\": 22691037,\n      \"size\": 52740972,\n      \"default_branch\": \"cupidatat dolor\",\n      \"open_issues_count\": -77157273,\n      \"is_template\": false,\n      \"topics\": [\n       \"magna Lorem ad elit\",\n       \"ut exercitation\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": false,\n      \"has_downloads\": true,\n      \"archived\": true,\n      \"disabled\": true,\n      \"visibility\": \"nisi\",\n      \"pushed_at\": \"laboris sint incididunt minim\",\n      \"created_at\": \"in velit\",\n      \"updated_at\": \"sunt eu\",\n      \"permissions\": {\n       \"admin\": false,\n       \"push\": false,\n       \"pull\": true\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"mollit anim irure\",\n      \"temp_clone_token\": \"deserunt nulla\",\n      \"allow_squash_merge\": false,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": false,\n      \"subscribers_count\": 46064079,\n      \"network_count\": 37676967\n     },\n     \"temp_clone_token\": \"ad dolor nulla eu in\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 69321673,\n     \"network_count\": 88749542,\n     \"master_branch\": \"veniam qui dolor magna nostrud\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"Duis culpa Excepteur consectetur minim\",\n    \"html_url\": \"Ut\",\n    \"issue_url\": \"consectetur nulla adipisicing ad\",\n    \"author_association\": \"nisi sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"commodo in reprehenderit\",\n    \"body_html\": \"magna amet ipsum\",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"fugiat occaecat laborum\",\n     \"total_count\": -50086991,\n     \"+1\": -89229718,\n     \"-1\": -87796879,\n     \"laugh\": -88359387,\n     \"confused\": -98245507,\n     \"heart\": 34607739,\n     \"hooray\": 26814181,\n     \"eyes\": -97041191,\n     \"rocket\": -27480535\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"in exercitation dolor\",\n     \"title\": \"eu c\",\n     \"summary\": \"proident Excepteur\",\n     \"action\": \"enim ullamco\",\n     \"sha\": \"ut pariatur esse Duis\",\n     \"html_url\": \"tempor voluptate magna dolore enim\"\n    },\n    {\n     \"page_name\": \"elit voluptate nostrud in\",\n     \"title\": \"laborum et nostrud in ven\",\n     \"summary\": \"consectetur anim in dolor\",\n     \"action\": \"ut laborum\",\n     \"sha\": \"aliqua dolor\",\n     \"html_url\": \"consequat \"\n    }\n   ]\n  },\n  \"public\": true,\n  \"created_at\": \"id et\",\n  \"org\": {\n   \"id\": -52767875,\n   \"login\": \"al\",\n   \"gravatar_id\": \"culpa\",\n   \"url\": \"voluptate sunt Lorem eu\",\n   \"avatar_url\": \"cillum ea\",\n   \"display_login\": \"laborum Lorem\"\n  }\n },\n {\n  \"id\": \"occaecat in commodo ad\",\n  \"type\": \"elit sunt laborum consectetur eiusmod\",\n  \"actor\": {\n   \"id\": -46334373,\n   \"login\": \"deserunt reprehenderit\",\n   \"gravatar_id\": \"eiusmod dolor\",\n   \"url\": \"consectetur nulla\",\n   \"avatar_url\": \"culpa esse non\",\n   \"display_login\": \"esse\"\n  },\n  \"repo\": {\n   \"id\": -64345412,\n   \"name\": \"eiusmod\",\n   \"url\": \"est dolor ad ullamco\"\n  },\n  \"payload\": {\n   \"action\": \"mollit minim commodo deserunt\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"voluptate velit mollit non anim\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -74276284,\n      \"node_id\": \"et paria\",\n      \"url\": \"anim Excepteur commod\",\n      \"name\": \"dolore amet enim non\",\n      \"description\": \"tempor Excepteur\",\n      \"color\": \"voluptate occaecat ipsum\",\n      \"default\": false\n     },\n     {\n      \"id\": -26952286,\n      \"node_id\": \"amet sed mollit elit\",\n      \"url\": \"nostrud ut non ut\",\n      \"name\": \"est nulla quis\",\n      \"description\": \"rep\",\n      \"color\": \"reprehenderit veniam\",\n      \"default\": true\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"enim\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"ea\",\n     \"html_url\": \"sunt labore\",\n     \"patch_url\": \"sed sint eiusmod exercitation\",\n     \"url\": \"Duis ullamco mo\",\n     \"merged_at\": \"eiusmod officia consectetur aute\"\n    },\n    \"body_html\": \"laborum cillum commodo\",\n    \"body_text\": \"elit fugiat ve\",\n    \"timeline_url\": \"commodo fugiat in in\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": 21821554,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"in irure\",\n     \"archived\": false,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": -43887097,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"dolor incididunt\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -85561529,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": true,\n      \"pull\": true,\n      \"push\": true,\n      \"triage\": false,\n      \"maintain\": false\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"in\",\n      \"id consequat anim labore nisi\"\n     ],\n     \"visibility\": \"enim in est\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": 89436410,\n      \"node_id\": \"amet minim esse ut\",\n      \"name\": \"ut laborum\",\n      \"full_name\": \"reprehenderit veniam minim\",\n      \"owner\": {\n       \"login\": \"est aute Excepteur\",\n       \"id\": -5716243,\n       \"node_id\": \"ex in est\",\n       \"avatar_url\": \"velit \",\n       \"gravatar_id\": \"dolore magna\",\n       \"url\": \"nisi\",\n       \"html_url\": \"eli\",\n       \"followers_url\": \"dolor elit eiusmod\",\n       \"following_url\": \"Ut qui voluptate do\",\n       \"gists_url\": \"aute laborum dolor\",\n       \"starred_url\": \"incididunt ad\",\n       \"subscriptions_url\": \"ea quis eu dolore\",\n       \"organizations_url\": \"amet ut\",\n       \"repos_url\": \"labore ut mollit laboris\",\n       \"events_url\": \"exercitation quis adipisicing voluptate ad\",\n       \"received_events_url\": \"cillum ut officia\",\n       \"type\": \"nostrud occaecat irure nisi\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"eiusmod voluptate magna\",\n      \"description\": \"enim dolore Duis esse elit\",\n      \"fork\": true,\n      \"url\": \"tempor quis do\",\n      \"archive_url\": \"dolore sunt anim Excepteur\",\n      \"assignees_url\": \"ea sunt voluptate deserunt\",\n      \"blobs_url\": \"tempor sint dolor amet\",\n      \"branches_url\": \"nulla in\",\n      \"collaborators_url\": \"ea mini\",\n      \"comments_url\": \"Lorem amet\",\n      \"commits_url\": \"id adipisicing cupidatat\",\n      \"compare_url\": \"veniam \",\n      \"contents_url\": \"Duis voluptate pariatur\",\n      \"contributors_url\": \"cupidatat in\",\n      \"deployments_url\": \"sunt\",\n      \"downloads_url\": \"cu\",\n      \"events_url\": \"Excepteur\",\n      \"forks_url\": \"sit\",\n      \"git_commits_url\": \"quis ullamco commodo\",\n      \"git_refs_url\": \"nulla esse\",\n      \"git_tags_url\": \"commodo in velit\",\n      \"git_url\": \"Duis cillum\",\n      \"issue_comment_url\": \"in non\",\n      \"issue_events_url\": \"culpa sint eu\",\n      \"issues_url\": \"ipsum irure do\",\n      \"keys_url\": \"Excepteur fugiat ut dolore\",\n      \"labels_url\": \"dolor esse\",\n      \"languages_url\": \"exercitation sunt culpa in anim\",\n      \"merges_url\": \"sed culpa\",\n      \"milestones_url\": \"cupidatat qui in do dolore\",\n      \"notifications_url\": \"deserunt reprehenderit mollit\",\n      \"pulls_url\": \"cillum ex\",\n      \"releases_url\": \"aute ullamco adipisicing\",\n      \"ssh_url\": \"enim sed dolor ex\",\n      \"stargazers_url\": \"commodo non adipisicing\",\n      \"statuses_url\": \"ex aliquip sint\",\n      \"subscribers_url\": \"nostrud magna adipisicing\",\n      \"subscription_url\": \"ex\",\n      \"tags_url\": \"anim\",\n      \"teams_url\": \"ex\",\n      \"trees_url\": \"consectetur ipsum\",\n      \"clone_url\": \"Duis sint do ullamco dolor\",\n      \"mirror_url\": \"elit incididunt\",\n      \"hooks_url\": \"Duis dolor\",\n      \"svn_url\": \"velit ea id dolore\",\n      \"homepage\": \"voluptate minim tempor cillum\",\n      \"language\": \"incididunt nulla dolor\",\n      \"forks_count\": -32686188,\n      \"stargazers_count\": -90392221,\n      \"watchers_count\": 36281082,\n      \"size\": 92194984,\n      \"default_branch\": \"cupidatat sint \",\n      \"open_issues_count\": -23082587,\n      \"is_template\": true,\n      \"topics\": [\n       \"enim irure in\",\n       \"eiusmod consectetur\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": true,\n      \"has_downloads\": true,\n      \"archived\": false,\n      \"disabled\": false,\n      \"visibility\": \"et\",\n      \"pushed_at\": \"qui proident eu\",\n      \"created_at\": \"mollit cillum\",\n      \"updated_at\": \"in voluptate ea\",\n      \"permissions\": {\n       \"admin\": true,\n       \"push\": true,\n       \"pull\": false\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"id culpa\",\n      \"temp_clone_token\": \"Lorem eiusmod\",\n      \"allow_squash_merge\": true,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": true,\n      \"subscribers_count\": 12516563,\n      \"network_count\": -82004674\n     },\n     \"temp_clone_token\": \"do officia\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 99943829,\n     \"network_count\": 87816874,\n     \"master_branch\": \"ipsum cillum sit est aliquip\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"ex\",\n    \"html_url\": \"dolor\",\n    \"issue_url\": \"laborum id Ut adipi\",\n    \"author_association\": \"sunt sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"Excepteur exercitation\",\n    \"body_html\": \"et \",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"anim ut mollit do\",\n     \"total_count\": -36608164,\n     \"+1\": 9688678,\n     \"-1\": 69639172,\n     \"laugh\": -43483940,\n     \"confused\": -65708964,\n     \"heart\": 17536132,\n     \"hooray\": 87391740,\n     \"eyes\": -38299912,\n     \"rocket\": 93806056\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"id eu\",\n     \"title\": \"nostrud elit Ut ipsum dolor\",\n     \"summary\": \"incididunt sed quis aliquip\",\n     \"action\": \"sunt ad\",\n     \"sha\": \"enim ut consequat\",\n     \"html_url\": \"dolor mollit ea nulla\"\n    },\n    {\n     \"page_name\": \"non aliq\",\n     \"title\": \"culpa elit fugiat cupidatat\",\n     \"summary\": \"qui reprehenderit ea \",\n     \"action\": \"ipsum dolor enim\",\n     \"sha\": \"velit dolore eiusmod in\",\n     \"html_url\": \"ut\"\n    }\n   ]\n  },\n  \"public\": false,\n  \"created_at\": \"laborum qui\",\n  \"org\": {\n   \"id\": 53209167,\n   \"login\": \"ut consequat dolor\",\n   \"gravatar_id\": \"anim nulla elit\",\n   \"url\": \"mollit qui\",\n   \"avatar_url\": \"do in aliqua esse est\",\n   \"display_login\": \"sunt\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "List repository events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/events?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"events"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"laboris culpa do\",\n  \"type\": \"pariatur labore cupidatat\",\n  \"actor\": {\n   \"id\": 88252344,\n   \"login\": \"dolor culpa\",\n   \"gravatar_id\": \"enim exercitation esse\",\n   \"url\": \"ullamco\",\n   \"avatar_url\": \"incididunt consequat sed dolo\",\n   \"display_login\": \"fugiat Ut id est\"\n  },\n  \"repo\": {\n   \"id\": -28870451,\n   \"name\": \"Lorem occaecat\",\n   \"url\": \"consectetur eiusmod sit\"\n  },\n  \"payload\": {\n   \"action\": \"non qui\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"officia\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -11408165,\n      \"node_id\": \"in ad ex consequat\",\n      \"url\": \"fugiat\",\n      \"name\": \"mollit ut offici\",\n      \"description\": \"deserunt\",\n      \"color\": \"laboris velit cillum\",\n      \"default\": true\n     },\n     {\n      \"id\": 83338791,\n      \"node_id\": \"officia aute quis\",\n      \"url\": \"deserunt id Lorem\",\n      \"name\": \"laboris Lorem\",\n      \"description\": \"ut esse aute est\",\n      \"color\": \"non laboris nulla est\",\n      \"default\": false\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": false,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"commodo ad sint esse\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"nostru\",\n     \"html_url\": \"nostrud elit qui\",\n     \"patch_url\": \"enim laboris\",\n     \"url\": \"cupidatat cillum\",\n     \"merged_at\": \"aliquip veniam sed\"\n    },\n    \"body_html\": \"officia ut sit\",\n    \"body_text\": \"officia sunt cupidatat consequat\",\n    \"timeline_url\": \"do dolor in volu\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": -61641183,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"culpa aliqua labore\",\n     \"archived\": true,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": 52988511,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"ut est\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -58779489,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": false,\n      \"pull\": false,\n      \"push\": false,\n      \"triage\": true,\n      \"maintain\": true\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"qui eiusmod do dolo\",\n      \"culpa mo\"\n     ],\n     \"visibility\": \"sint pariatur iru\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": -11723839,\n      \"node_id\": \"laboris\",\n      \"name\": \"dolor exercitation sunt\",\n      \"full_name\": \"elit qui veniam commodo\",\n      \"owner\": {\n       \"login\": \"ad dolore\",\n       \"id\": -96819604,\n       \"node_id\": \"non Ut nostrud elit\",\n       \"avatar_url\": \"aliquip esse ipsum\",\n       \"gravatar_id\": \"culpa\",\n       \"url\": \"cupidatat voluptate\",\n       \"html_url\": \"Duis in nulla\",\n       \"followers_url\": \"sed\",\n       \"following_url\": \"ex deserunt nisi\",\n       \"gists_url\": \"amet adipisicing aliqua\",\n       \"starred_url\": \"non voluptate Duis reprehenderit\",\n       \"subscriptions_url\": \"culpa aliquip sit\",\n       \"organizations_url\": \"consequat voluptate\",\n       \"repos_url\": \"officia\",\n       \"events_url\": \"in ea et\",\n       \"received_events_url\": \"fugiat esse cupid\",\n       \"type\": \"sed sit\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"dolore pariatur incididunt ad\",\n      \"description\": \"adipisicing dolore incididunt exercitation Excepteur\",\n      \"fork\": false,\n      \"url\": \"ea in officia in\",\n      \"archive_url\": \"dolor\",\n      \"assignees_url\": \"consequat est ut labore\",\n      \"blobs_url\": \"irure\",\n      \"branches_url\": \"et est qui\",\n      \"collaborators_url\": \"magn\",\n      \"comments_url\": \"non\",\n      \"commits_url\": \"veniam elit \",\n      \"compare_url\": \"adipisicing non\",\n      \"contents_url\": \"ut commodo cupidatat consequat\",\n      \"contributors_url\": \"officia ad cillum sed\",\n      \"deployments_url\": \"eiusmod non irure\",\n      \"downloads_url\": \"consequat amet adipisicing\",\n      \"events_url\": \"Lorem dolor\",\n      \"forks_url\": \"dolor labore id aliqua in\",\n      \"git_commits_url\": \"cillum Duis\",\n      \"git_refs_url\": \"dolor Excepteur in\",\n      \"git_tags_url\": \"esse Ut Excepteur minim\",\n      \"git_url\": \"Lorem officia sint laboris\",\n      \"issue_comment_url\": \"eiu\",\n      \"issue_events_url\": \"velit reprehenderit adipisicing magna esse\",\n      \"issues_url\": \"consequat\",\n      \"keys_url\": \"culpa non\",\n      \"labels_url\": \"nulla amet aliqua consequat\",\n      \"languages_url\": \"velit et ex nisi\",\n      \"merges_url\": \"incididunt commodo exercitation\",\n      \"milestones_url\": \"nostr\",\n      \"notifications_url\": \"Ut\",\n      \"pulls_url\": \"amet esse aute veniam\",\n      \"releases_url\": \"dolor sunt\",\n      \"ssh_url\": \"aliquip\",\n      \"stargazers_url\": \"Exce\",\n      \"statuses_url\": \"in tempor irure sed\",\n      \"subscribers_url\": \"ut laborum nulla voluptate\",\n      \"subscription_url\": \"cupidatat cillum\",\n      \"tags_url\": \"irure commodo dolor\",\n      \"teams_url\": \"cillum aliquip Lorem\",\n      \"trees_url\": \"eiusmod\",\n      \"clone_url\": \"adipisicing irure\",\n      \"mirror_url\": \"labore tempor dolore sed\",\n      \"hooks_url\": \"commodo ut voluptate\",\n      \"svn_url\": \"eiusmod consequat\",\n      \"homepage\": \"aliqua amet do officia\",\n      \"language\": \"id Duis consectetur\",\n      \"forks_count\": 36505039,\n      \"stargazers_count\": -15209385,\n      \"watchers_count\": 22691037,\n      \"size\": 52740972,\n      \"default_branch\": \"cupidatat dolor\",\n      \"open_issues_count\": -77157273,\n      \"is_template\": false,\n      \"topics\": [\n       \"magna Lorem ad elit\",\n       \"ut exercitation\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": false,\n      \"has_downloads\": true,\n      \"archived\": true,\n      \"disabled\": true,\n      \"visibility\": \"nisi\",\n      \"pushed_at\": \"laboris sint incididunt minim\",\n      \"created_at\": \"in velit\",\n      \"updated_at\": \"sunt eu\",\n      \"permissions\": {\n       \"admin\": false,\n       \"push\": false,\n       \"pull\": true\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"mollit anim irure\",\n      \"temp_clone_token\": \"deserunt nulla\",\n      \"allow_squash_merge\": false,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": false,\n      \"subscribers_count\": 46064079,\n      \"network_count\": 37676967\n     },\n     \"temp_clone_token\": \"ad dolor nulla eu in\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 69321673,\n     \"network_count\": 88749542,\n     \"master_branch\": \"veniam qui dolor magna nostrud\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"Duis culpa Excepteur consectetur minim\",\n    \"html_url\": \"Ut\",\n    \"issue_url\": \"consectetur nulla adipisicing ad\",\n    \"author_association\": \"nisi sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"commodo in reprehenderit\",\n    \"body_html\": \"magna amet ipsum\",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"fugiat occaecat laborum\",\n     \"total_count\": -50086991,\n     \"+1\": -89229718,\n     \"-1\": -87796879,\n     \"laugh\": -88359387,\n     \"confused\": -98245507,\n     \"heart\": 34607739,\n     \"hooray\": 26814181,\n     \"eyes\": -97041191,\n     \"rocket\": -27480535\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"in exercitation dolor\",\n     \"title\": \"eu c\",\n     \"summary\": \"proident Excepteur\",\n     \"action\": \"enim ullamco\",\n     \"sha\": \"ut pariatur esse Duis\",\n     \"html_url\": \"tempor voluptate magna dolore enim\"\n    },\n    {\n     \"page_name\": \"elit voluptate nostrud in\",\n     \"title\": \"laborum et nostrud in ven\",\n     \"summary\": \"consectetur anim in dolor\",\n     \"action\": \"ut laborum\",\n     \"sha\": \"aliqua dolor\",\n     \"html_url\": \"consequat \"\n    }\n   ]\n  },\n  \"public\": true,\n  \"created_at\": \"id et\",\n  \"org\": {\n   \"id\": -52767875,\n   \"login\": \"al\",\n   \"gravatar_id\": \"culpa\",\n   \"url\": \"voluptate sunt Lorem eu\",\n   \"avatar_url\": \"cillum ea\",\n   \"display_login\": \"laborum Lorem\"\n  }\n },\n {\n  \"id\": \"occaecat in commodo ad\",\n  \"type\": \"elit sunt laborum consectetur eiusmod\",\n  \"actor\": {\n   \"id\": -46334373,\n   \"login\": \"deserunt reprehenderit\",\n   \"gravatar_id\": \"eiusmod dolor\",\n   \"url\": \"consectetur nulla\",\n   \"avatar_url\": \"culpa esse non\",\n   \"display_login\": \"esse\"\n  },\n  \"repo\": {\n   \"id\": -64345412,\n   \"name\": \"eiusmod\",\n   \"url\": \"est dolor ad ullamco\"\n  },\n  \"payload\": {\n   \"action\": \"mollit minim commodo deserunt\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"voluptate velit mollit non anim\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -74276284,\n      \"node_id\": \"et paria\",\n      \"url\": \"anim Excepteur commod\",\n      \"name\": \"dolore amet enim non\",\n      \"description\": \"tempor Excepteur\",\n      \"color\": \"voluptate occaecat ipsum\",\n      \"default\": false\n     },\n     {\n      \"id\": -26952286,\n      \"node_id\": \"amet sed mollit elit\",\n      \"url\": \"nostrud ut non ut\",\n      \"name\": \"est nulla quis\",\n      \"description\": \"rep\",\n      \"color\": \"reprehenderit veniam\",\n      \"default\": true\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"enim\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"ea\",\n     \"html_url\": \"sunt labore\",\n     \"patch_url\": \"sed sint eiusmod exercitation\",\n     \"url\": \"Duis ullamco mo\",\n     \"merged_at\": \"eiusmod officia consectetur aute\"\n    },\n    \"body_html\": \"laborum cillum commodo\",\n    \"body_text\": \"elit fugiat ve\",\n    \"timeline_url\": \"commodo fugiat in in\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": 21821554,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"in irure\",\n     \"archived\": false,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": -43887097,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"dolor incididunt\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -85561529,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": true,\n      \"pull\": true,\n      \"push\": true,\n      \"triage\": false,\n      \"maintain\": false\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"in\",\n      \"id consequat anim labore nisi\"\n     ],\n     \"visibility\": \"enim in est\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": 89436410,\n      \"node_id\": \"amet minim esse ut\",\n      \"name\": \"ut laborum\",\n      \"full_name\": \"reprehenderit veniam minim\",\n      \"owner\": {\n       \"login\": \"est aute Excepteur\",\n       \"id\": -5716243,\n       \"node_id\": \"ex in est\",\n       \"avatar_url\": \"velit \",\n       \"gravatar_id\": \"dolore magna\",\n       \"url\": \"nisi\",\n       \"html_url\": \"eli\",\n       \"followers_url\": \"dolor elit eiusmod\",\n       \"following_url\": \"Ut qui voluptate do\",\n       \"gists_url\": \"aute laborum dolor\",\n       \"starred_url\": \"incididunt ad\",\n       \"subscriptions_url\": \"ea quis eu dolore\",\n       \"organizations_url\": \"amet ut\",\n       \"repos_url\": \"labore ut mollit laboris\",\n       \"events_url\": \"exercitation quis adipisicing voluptate ad\",\n       \"received_events_url\": \"cillum ut officia\",\n       \"type\": \"nostrud occaecat irure nisi\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"eiusmod voluptate magna\",\n      \"description\": \"enim dolore Duis esse elit\",\n      \"fork\": true,\n      \"url\": \"tempor quis do\",\n      \"archive_url\": \"dolore sunt anim Excepteur\",\n      \"assignees_url\": \"ea sunt voluptate deserunt\",\n      \"blobs_url\": \"tempor sint dolor amet\",\n      \"branches_url\": \"nulla in\",\n      \"collaborators_url\": \"ea mini\",\n      \"comments_url\": \"Lorem amet\",\n      \"commits_url\": \"id adipisicing cupidatat\",\n      \"compare_url\": \"veniam \",\n      \"contents_url\": \"Duis voluptate pariatur\",\n      \"contributors_url\": \"cupidatat in\",\n      \"deployments_url\": \"sunt\",\n      \"downloads_url\": \"cu\",\n      \"events_url\": \"Excepteur\",\n      \"forks_url\": \"sit\",\n      \"git_commits_url\": \"quis ullamco commodo\",\n      \"git_refs_url\": \"nulla esse\",\n      \"git_tags_url\": \"commodo in velit\",\n      \"git_url\": \"Duis cillum\",\n      \"issue_comment_url\": \"in non\",\n      \"issue_events_url\": \"culpa sint eu\",\n      \"issues_url\": \"ipsum irure do\",\n      \"keys_url\": \"Excepteur fugiat ut dolore\",\n      \"labels_url\": \"dolor esse\",\n      \"languages_url\": \"exercitation sunt culpa in anim\",\n      \"merges_url\": \"sed culpa\",\n      \"milestones_url\": \"cupidatat qui in do dolore\",\n      \"notifications_url\": \"deserunt reprehenderit mollit\",\n      \"pulls_url\": \"cillum ex\",\n      \"releases_url\": \"aute ullamco adipisicing\",\n      \"ssh_url\": \"enim sed dolor ex\",\n      \"stargazers_url\": \"commodo non adipisicing\",\n      \"statuses_url\": \"ex aliquip sint\",\n      \"subscribers_url\": \"nostrud magna adipisicing\",\n      \"subscription_url\": \"ex\",\n      \"tags_url\": \"anim\",\n      \"teams_url\": \"ex\",\n      \"trees_url\": \"consectetur ipsum\",\n      \"clone_url\": \"Duis sint do ullamco dolor\",\n      \"mirror_url\": \"elit incididunt\",\n      \"hooks_url\": \"Duis dolor\",\n      \"svn_url\": \"velit ea id dolore\",\n      \"homepage\": \"voluptate minim tempor cillum\",\n      \"language\": \"incididunt nulla dolor\",\n      \"forks_count\": -32686188,\n      \"stargazers_count\": -90392221,\n      \"watchers_count\": 36281082,\n      \"size\": 92194984,\n      \"default_branch\": \"cupidatat sint \",\n      \"open_issues_count\": -23082587,\n      \"is_template\": true,\n      \"topics\": [\n       \"enim irure in\",\n       \"eiusmod consectetur\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": true,\n      \"has_downloads\": true,\n      \"archived\": false,\n      \"disabled\": false,\n      \"visibility\": \"et\",\n      \"pushed_at\": \"qui proident eu\",\n      \"created_at\": \"mollit cillum\",\n      \"updated_at\": \"in voluptate ea\",\n      \"permissions\": {\n       \"admin\": true,\n       \"push\": true,\n       \"pull\": false\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"id culpa\",\n      \"temp_clone_token\": \"Lorem eiusmod\",\n      \"allow_squash_merge\": true,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": true,\n      \"subscribers_count\": 12516563,\n      \"network_count\": -82004674\n     },\n     \"temp_clone_token\": \"do officia\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 99943829,\n     \"network_count\": 87816874,\n     \"master_branch\": \"ipsum cillum sit est aliquip\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"ex\",\n    \"html_url\": \"dolor\",\n    \"issue_url\": \"laborum id Ut adipi\",\n    \"author_association\": \"sunt sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"Excepteur exercitation\",\n    \"body_html\": \"et \",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"anim ut mollit do\",\n     \"total_count\": -36608164,\n     \"+1\": 9688678,\n     \"-1\": 69639172,\n     \"laugh\": -43483940,\n     \"confused\": -65708964,\n     \"heart\": 17536132,\n     \"hooray\": 87391740,\n     \"eyes\": -38299912,\n     \"rocket\": 93806056\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"id eu\",\n     \"title\": \"nostrud elit Ut ipsum dolor\",\n     \"summary\": \"incididunt sed quis aliquip\",\n     \"action\": \"sunt ad\",\n     \"sha\": \"enim ut consequat\",\n     \"html_url\": \"dolor mollit ea nulla\"\n    },\n    {\n     \"page_name\": \"non aliq\",\n     \"title\": \"culpa elit fugiat cupidatat\",\n     \"summary\": \"qui reprehenderit ea \",\n     \"action\": \"ipsum dolor enim\",\n     \"sha\": \"velit dolore eiusmod in\",\n     \"html_url\": \"ut\"\n    }\n   ]\n  },\n  \"public\": false,\n  \"created_at\": \"laborum qui\",\n  \"org\": {\n   \"id\": 53209167,\n   \"login\": \"ut consequat dolor\",\n   \"gravatar_id\": \"anim nulla elit\",\n   \"url\": \"mollit qui\",\n   \"avatar_url\": \"do in aliqua esse est\",\n   \"display_login\": \"sunt\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "List public events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/events?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"events"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "We delay the public events feed by five minutes, which means the most recent event returned by the public events API actually occurred at least five minutes ago."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sint exercitation velit\",\n \"message\": \"cupidatat do velit ut\",\n \"documentation_url\": \"elit non dolore et eiusmod\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"laboris culpa do\",\n  \"type\": \"pariatur labore cupidatat\",\n  \"actor\": {\n   \"id\": 88252344,\n   \"login\": \"dolor culpa\",\n   \"gravatar_id\": \"enim exercitation esse\",\n   \"url\": \"ullamco\",\n   \"avatar_url\": \"incididunt consequat sed dolo\",\n   \"display_login\": \"fugiat Ut id est\"\n  },\n  \"repo\": {\n   \"id\": -28870451,\n   \"name\": \"Lorem occaecat\",\n   \"url\": \"consectetur eiusmod sit\"\n  },\n  \"payload\": {\n   \"action\": \"non qui\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"officia\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -11408165,\n      \"node_id\": \"in ad ex consequat\",\n      \"url\": \"fugiat\",\n      \"name\": \"mollit ut offici\",\n      \"description\": \"deserunt\",\n      \"color\": \"laboris velit cillum\",\n      \"default\": true\n     },\n     {\n      \"id\": 83338791,\n      \"node_id\": \"officia aute quis\",\n      \"url\": \"deserunt id Lorem\",\n      \"name\": \"laboris Lorem\",\n      \"description\": \"ut esse aute est\",\n      \"color\": \"non laboris nulla est\",\n      \"default\": false\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": false,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"commodo ad sint esse\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"nostru\",\n     \"html_url\": \"nostrud elit qui\",\n     \"patch_url\": \"enim laboris\",\n     \"url\": \"cupidatat cillum\",\n     \"merged_at\": \"aliquip veniam sed\"\n    },\n    \"body_html\": \"officia ut sit\",\n    \"body_text\": \"officia sunt cupidatat consequat\",\n    \"timeline_url\": \"do dolor in volu\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": -61641183,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"culpa aliqua labore\",\n     \"archived\": true,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": 52988511,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"ut est\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -58779489,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": false,\n      \"pull\": false,\n      \"push\": false,\n      \"triage\": true,\n      \"maintain\": true\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"qui eiusmod do dolo\",\n      \"culpa mo\"\n     ],\n     \"visibility\": \"sint pariatur iru\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": -11723839,\n      \"node_id\": \"laboris\",\n      \"name\": \"dolor exercitation sunt\",\n      \"full_name\": \"elit qui veniam commodo\",\n      \"owner\": {\n       \"login\": \"ad dolore\",\n       \"id\": -96819604,\n       \"node_id\": \"non Ut nostrud elit\",\n       \"avatar_url\": \"aliquip esse ipsum\",\n       \"gravatar_id\": \"culpa\",\n       \"url\": \"cupidatat voluptate\",\n       \"html_url\": \"Duis in nulla\",\n       \"followers_url\": \"sed\",\n       \"following_url\": \"ex deserunt nisi\",\n       \"gists_url\": \"amet adipisicing aliqua\",\n       \"starred_url\": \"non voluptate Duis reprehenderit\",\n       \"subscriptions_url\": \"culpa aliquip sit\",\n       \"organizations_url\": \"consequat voluptate\",\n       \"repos_url\": \"officia\",\n       \"events_url\": \"in ea et\",\n       \"received_events_url\": \"fugiat esse cupid\",\n       \"type\": \"sed sit\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"dolore pariatur incididunt ad\",\n      \"description\": \"adipisicing dolore incididunt exercitation Excepteur\",\n      \"fork\": false,\n      \"url\": \"ea in officia in\",\n      \"archive_url\": \"dolor\",\n      \"assignees_url\": \"consequat est ut labore\",\n      \"blobs_url\": \"irure\",\n      \"branches_url\": \"et est qui\",\n      \"collaborators_url\": \"magn\",\n      \"comments_url\": \"non\",\n      \"commits_url\": \"veniam elit \",\n      \"compare_url\": \"adipisicing non\",\n      \"contents_url\": \"ut commodo cupidatat consequat\",\n      \"contributors_url\": \"officia ad cillum sed\",\n      \"deployments_url\": \"eiusmod non irure\",\n      \"downloads_url\": \"consequat amet adipisicing\",\n      \"events_url\": \"Lorem dolor\",\n      \"forks_url\": \"dolor labore id aliqua in\",\n      \"git_commits_url\": \"cillum Duis\",\n      \"git_refs_url\": \"dolor Excepteur in\",\n      \"git_tags_url\": \"esse Ut Excepteur minim\",\n      \"git_url\": \"Lorem officia sint laboris\",\n      \"issue_comment_url\": \"eiu\",\n      \"issue_events_url\": \"velit reprehenderit adipisicing magna esse\",\n      \"issues_url\": \"consequat\",\n      \"keys_url\": \"culpa non\",\n      \"labels_url\": \"nulla amet aliqua consequat\",\n      \"languages_url\": \"velit et ex nisi\",\n      \"merges_url\": \"incididunt commodo exercitation\",\n      \"milestones_url\": \"nostr\",\n      \"notifications_url\": \"Ut\",\n      \"pulls_url\": \"amet esse aute veniam\",\n      \"releases_url\": \"dolor sunt\",\n      \"ssh_url\": \"aliquip\",\n      \"stargazers_url\": \"Exce\",\n      \"statuses_url\": \"in tempor irure sed\",\n      \"subscribers_url\": \"ut laborum nulla voluptate\",\n      \"subscription_url\": \"cupidatat cillum\",\n      \"tags_url\": \"irure commodo dolor\",\n      \"teams_url\": \"cillum aliquip Lorem\",\n      \"trees_url\": \"eiusmod\",\n      \"clone_url\": \"adipisicing irure\",\n      \"mirror_url\": \"labore tempor dolore sed\",\n      \"hooks_url\": \"commodo ut voluptate\",\n      \"svn_url\": \"eiusmod consequat\",\n      \"homepage\": \"aliqua amet do officia\",\n      \"language\": \"id Duis consectetur\",\n      \"forks_count\": 36505039,\n      \"stargazers_count\": -15209385,\n      \"watchers_count\": 22691037,\n      \"size\": 52740972,\n      \"default_branch\": \"cupidatat dolor\",\n      \"open_issues_count\": -77157273,\n      \"is_template\": false,\n      \"topics\": [\n       \"magna Lorem ad elit\",\n       \"ut exercitation\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": false,\n      \"has_downloads\": true,\n      \"archived\": true,\n      \"disabled\": true,\n      \"visibility\": \"nisi\",\n      \"pushed_at\": \"laboris sint incididunt minim\",\n      \"created_at\": \"in velit\",\n      \"updated_at\": \"sunt eu\",\n      \"permissions\": {\n       \"admin\": false,\n       \"push\": false,\n       \"pull\": true\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"mollit anim irure\",\n      \"temp_clone_token\": \"deserunt nulla\",\n      \"allow_squash_merge\": false,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": false,\n      \"subscribers_count\": 46064079,\n      \"network_count\": 37676967\n     },\n     \"temp_clone_token\": \"ad dolor nulla eu in\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 69321673,\n     \"network_count\": 88749542,\n     \"master_branch\": \"veniam qui dolor magna nostrud\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"Duis culpa Excepteur consectetur minim\",\n    \"html_url\": \"Ut\",\n    \"issue_url\": \"consectetur nulla adipisicing ad\",\n    \"author_association\": \"nisi sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"commodo in reprehenderit\",\n    \"body_html\": \"magna amet ipsum\",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"fugiat occaecat laborum\",\n     \"total_count\": -50086991,\n     \"+1\": -89229718,\n     \"-1\": -87796879,\n     \"laugh\": -88359387,\n     \"confused\": -98245507,\n     \"heart\": 34607739,\n     \"hooray\": 26814181,\n     \"eyes\": -97041191,\n     \"rocket\": -27480535\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"in exercitation dolor\",\n     \"title\": \"eu c\",\n     \"summary\": \"proident Excepteur\",\n     \"action\": \"enim ullamco\",\n     \"sha\": \"ut pariatur esse Duis\",\n     \"html_url\": \"tempor voluptate magna dolore enim\"\n    },\n    {\n     \"page_name\": \"elit voluptate nostrud in\",\n     \"title\": \"laborum et nostrud in ven\",\n     \"summary\": \"consectetur anim in dolor\",\n     \"action\": \"ut laborum\",\n     \"sha\": \"aliqua dolor\",\n     \"html_url\": \"consequat \"\n    }\n   ]\n  },\n  \"public\": true,\n  \"created_at\": \"id et\",\n  \"org\": {\n   \"id\": -52767875,\n   \"login\": \"al\",\n   \"gravatar_id\": \"culpa\",\n   \"url\": \"voluptate sunt Lorem eu\",\n   \"avatar_url\": \"cillum ea\",\n   \"display_login\": \"laborum Lorem\"\n  }\n },\n {\n  \"id\": \"occaecat in commodo ad\",\n  \"type\": \"elit sunt laborum consectetur eiusmod\",\n  \"actor\": {\n   \"id\": -46334373,\n   \"login\": \"deserunt reprehenderit\",\n   \"gravatar_id\": \"eiusmod dolor\",\n   \"url\": \"consectetur nulla\",\n   \"avatar_url\": \"culpa esse non\",\n   \"display_login\": \"esse\"\n  },\n  \"repo\": {\n   \"id\": -64345412,\n   \"name\": \"eiusmod\",\n   \"url\": \"est dolor ad ullamco\"\n  },\n  \"payload\": {\n   \"action\": \"mollit minim commodo deserunt\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"voluptate velit mollit non anim\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -74276284,\n      \"node_id\": \"et paria\",\n      \"url\": \"anim Excepteur commod\",\n      \"name\": \"dolore amet enim non\",\n      \"description\": \"tempor Excepteur\",\n      \"color\": \"voluptate occaecat ipsum\",\n      \"default\": false\n     },\n     {\n      \"id\": -26952286,\n      \"node_id\": \"amet sed mollit elit\",\n      \"url\": \"nostrud ut non ut\",\n      \"name\": \"est nulla quis\",\n      \"description\": \"rep\",\n      \"color\": \"reprehenderit veniam\",\n      \"default\": true\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"enim\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"ea\",\n     \"html_url\": \"sunt labore\",\n     \"patch_url\": \"sed sint eiusmod exercitation\",\n     \"url\": \"Duis ullamco mo\",\n     \"merged_at\": \"eiusmod officia consectetur aute\"\n    },\n    \"body_html\": \"laborum cillum commodo\",\n    \"body_text\": \"elit fugiat ve\",\n    \"timeline_url\": \"commodo fugiat in in\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": 21821554,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"in irure\",\n     \"archived\": false,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": -43887097,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"dolor incididunt\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -85561529,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": true,\n      \"pull\": true,\n      \"push\": true,\n      \"triage\": false,\n      \"maintain\": false\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"in\",\n      \"id consequat anim labore nisi\"\n     ],\n     \"visibility\": \"enim in est\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": 89436410,\n      \"node_id\": \"amet minim esse ut\",\n      \"name\": \"ut laborum\",\n      \"full_name\": \"reprehenderit veniam minim\",\n      \"owner\": {\n       \"login\": \"est aute Excepteur\",\n       \"id\": -5716243,\n       \"node_id\": \"ex in est\",\n       \"avatar_url\": \"velit \",\n       \"gravatar_id\": \"dolore magna\",\n       \"url\": \"nisi\",\n       \"html_url\": \"eli\",\n       \"followers_url\": \"dolor elit eiusmod\",\n       \"following_url\": \"Ut qui voluptate do\",\n       \"gists_url\": \"aute laborum dolor\",\n       \"starred_url\": \"incididunt ad\",\n       \"subscriptions_url\": \"ea quis eu dolore\",\n       \"organizations_url\": \"amet ut\",\n       \"repos_url\": \"labore ut mollit laboris\",\n       \"events_url\": \"exercitation quis adipisicing voluptate ad\",\n       \"received_events_url\": \"cillum ut officia\",\n       \"type\": \"nostrud occaecat irure nisi\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"eiusmod voluptate magna\",\n      \"description\": \"enim dolore Duis esse elit\",\n      \"fork\": true,\n      \"url\": \"tempor quis do\",\n      \"archive_url\": \"dolore sunt anim Excepteur\",\n      \"assignees_url\": \"ea sunt voluptate deserunt\",\n      \"blobs_url\": \"tempor sint dolor amet\",\n      \"branches_url\": \"nulla in\",\n      \"collaborators_url\": \"ea mini\",\n      \"comments_url\": \"Lorem amet\",\n      \"commits_url\": \"id adipisicing cupidatat\",\n      \"compare_url\": \"veniam \",\n      \"contents_url\": \"Duis voluptate pariatur\",\n      \"contributors_url\": \"cupidatat in\",\n      \"deployments_url\": \"sunt\",\n      \"downloads_url\": \"cu\",\n      \"events_url\": \"Excepteur\",\n      \"forks_url\": \"sit\",\n      \"git_commits_url\": \"quis ullamco commodo\",\n      \"git_refs_url\": \"nulla esse\",\n      \"git_tags_url\": \"commodo in velit\",\n      \"git_url\": \"Duis cillum\",\n      \"issue_comment_url\": \"in non\",\n      \"issue_events_url\": \"culpa sint eu\",\n      \"issues_url\": \"ipsum irure do\",\n      \"keys_url\": \"Excepteur fugiat ut dolore\",\n      \"labels_url\": \"dolor esse\",\n      \"languages_url\": \"exercitation sunt culpa in anim\",\n      \"merges_url\": \"sed culpa\",\n      \"milestones_url\": \"cupidatat qui in do dolore\",\n      \"notifications_url\": \"deserunt reprehenderit mollit\",\n      \"pulls_url\": \"cillum ex\",\n      \"releases_url\": \"aute ullamco adipisicing\",\n      \"ssh_url\": \"enim sed dolor ex\",\n      \"stargazers_url\": \"commodo non adipisicing\",\n      \"statuses_url\": \"ex aliquip sint\",\n      \"subscribers_url\": \"nostrud magna adipisicing\",\n      \"subscription_url\": \"ex\",\n      \"tags_url\": \"anim\",\n      \"teams_url\": \"ex\",\n      \"trees_url\": \"consectetur ipsum\",\n      \"clone_url\": \"Duis sint do ullamco dolor\",\n      \"mirror_url\": \"elit incididunt\",\n      \"hooks_url\": \"Duis dolor\",\n      \"svn_url\": \"velit ea id dolore\",\n      \"homepage\": \"voluptate minim tempor cillum\",\n      \"language\": \"incididunt nulla dolor\",\n      \"forks_count\": -32686188,\n      \"stargazers_count\": -90392221,\n      \"watchers_count\": 36281082,\n      \"size\": 92194984,\n      \"default_branch\": \"cupidatat sint \",\n      \"open_issues_count\": -23082587,\n      \"is_template\": true,\n      \"topics\": [\n       \"enim irure in\",\n       \"eiusmod consectetur\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": true,\n      \"has_downloads\": true,\n      \"archived\": false,\n      \"disabled\": false,\n      \"visibility\": \"et\",\n      \"pushed_at\": \"qui proident eu\",\n      \"created_at\": \"mollit cillum\",\n      \"updated_at\": \"in voluptate ea\",\n      \"permissions\": {\n       \"admin\": true,\n       \"push\": true,\n       \"pull\": false\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"id culpa\",\n      \"temp_clone_token\": \"Lorem eiusmod\",\n      \"allow_squash_merge\": true,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": true,\n      \"subscribers_count\": 12516563,\n      \"network_count\": -82004674\n     },\n     \"temp_clone_token\": \"do officia\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 99943829,\n     \"network_count\": 87816874,\n     \"master_branch\": \"ipsum cillum sit est aliquip\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"ex\",\n    \"html_url\": \"dolor\",\n    \"issue_url\": \"laborum id Ut adipi\",\n    \"author_association\": \"sunt sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"Excepteur exercitation\",\n    \"body_html\": \"et \",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"anim ut mollit do\",\n     \"total_count\": -36608164,\n     \"+1\": 9688678,\n     \"-1\": 69639172,\n     \"laugh\": -43483940,\n     \"confused\": -65708964,\n     \"heart\": 17536132,\n     \"hooray\": 87391740,\n     \"eyes\": -38299912,\n     \"rocket\": 93806056\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"id eu\",\n     \"title\": \"nostrud elit Ut ipsum dolor\",\n     \"summary\": \"incididunt sed quis aliquip\",\n     \"action\": \"sunt ad\",\n     \"sha\": \"enim ut consequat\",\n     \"html_url\": \"dolor mollit ea nulla\"\n    },\n    {\n     \"page_name\": \"non aliq\",\n     \"title\": \"culpa elit fugiat cupidatat\",\n     \"summary\": \"qui reprehenderit ea \",\n     \"action\": \"ipsum dolor enim\",\n     \"sha\": \"velit dolore eiusmod in\",\n     \"html_url\": \"ut\"\n    }\n   ]\n  },\n  \"public\": false,\n  \"created_at\": \"laborum qui\",\n  \"org\": {\n   \"id\": 53209167,\n   \"login\": \"ut consequat dolor\",\n   \"gravatar_id\": \"anim nulla elit\",\n   \"url\": \"mollit qui\",\n   \"avatar_url\": \"do in aliqua esse est\",\n   \"display_login\": \"sunt\"\n  }\n }\n]"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Unstar a repository for the authenticated user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/starred/:owner/:repo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"starred",
								":owner",
								":repo"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Star a repository for the authenticated user",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/starred/:owner/:repo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"starred",
								":owner",
								":repo"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\""
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Check if a repository is starred by the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/starred/:owner/:repo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"starred",
								":owner",
								":repo"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Response if this repository is starred by you",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response if this repository is not starred by you",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List public events for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/events/public?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"events",
								"public"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/events/public?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"events",
										"public"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"laboris culpa do\",\n  \"type\": \"pariatur labore cupidatat\",\n  \"actor\": {\n   \"id\": 88252344,\n   \"login\": \"dolor culpa\",\n   \"gravatar_id\": \"enim exercitation esse\",\n   \"url\": \"ullamco\",\n   \"avatar_url\": \"incididunt consequat sed dolo\",\n   \"display_login\": \"fugiat Ut id est\"\n  },\n  \"repo\": {\n   \"id\": -28870451,\n   \"name\": \"Lorem occaecat\",\n   \"url\": \"consectetur eiusmod sit\"\n  },\n  \"payload\": {\n   \"action\": \"non qui\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"officia\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -11408165,\n      \"node_id\": \"in ad ex consequat\",\n      \"url\": \"fugiat\",\n      \"name\": \"mollit ut offici\",\n      \"description\": \"deserunt\",\n      \"color\": \"laboris velit cillum\",\n      \"default\": true\n     },\n     {\n      \"id\": 83338791,\n      \"node_id\": \"officia aute quis\",\n      \"url\": \"deserunt id Lorem\",\n      \"name\": \"laboris Lorem\",\n      \"description\": \"ut esse aute est\",\n      \"color\": \"non laboris nulla est\",\n      \"default\": false\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": false,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"commodo ad sint esse\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"nostru\",\n     \"html_url\": \"nostrud elit qui\",\n     \"patch_url\": \"enim laboris\",\n     \"url\": \"cupidatat cillum\",\n     \"merged_at\": \"aliquip veniam sed\"\n    },\n    \"body_html\": \"officia ut sit\",\n    \"body_text\": \"officia sunt cupidatat consequat\",\n    \"timeline_url\": \"do dolor in volu\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": -61641183,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"culpa aliqua labore\",\n     \"archived\": true,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": 52988511,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"ut est\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -58779489,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": false,\n      \"pull\": false,\n      \"push\": false,\n      \"triage\": true,\n      \"maintain\": true\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"qui eiusmod do dolo\",\n      \"culpa mo\"\n     ],\n     \"visibility\": \"sint pariatur iru\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": -11723839,\n      \"node_id\": \"laboris\",\n      \"name\": \"dolor exercitation sunt\",\n      \"full_name\": \"elit qui veniam commodo\",\n      \"owner\": {\n       \"login\": \"ad dolore\",\n       \"id\": -96819604,\n       \"node_id\": \"non Ut nostrud elit\",\n       \"avatar_url\": \"aliquip esse ipsum\",\n       \"gravatar_id\": \"culpa\",\n       \"url\": \"cupidatat voluptate\",\n       \"html_url\": \"Duis in nulla\",\n       \"followers_url\": \"sed\",\n       \"following_url\": \"ex deserunt nisi\",\n       \"gists_url\": \"amet adipisicing aliqua\",\n       \"starred_url\": \"non voluptate Duis reprehenderit\",\n       \"subscriptions_url\": \"culpa aliquip sit\",\n       \"organizations_url\": \"consequat voluptate\",\n       \"repos_url\": \"officia\",\n       \"events_url\": \"in ea et\",\n       \"received_events_url\": \"fugiat esse cupid\",\n       \"type\": \"sed sit\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"dolore pariatur incididunt ad\",\n      \"description\": \"adipisicing dolore incididunt exercitation Excepteur\",\n      \"fork\": false,\n      \"url\": \"ea in officia in\",\n      \"archive_url\": \"dolor\",\n      \"assignees_url\": \"consequat est ut labore\",\n      \"blobs_url\": \"irure\",\n      \"branches_url\": \"et est qui\",\n      \"collaborators_url\": \"magn\",\n      \"comments_url\": \"non\",\n      \"commits_url\": \"veniam elit \",\n      \"compare_url\": \"adipisicing non\",\n      \"contents_url\": \"ut commodo cupidatat consequat\",\n      \"contributors_url\": \"officia ad cillum sed\",\n      \"deployments_url\": \"eiusmod non irure\",\n      \"downloads_url\": \"consequat amet adipisicing\",\n      \"events_url\": \"Lorem dolor\",\n      \"forks_url\": \"dolor labore id aliqua in\",\n      \"git_commits_url\": \"cillum Duis\",\n      \"git_refs_url\": \"dolor Excepteur in\",\n      \"git_tags_url\": \"esse Ut Excepteur minim\",\n      \"git_url\": \"Lorem officia sint laboris\",\n      \"issue_comment_url\": \"eiu\",\n      \"issue_events_url\": \"velit reprehenderit adipisicing magna esse\",\n      \"issues_url\": \"consequat\",\n      \"keys_url\": \"culpa non\",\n      \"labels_url\": \"nulla amet aliqua consequat\",\n      \"languages_url\": \"velit et ex nisi\",\n      \"merges_url\": \"incididunt commodo exercitation\",\n      \"milestones_url\": \"nostr\",\n      \"notifications_url\": \"Ut\",\n      \"pulls_url\": \"amet esse aute veniam\",\n      \"releases_url\": \"dolor sunt\",\n      \"ssh_url\": \"aliquip\",\n      \"stargazers_url\": \"Exce\",\n      \"statuses_url\": \"in tempor irure sed\",\n      \"subscribers_url\": \"ut laborum nulla voluptate\",\n      \"subscription_url\": \"cupidatat cillum\",\n      \"tags_url\": \"irure commodo dolor\",\n      \"teams_url\": \"cillum aliquip Lorem\",\n      \"trees_url\": \"eiusmod\",\n      \"clone_url\": \"adipisicing irure\",\n      \"mirror_url\": \"labore tempor dolore sed\",\n      \"hooks_url\": \"commodo ut voluptate\",\n      \"svn_url\": \"eiusmod consequat\",\n      \"homepage\": \"aliqua amet do officia\",\n      \"language\": \"id Duis consectetur\",\n      \"forks_count\": 36505039,\n      \"stargazers_count\": -15209385,\n      \"watchers_count\": 22691037,\n      \"size\": 52740972,\n      \"default_branch\": \"cupidatat dolor\",\n      \"open_issues_count\": -77157273,\n      \"is_template\": false,\n      \"topics\": [\n       \"magna Lorem ad elit\",\n       \"ut exercitation\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": false,\n      \"has_downloads\": true,\n      \"archived\": true,\n      \"disabled\": true,\n      \"visibility\": \"nisi\",\n      \"pushed_at\": \"laboris sint incididunt minim\",\n      \"created_at\": \"in velit\",\n      \"updated_at\": \"sunt eu\",\n      \"permissions\": {\n       \"admin\": false,\n       \"push\": false,\n       \"pull\": true\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"mollit anim irure\",\n      \"temp_clone_token\": \"deserunt nulla\",\n      \"allow_squash_merge\": false,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": false,\n      \"subscribers_count\": 46064079,\n      \"network_count\": 37676967\n     },\n     \"temp_clone_token\": \"ad dolor nulla eu in\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 69321673,\n     \"network_count\": 88749542,\n     \"master_branch\": \"veniam qui dolor magna nostrud\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"Duis culpa Excepteur consectetur minim\",\n    \"html_url\": \"Ut\",\n    \"issue_url\": \"consectetur nulla adipisicing ad\",\n    \"author_association\": \"nisi sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"commodo in reprehenderit\",\n    \"body_html\": \"magna amet ipsum\",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"fugiat occaecat laborum\",\n     \"total_count\": -50086991,\n     \"+1\": -89229718,\n     \"-1\": -87796879,\n     \"laugh\": -88359387,\n     \"confused\": -98245507,\n     \"heart\": 34607739,\n     \"hooray\": 26814181,\n     \"eyes\": -97041191,\n     \"rocket\": -27480535\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"in exercitation dolor\",\n     \"title\": \"eu c\",\n     \"summary\": \"proident Excepteur\",\n     \"action\": \"enim ullamco\",\n     \"sha\": \"ut pariatur esse Duis\",\n     \"html_url\": \"tempor voluptate magna dolore enim\"\n    },\n    {\n     \"page_name\": \"elit voluptate nostrud in\",\n     \"title\": \"laborum et nostrud in ven\",\n     \"summary\": \"consectetur anim in dolor\",\n     \"action\": \"ut laborum\",\n     \"sha\": \"aliqua dolor\",\n     \"html_url\": \"consequat \"\n    }\n   ]\n  },\n  \"public\": true,\n  \"created_at\": \"id et\",\n  \"org\": {\n   \"id\": -52767875,\n   \"login\": \"al\",\n   \"gravatar_id\": \"culpa\",\n   \"url\": \"voluptate sunt Lorem eu\",\n   \"avatar_url\": \"cillum ea\",\n   \"display_login\": \"laborum Lorem\"\n  }\n },\n {\n  \"id\": \"occaecat in commodo ad\",\n  \"type\": \"elit sunt laborum consectetur eiusmod\",\n  \"actor\": {\n   \"id\": -46334373,\n   \"login\": \"deserunt reprehenderit\",\n   \"gravatar_id\": \"eiusmod dolor\",\n   \"url\": \"consectetur nulla\",\n   \"avatar_url\": \"culpa esse non\",\n   \"display_login\": \"esse\"\n  },\n  \"repo\": {\n   \"id\": -64345412,\n   \"name\": \"eiusmod\",\n   \"url\": \"est dolor ad ullamco\"\n  },\n  \"payload\": {\n   \"action\": \"mollit minim commodo deserunt\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"voluptate velit mollit non anim\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -74276284,\n      \"node_id\": \"et paria\",\n      \"url\": \"anim Excepteur commod\",\n      \"name\": \"dolore amet enim non\",\n      \"description\": \"tempor Excepteur\",\n      \"color\": \"voluptate occaecat ipsum\",\n      \"default\": false\n     },\n     {\n      \"id\": -26952286,\n      \"node_id\": \"amet sed mollit elit\",\n      \"url\": \"nostrud ut non ut\",\n      \"name\": \"est nulla quis\",\n      \"description\": \"rep\",\n      \"color\": \"reprehenderit veniam\",\n      \"default\": true\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"enim\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"ea\",\n     \"html_url\": \"sunt labore\",\n     \"patch_url\": \"sed sint eiusmod exercitation\",\n     \"url\": \"Duis ullamco mo\",\n     \"merged_at\": \"eiusmod officia consectetur aute\"\n    },\n    \"body_html\": \"laborum cillum commodo\",\n    \"body_text\": \"elit fugiat ve\",\n    \"timeline_url\": \"commodo fugiat in in\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": 21821554,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"in irure\",\n     \"archived\": false,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": -43887097,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"dolor incididunt\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -85561529,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": true,\n      \"pull\": true,\n      \"push\": true,\n      \"triage\": false,\n      \"maintain\": false\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"in\",\n      \"id consequat anim labore nisi\"\n     ],\n     \"visibility\": \"enim in est\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": 89436410,\n      \"node_id\": \"amet minim esse ut\",\n      \"name\": \"ut laborum\",\n      \"full_name\": \"reprehenderit veniam minim\",\n      \"owner\": {\n       \"login\": \"est aute Excepteur\",\n       \"id\": -5716243,\n       \"node_id\": \"ex in est\",\n       \"avatar_url\": \"velit \",\n       \"gravatar_id\": \"dolore magna\",\n       \"url\": \"nisi\",\n       \"html_url\": \"eli\",\n       \"followers_url\": \"dolor elit eiusmod\",\n       \"following_url\": \"Ut qui voluptate do\",\n       \"gists_url\": \"aute laborum dolor\",\n       \"starred_url\": \"incididunt ad\",\n       \"subscriptions_url\": \"ea quis eu dolore\",\n       \"organizations_url\": \"amet ut\",\n       \"repos_url\": \"labore ut mollit laboris\",\n       \"events_url\": \"exercitation quis adipisicing voluptate ad\",\n       \"received_events_url\": \"cillum ut officia\",\n       \"type\": \"nostrud occaecat irure nisi\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"eiusmod voluptate magna\",\n      \"description\": \"enim dolore Duis esse elit\",\n      \"fork\": true,\n      \"url\": \"tempor quis do\",\n      \"archive_url\": \"dolore sunt anim Excepteur\",\n      \"assignees_url\": \"ea sunt voluptate deserunt\",\n      \"blobs_url\": \"tempor sint dolor amet\",\n      \"branches_url\": \"nulla in\",\n      \"collaborators_url\": \"ea mini\",\n      \"comments_url\": \"Lorem amet\",\n      \"commits_url\": \"id adipisicing cupidatat\",\n      \"compare_url\": \"veniam \",\n      \"contents_url\": \"Duis voluptate pariatur\",\n      \"contributors_url\": \"cupidatat in\",\n      \"deployments_url\": \"sunt\",\n      \"downloads_url\": \"cu\",\n      \"events_url\": \"Excepteur\",\n      \"forks_url\": \"sit\",\n      \"git_commits_url\": \"quis ullamco commodo\",\n      \"git_refs_url\": \"nulla esse\",\n      \"git_tags_url\": \"commodo in velit\",\n      \"git_url\": \"Duis cillum\",\n      \"issue_comment_url\": \"in non\",\n      \"issue_events_url\": \"culpa sint eu\",\n      \"issues_url\": \"ipsum irure do\",\n      \"keys_url\": \"Excepteur fugiat ut dolore\",\n      \"labels_url\": \"dolor esse\",\n      \"languages_url\": \"exercitation sunt culpa in anim\",\n      \"merges_url\": \"sed culpa\",\n      \"milestones_url\": \"cupidatat qui in do dolore\",\n      \"notifications_url\": \"deserunt reprehenderit mollit\",\n      \"pulls_url\": \"cillum ex\",\n      \"releases_url\": \"aute ullamco adipisicing\",\n      \"ssh_url\": \"enim sed dolor ex\",\n      \"stargazers_url\": \"commodo non adipisicing\",\n      \"statuses_url\": \"ex aliquip sint\",\n      \"subscribers_url\": \"nostrud magna adipisicing\",\n      \"subscription_url\": \"ex\",\n      \"tags_url\": \"anim\",\n      \"teams_url\": \"ex\",\n      \"trees_url\": \"consectetur ipsum\",\n      \"clone_url\": \"Duis sint do ullamco dolor\",\n      \"mirror_url\": \"elit incididunt\",\n      \"hooks_url\": \"Duis dolor\",\n      \"svn_url\": \"velit ea id dolore\",\n      \"homepage\": \"voluptate minim tempor cillum\",\n      \"language\": \"incididunt nulla dolor\",\n      \"forks_count\": -32686188,\n      \"stargazers_count\": -90392221,\n      \"watchers_count\": 36281082,\n      \"size\": 92194984,\n      \"default_branch\": \"cupidatat sint \",\n      \"open_issues_count\": -23082587,\n      \"is_template\": true,\n      \"topics\": [\n       \"enim irure in\",\n       \"eiusmod consectetur\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": true,\n      \"has_downloads\": true,\n      \"archived\": false,\n      \"disabled\": false,\n      \"visibility\": \"et\",\n      \"pushed_at\": \"qui proident eu\",\n      \"created_at\": \"mollit cillum\",\n      \"updated_at\": \"in voluptate ea\",\n      \"permissions\": {\n       \"admin\": true,\n       \"push\": true,\n       \"pull\": false\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"id culpa\",\n      \"temp_clone_token\": \"Lorem eiusmod\",\n      \"allow_squash_merge\": true,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": true,\n      \"subscribers_count\": 12516563,\n      \"network_count\": -82004674\n     },\n     \"temp_clone_token\": \"do officia\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 99943829,\n     \"network_count\": 87816874,\n     \"master_branch\": \"ipsum cillum sit est aliquip\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"ex\",\n    \"html_url\": \"dolor\",\n    \"issue_url\": \"laborum id Ut adipi\",\n    \"author_association\": \"sunt sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"Excepteur exercitation\",\n    \"body_html\": \"et \",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"anim ut mollit do\",\n     \"total_count\": -36608164,\n     \"+1\": 9688678,\n     \"-1\": 69639172,\n     \"laugh\": -43483940,\n     \"confused\": -65708964,\n     \"heart\": 17536132,\n     \"hooray\": 87391740,\n     \"eyes\": -38299912,\n     \"rocket\": 93806056\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"id eu\",\n     \"title\": \"nostrud elit Ut ipsum dolor\",\n     \"summary\": \"incididunt sed quis aliquip\",\n     \"action\": \"sunt ad\",\n     \"sha\": \"enim ut consequat\",\n     \"html_url\": \"dolor mollit ea nulla\"\n    },\n    {\n     \"page_name\": \"non aliq\",\n     \"title\": \"culpa elit fugiat cupidatat\",\n     \"summary\": \"qui reprehenderit ea \",\n     \"action\": \"ipsum dolor enim\",\n     \"sha\": \"velit dolore eiusmod in\",\n     \"html_url\": \"ut\"\n    }\n   ]\n  },\n  \"public\": false,\n  \"created_at\": \"laborum qui\",\n  \"org\": {\n   \"id\": 53209167,\n   \"login\": \"ut consequat dolor\",\n   \"gravatar_id\": \"anim nulla elit\",\n   \"url\": \"mollit qui\",\n   \"avatar_url\": \"do in aliqua esse est\",\n   \"display_login\": \"sunt\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "List repository notifications for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/notifications?all=true&participating=true&since=aliquip sint&before=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"notifications"
							],
							"query": [
								{
									"key": "all",
									"value": "true",
									"description": "If `true`, show notifications marked as read."
								},
								{
									"key": "participating",
									"value": "true",
									"description": "If `true`, only shows notifications in which the user is directly participating or mentioned."
								},
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "before",
									"value": "aliquip sint",
									"description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "List all notifications for the current user."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/notifications?all=true&participating=true&since=nisi reprehenderit&before=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"notifications"
									],
									"query": [
										{
											"key": "all",
											"value": "true"
										},
										{
											"key": "participating",
											"value": "true"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "before",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"1\",\n  \"repository\": {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\"\n  },\n  \"subject\": {\n   \"title\": \"Greetings\",\n   \"url\": \"https://api.github.com/repos/octokit/octokit.rb/issues/123\",\n   \"latest_comment_url\": \"https://api.github.com/repos/octokit/octokit.rb/issues/comments/123\",\n   \"type\": \"Issue\"\n  },\n  \"reason\": \"subscribed\",\n  \"unread\": true,\n  \"updated_at\": \"2014-11-07T22:01:45Z\",\n  \"last_read_at\": \"2014-11-07T22:01:45Z\",\n  \"url\": \"https://api.github.com/notifications/threads/1\"\n }\n]"
						}
					]
				},
				{
					"name": "Mark repository notifications as read",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"last_read_at\": \"laborum tempor veniam\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"notifications"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Marks all notifications in a repository as \"read\" removes them from the [default view on GitHub](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the [List repository notifications for the authenticated user](https://developer.github.com/v3/activity/notifications/#list-repository-notifications-for-the-authenticated-user) endpoint and pass the query parameter `all=false`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"last_read_at\": \"laborum tempor veniam\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"notifications"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List watchers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/subscribers?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"subscribers"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists the people watching the specified repository."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/subscribers?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"subscribers"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						}
					]
				},
				{
					"name": "List organization events for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/events/orgs/:org?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"events",
								"orgs",
								":org"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "This is the user's organization dashboard. You must be authenticated as the user to view this."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/events/orgs/:org?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"events",
										"orgs",
										":org"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										},
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"laboris culpa do\",\n  \"type\": \"pariatur labore cupidatat\",\n  \"actor\": {\n   \"id\": 88252344,\n   \"login\": \"dolor culpa\",\n   \"gravatar_id\": \"enim exercitation esse\",\n   \"url\": \"ullamco\",\n   \"avatar_url\": \"incididunt consequat sed dolo\",\n   \"display_login\": \"fugiat Ut id est\"\n  },\n  \"repo\": {\n   \"id\": -28870451,\n   \"name\": \"Lorem occaecat\",\n   \"url\": \"consectetur eiusmod sit\"\n  },\n  \"payload\": {\n   \"action\": \"non qui\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"officia\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -11408165,\n      \"node_id\": \"in ad ex consequat\",\n      \"url\": \"fugiat\",\n      \"name\": \"mollit ut offici\",\n      \"description\": \"deserunt\",\n      \"color\": \"laboris velit cillum\",\n      \"default\": true\n     },\n     {\n      \"id\": 83338791,\n      \"node_id\": \"officia aute quis\",\n      \"url\": \"deserunt id Lorem\",\n      \"name\": \"laboris Lorem\",\n      \"description\": \"ut esse aute est\",\n      \"color\": \"non laboris nulla est\",\n      \"default\": false\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": false,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"commodo ad sint esse\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"nostru\",\n     \"html_url\": \"nostrud elit qui\",\n     \"patch_url\": \"enim laboris\",\n     \"url\": \"cupidatat cillum\",\n     \"merged_at\": \"aliquip veniam sed\"\n    },\n    \"body_html\": \"officia ut sit\",\n    \"body_text\": \"officia sunt cupidatat consequat\",\n    \"timeline_url\": \"do dolor in volu\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": -61641183,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"culpa aliqua labore\",\n     \"archived\": true,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": 52988511,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"ut est\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -58779489,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": false,\n      \"pull\": false,\n      \"push\": false,\n      \"triage\": true,\n      \"maintain\": true\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"qui eiusmod do dolo\",\n      \"culpa mo\"\n     ],\n     \"visibility\": \"sint pariatur iru\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": -11723839,\n      \"node_id\": \"laboris\",\n      \"name\": \"dolor exercitation sunt\",\n      \"full_name\": \"elit qui veniam commodo\",\n      \"owner\": {\n       \"login\": \"ad dolore\",\n       \"id\": -96819604,\n       \"node_id\": \"non Ut nostrud elit\",\n       \"avatar_url\": \"aliquip esse ipsum\",\n       \"gravatar_id\": \"culpa\",\n       \"url\": \"cupidatat voluptate\",\n       \"html_url\": \"Duis in nulla\",\n       \"followers_url\": \"sed\",\n       \"following_url\": \"ex deserunt nisi\",\n       \"gists_url\": \"amet adipisicing aliqua\",\n       \"starred_url\": \"non voluptate Duis reprehenderit\",\n       \"subscriptions_url\": \"culpa aliquip sit\",\n       \"organizations_url\": \"consequat voluptate\",\n       \"repos_url\": \"officia\",\n       \"events_url\": \"in ea et\",\n       \"received_events_url\": \"fugiat esse cupid\",\n       \"type\": \"sed sit\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"dolore pariatur incididunt ad\",\n      \"description\": \"adipisicing dolore incididunt exercitation Excepteur\",\n      \"fork\": false,\n      \"url\": \"ea in officia in\",\n      \"archive_url\": \"dolor\",\n      \"assignees_url\": \"consequat est ut labore\",\n      \"blobs_url\": \"irure\",\n      \"branches_url\": \"et est qui\",\n      \"collaborators_url\": \"magn\",\n      \"comments_url\": \"non\",\n      \"commits_url\": \"veniam elit \",\n      \"compare_url\": \"adipisicing non\",\n      \"contents_url\": \"ut commodo cupidatat consequat\",\n      \"contributors_url\": \"officia ad cillum sed\",\n      \"deployments_url\": \"eiusmod non irure\",\n      \"downloads_url\": \"consequat amet adipisicing\",\n      \"events_url\": \"Lorem dolor\",\n      \"forks_url\": \"dolor labore id aliqua in\",\n      \"git_commits_url\": \"cillum Duis\",\n      \"git_refs_url\": \"dolor Excepteur in\",\n      \"git_tags_url\": \"esse Ut Excepteur minim\",\n      \"git_url\": \"Lorem officia sint laboris\",\n      \"issue_comment_url\": \"eiu\",\n      \"issue_events_url\": \"velit reprehenderit adipisicing magna esse\",\n      \"issues_url\": \"consequat\",\n      \"keys_url\": \"culpa non\",\n      \"labels_url\": \"nulla amet aliqua consequat\",\n      \"languages_url\": \"velit et ex nisi\",\n      \"merges_url\": \"incididunt commodo exercitation\",\n      \"milestones_url\": \"nostr\",\n      \"notifications_url\": \"Ut\",\n      \"pulls_url\": \"amet esse aute veniam\",\n      \"releases_url\": \"dolor sunt\",\n      \"ssh_url\": \"aliquip\",\n      \"stargazers_url\": \"Exce\",\n      \"statuses_url\": \"in tempor irure sed\",\n      \"subscribers_url\": \"ut laborum nulla voluptate\",\n      \"subscription_url\": \"cupidatat cillum\",\n      \"tags_url\": \"irure commodo dolor\",\n      \"teams_url\": \"cillum aliquip Lorem\",\n      \"trees_url\": \"eiusmod\",\n      \"clone_url\": \"adipisicing irure\",\n      \"mirror_url\": \"labore tempor dolore sed\",\n      \"hooks_url\": \"commodo ut voluptate\",\n      \"svn_url\": \"eiusmod consequat\",\n      \"homepage\": \"aliqua amet do officia\",\n      \"language\": \"id Duis consectetur\",\n      \"forks_count\": 36505039,\n      \"stargazers_count\": -15209385,\n      \"watchers_count\": 22691037,\n      \"size\": 52740972,\n      \"default_branch\": \"cupidatat dolor\",\n      \"open_issues_count\": -77157273,\n      \"is_template\": false,\n      \"topics\": [\n       \"magna Lorem ad elit\",\n       \"ut exercitation\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": false,\n      \"has_downloads\": true,\n      \"archived\": true,\n      \"disabled\": true,\n      \"visibility\": \"nisi\",\n      \"pushed_at\": \"laboris sint incididunt minim\",\n      \"created_at\": \"in velit\",\n      \"updated_at\": \"sunt eu\",\n      \"permissions\": {\n       \"admin\": false,\n       \"push\": false,\n       \"pull\": true\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"mollit anim irure\",\n      \"temp_clone_token\": \"deserunt nulla\",\n      \"allow_squash_merge\": false,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": false,\n      \"subscribers_count\": 46064079,\n      \"network_count\": 37676967\n     },\n     \"temp_clone_token\": \"ad dolor nulla eu in\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 69321673,\n     \"network_count\": 88749542,\n     \"master_branch\": \"veniam qui dolor magna nostrud\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"Duis culpa Excepteur consectetur minim\",\n    \"html_url\": \"Ut\",\n    \"issue_url\": \"consectetur nulla adipisicing ad\",\n    \"author_association\": \"nisi sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"commodo in reprehenderit\",\n    \"body_html\": \"magna amet ipsum\",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"fugiat occaecat laborum\",\n     \"total_count\": -50086991,\n     \"+1\": -89229718,\n     \"-1\": -87796879,\n     \"laugh\": -88359387,\n     \"confused\": -98245507,\n     \"heart\": 34607739,\n     \"hooray\": 26814181,\n     \"eyes\": -97041191,\n     \"rocket\": -27480535\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"in exercitation dolor\",\n     \"title\": \"eu c\",\n     \"summary\": \"proident Excepteur\",\n     \"action\": \"enim ullamco\",\n     \"sha\": \"ut pariatur esse Duis\",\n     \"html_url\": \"tempor voluptate magna dolore enim\"\n    },\n    {\n     \"page_name\": \"elit voluptate nostrud in\",\n     \"title\": \"laborum et nostrud in ven\",\n     \"summary\": \"consectetur anim in dolor\",\n     \"action\": \"ut laborum\",\n     \"sha\": \"aliqua dolor\",\n     \"html_url\": \"consequat \"\n    }\n   ]\n  },\n  \"public\": true,\n  \"created_at\": \"id et\",\n  \"org\": {\n   \"id\": -52767875,\n   \"login\": \"al\",\n   \"gravatar_id\": \"culpa\",\n   \"url\": \"voluptate sunt Lorem eu\",\n   \"avatar_url\": \"cillum ea\",\n   \"display_login\": \"laborum Lorem\"\n  }\n },\n {\n  \"id\": \"occaecat in commodo ad\",\n  \"type\": \"elit sunt laborum consectetur eiusmod\",\n  \"actor\": {\n   \"id\": -46334373,\n   \"login\": \"deserunt reprehenderit\",\n   \"gravatar_id\": \"eiusmod dolor\",\n   \"url\": \"consectetur nulla\",\n   \"avatar_url\": \"culpa esse non\",\n   \"display_login\": \"esse\"\n  },\n  \"repo\": {\n   \"id\": -64345412,\n   \"name\": \"eiusmod\",\n   \"url\": \"est dolor ad ullamco\"\n  },\n  \"payload\": {\n   \"action\": \"mollit minim commodo deserunt\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"voluptate velit mollit non anim\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -74276284,\n      \"node_id\": \"et paria\",\n      \"url\": \"anim Excepteur commod\",\n      \"name\": \"dolore amet enim non\",\n      \"description\": \"tempor Excepteur\",\n      \"color\": \"voluptate occaecat ipsum\",\n      \"default\": false\n     },\n     {\n      \"id\": -26952286,\n      \"node_id\": \"amet sed mollit elit\",\n      \"url\": \"nostrud ut non ut\",\n      \"name\": \"est nulla quis\",\n      \"description\": \"rep\",\n      \"color\": \"reprehenderit veniam\",\n      \"default\": true\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"enim\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"ea\",\n     \"html_url\": \"sunt labore\",\n     \"patch_url\": \"sed sint eiusmod exercitation\",\n     \"url\": \"Duis ullamco mo\",\n     \"merged_at\": \"eiusmod officia consectetur aute\"\n    },\n    \"body_html\": \"laborum cillum commodo\",\n    \"body_text\": \"elit fugiat ve\",\n    \"timeline_url\": \"commodo fugiat in in\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": 21821554,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"in irure\",\n     \"archived\": false,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": -43887097,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"dolor incididunt\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -85561529,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": true,\n      \"pull\": true,\n      \"push\": true,\n      \"triage\": false,\n      \"maintain\": false\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"in\",\n      \"id consequat anim labore nisi\"\n     ],\n     \"visibility\": \"enim in est\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": 89436410,\n      \"node_id\": \"amet minim esse ut\",\n      \"name\": \"ut laborum\",\n      \"full_name\": \"reprehenderit veniam minim\",\n      \"owner\": {\n       \"login\": \"est aute Excepteur\",\n       \"id\": -5716243,\n       \"node_id\": \"ex in est\",\n       \"avatar_url\": \"velit \",\n       \"gravatar_id\": \"dolore magna\",\n       \"url\": \"nisi\",\n       \"html_url\": \"eli\",\n       \"followers_url\": \"dolor elit eiusmod\",\n       \"following_url\": \"Ut qui voluptate do\",\n       \"gists_url\": \"aute laborum dolor\",\n       \"starred_url\": \"incididunt ad\",\n       \"subscriptions_url\": \"ea quis eu dolore\",\n       \"organizations_url\": \"amet ut\",\n       \"repos_url\": \"labore ut mollit laboris\",\n       \"events_url\": \"exercitation quis adipisicing voluptate ad\",\n       \"received_events_url\": \"cillum ut officia\",\n       \"type\": \"nostrud occaecat irure nisi\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"eiusmod voluptate magna\",\n      \"description\": \"enim dolore Duis esse elit\",\n      \"fork\": true,\n      \"url\": \"tempor quis do\",\n      \"archive_url\": \"dolore sunt anim Excepteur\",\n      \"assignees_url\": \"ea sunt voluptate deserunt\",\n      \"blobs_url\": \"tempor sint dolor amet\",\n      \"branches_url\": \"nulla in\",\n      \"collaborators_url\": \"ea mini\",\n      \"comments_url\": \"Lorem amet\",\n      \"commits_url\": \"id adipisicing cupidatat\",\n      \"compare_url\": \"veniam \",\n      \"contents_url\": \"Duis voluptate pariatur\",\n      \"contributors_url\": \"cupidatat in\",\n      \"deployments_url\": \"sunt\",\n      \"downloads_url\": \"cu\",\n      \"events_url\": \"Excepteur\",\n      \"forks_url\": \"sit\",\n      \"git_commits_url\": \"quis ullamco commodo\",\n      \"git_refs_url\": \"nulla esse\",\n      \"git_tags_url\": \"commodo in velit\",\n      \"git_url\": \"Duis cillum\",\n      \"issue_comment_url\": \"in non\",\n      \"issue_events_url\": \"culpa sint eu\",\n      \"issues_url\": \"ipsum irure do\",\n      \"keys_url\": \"Excepteur fugiat ut dolore\",\n      \"labels_url\": \"dolor esse\",\n      \"languages_url\": \"exercitation sunt culpa in anim\",\n      \"merges_url\": \"sed culpa\",\n      \"milestones_url\": \"cupidatat qui in do dolore\",\n      \"notifications_url\": \"deserunt reprehenderit mollit\",\n      \"pulls_url\": \"cillum ex\",\n      \"releases_url\": \"aute ullamco adipisicing\",\n      \"ssh_url\": \"enim sed dolor ex\",\n      \"stargazers_url\": \"commodo non adipisicing\",\n      \"statuses_url\": \"ex aliquip sint\",\n      \"subscribers_url\": \"nostrud magna adipisicing\",\n      \"subscription_url\": \"ex\",\n      \"tags_url\": \"anim\",\n      \"teams_url\": \"ex\",\n      \"trees_url\": \"consectetur ipsum\",\n      \"clone_url\": \"Duis sint do ullamco dolor\",\n      \"mirror_url\": \"elit incididunt\",\n      \"hooks_url\": \"Duis dolor\",\n      \"svn_url\": \"velit ea id dolore\",\n      \"homepage\": \"voluptate minim tempor cillum\",\n      \"language\": \"incididunt nulla dolor\",\n      \"forks_count\": -32686188,\n      \"stargazers_count\": -90392221,\n      \"watchers_count\": 36281082,\n      \"size\": 92194984,\n      \"default_branch\": \"cupidatat sint \",\n      \"open_issues_count\": -23082587,\n      \"is_template\": true,\n      \"topics\": [\n       \"enim irure in\",\n       \"eiusmod consectetur\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": true,\n      \"has_downloads\": true,\n      \"archived\": false,\n      \"disabled\": false,\n      \"visibility\": \"et\",\n      \"pushed_at\": \"qui proident eu\",\n      \"created_at\": \"mollit cillum\",\n      \"updated_at\": \"in voluptate ea\",\n      \"permissions\": {\n       \"admin\": true,\n       \"push\": true,\n       \"pull\": false\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"id culpa\",\n      \"temp_clone_token\": \"Lorem eiusmod\",\n      \"allow_squash_merge\": true,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": true,\n      \"subscribers_count\": 12516563,\n      \"network_count\": -82004674\n     },\n     \"temp_clone_token\": \"do officia\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 99943829,\n     \"network_count\": 87816874,\n     \"master_branch\": \"ipsum cillum sit est aliquip\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"ex\",\n    \"html_url\": \"dolor\",\n    \"issue_url\": \"laborum id Ut adipi\",\n    \"author_association\": \"sunt sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"Excepteur exercitation\",\n    \"body_html\": \"et \",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"anim ut mollit do\",\n     \"total_count\": -36608164,\n     \"+1\": 9688678,\n     \"-1\": 69639172,\n     \"laugh\": -43483940,\n     \"confused\": -65708964,\n     \"heart\": 17536132,\n     \"hooray\": 87391740,\n     \"eyes\": -38299912,\n     \"rocket\": 93806056\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"id eu\",\n     \"title\": \"nostrud elit Ut ipsum dolor\",\n     \"summary\": \"incididunt sed quis aliquip\",\n     \"action\": \"sunt ad\",\n     \"sha\": \"enim ut consequat\",\n     \"html_url\": \"dolor mollit ea nulla\"\n    },\n    {\n     \"page_name\": \"non aliq\",\n     \"title\": \"culpa elit fugiat cupidatat\",\n     \"summary\": \"qui reprehenderit ea \",\n     \"action\": \"ipsum dolor enim\",\n     \"sha\": \"velit dolore eiusmod in\",\n     \"html_url\": \"ut\"\n    }\n   ]\n  },\n  \"public\": false,\n  \"created_at\": \"laborum qui\",\n  \"org\": {\n   \"id\": 53209167,\n   \"login\": \"ut consequat dolor\",\n   \"gravatar_id\": \"anim nulla elit\",\n   \"url\": \"mollit qui\",\n   \"avatar_url\": \"do in aliqua esse est\",\n   \"display_login\": \"sunt\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "List public organization events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/events?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"events"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"laboris culpa do\",\n  \"type\": \"pariatur labore cupidatat\",\n  \"actor\": {\n   \"id\": 88252344,\n   \"login\": \"dolor culpa\",\n   \"gravatar_id\": \"enim exercitation esse\",\n   \"url\": \"ullamco\",\n   \"avatar_url\": \"incididunt consequat sed dolo\",\n   \"display_login\": \"fugiat Ut id est\"\n  },\n  \"repo\": {\n   \"id\": -28870451,\n   \"name\": \"Lorem occaecat\",\n   \"url\": \"consectetur eiusmod sit\"\n  },\n  \"payload\": {\n   \"action\": \"non qui\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"officia\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -11408165,\n      \"node_id\": \"in ad ex consequat\",\n      \"url\": \"fugiat\",\n      \"name\": \"mollit ut offici\",\n      \"description\": \"deserunt\",\n      \"color\": \"laboris velit cillum\",\n      \"default\": true\n     },\n     {\n      \"id\": 83338791,\n      \"node_id\": \"officia aute quis\",\n      \"url\": \"deserunt id Lorem\",\n      \"name\": \"laboris Lorem\",\n      \"description\": \"ut esse aute est\",\n      \"color\": \"non laboris nulla est\",\n      \"default\": false\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": false,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"commodo ad sint esse\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"nostru\",\n     \"html_url\": \"nostrud elit qui\",\n     \"patch_url\": \"enim laboris\",\n     \"url\": \"cupidatat cillum\",\n     \"merged_at\": \"aliquip veniam sed\"\n    },\n    \"body_html\": \"officia ut sit\",\n    \"body_text\": \"officia sunt cupidatat consequat\",\n    \"timeline_url\": \"do dolor in volu\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": -61641183,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"culpa aliqua labore\",\n     \"archived\": true,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": 52988511,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"ut est\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -58779489,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": false,\n      \"pull\": false,\n      \"push\": false,\n      \"triage\": true,\n      \"maintain\": true\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"qui eiusmod do dolo\",\n      \"culpa mo\"\n     ],\n     \"visibility\": \"sint pariatur iru\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": -11723839,\n      \"node_id\": \"laboris\",\n      \"name\": \"dolor exercitation sunt\",\n      \"full_name\": \"elit qui veniam commodo\",\n      \"owner\": {\n       \"login\": \"ad dolore\",\n       \"id\": -96819604,\n       \"node_id\": \"non Ut nostrud elit\",\n       \"avatar_url\": \"aliquip esse ipsum\",\n       \"gravatar_id\": \"culpa\",\n       \"url\": \"cupidatat voluptate\",\n       \"html_url\": \"Duis in nulla\",\n       \"followers_url\": \"sed\",\n       \"following_url\": \"ex deserunt nisi\",\n       \"gists_url\": \"amet adipisicing aliqua\",\n       \"starred_url\": \"non voluptate Duis reprehenderit\",\n       \"subscriptions_url\": \"culpa aliquip sit\",\n       \"organizations_url\": \"consequat voluptate\",\n       \"repos_url\": \"officia\",\n       \"events_url\": \"in ea et\",\n       \"received_events_url\": \"fugiat esse cupid\",\n       \"type\": \"sed sit\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"dolore pariatur incididunt ad\",\n      \"description\": \"adipisicing dolore incididunt exercitation Excepteur\",\n      \"fork\": false,\n      \"url\": \"ea in officia in\",\n      \"archive_url\": \"dolor\",\n      \"assignees_url\": \"consequat est ut labore\",\n      \"blobs_url\": \"irure\",\n      \"branches_url\": \"et est qui\",\n      \"collaborators_url\": \"magn\",\n      \"comments_url\": \"non\",\n      \"commits_url\": \"veniam elit \",\n      \"compare_url\": \"adipisicing non\",\n      \"contents_url\": \"ut commodo cupidatat consequat\",\n      \"contributors_url\": \"officia ad cillum sed\",\n      \"deployments_url\": \"eiusmod non irure\",\n      \"downloads_url\": \"consequat amet adipisicing\",\n      \"events_url\": \"Lorem dolor\",\n      \"forks_url\": \"dolor labore id aliqua in\",\n      \"git_commits_url\": \"cillum Duis\",\n      \"git_refs_url\": \"dolor Excepteur in\",\n      \"git_tags_url\": \"esse Ut Excepteur minim\",\n      \"git_url\": \"Lorem officia sint laboris\",\n      \"issue_comment_url\": \"eiu\",\n      \"issue_events_url\": \"velit reprehenderit adipisicing magna esse\",\n      \"issues_url\": \"consequat\",\n      \"keys_url\": \"culpa non\",\n      \"labels_url\": \"nulla amet aliqua consequat\",\n      \"languages_url\": \"velit et ex nisi\",\n      \"merges_url\": \"incididunt commodo exercitation\",\n      \"milestones_url\": \"nostr\",\n      \"notifications_url\": \"Ut\",\n      \"pulls_url\": \"amet esse aute veniam\",\n      \"releases_url\": \"dolor sunt\",\n      \"ssh_url\": \"aliquip\",\n      \"stargazers_url\": \"Exce\",\n      \"statuses_url\": \"in tempor irure sed\",\n      \"subscribers_url\": \"ut laborum nulla voluptate\",\n      \"subscription_url\": \"cupidatat cillum\",\n      \"tags_url\": \"irure commodo dolor\",\n      \"teams_url\": \"cillum aliquip Lorem\",\n      \"trees_url\": \"eiusmod\",\n      \"clone_url\": \"adipisicing irure\",\n      \"mirror_url\": \"labore tempor dolore sed\",\n      \"hooks_url\": \"commodo ut voluptate\",\n      \"svn_url\": \"eiusmod consequat\",\n      \"homepage\": \"aliqua amet do officia\",\n      \"language\": \"id Duis consectetur\",\n      \"forks_count\": 36505039,\n      \"stargazers_count\": -15209385,\n      \"watchers_count\": 22691037,\n      \"size\": 52740972,\n      \"default_branch\": \"cupidatat dolor\",\n      \"open_issues_count\": -77157273,\n      \"is_template\": false,\n      \"topics\": [\n       \"magna Lorem ad elit\",\n       \"ut exercitation\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": false,\n      \"has_downloads\": true,\n      \"archived\": true,\n      \"disabled\": true,\n      \"visibility\": \"nisi\",\n      \"pushed_at\": \"laboris sint incididunt minim\",\n      \"created_at\": \"in velit\",\n      \"updated_at\": \"sunt eu\",\n      \"permissions\": {\n       \"admin\": false,\n       \"push\": false,\n       \"pull\": true\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"mollit anim irure\",\n      \"temp_clone_token\": \"deserunt nulla\",\n      \"allow_squash_merge\": false,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": false,\n      \"subscribers_count\": 46064079,\n      \"network_count\": 37676967\n     },\n     \"temp_clone_token\": \"ad dolor nulla eu in\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 69321673,\n     \"network_count\": 88749542,\n     \"master_branch\": \"veniam qui dolor magna nostrud\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"Duis culpa Excepteur consectetur minim\",\n    \"html_url\": \"Ut\",\n    \"issue_url\": \"consectetur nulla adipisicing ad\",\n    \"author_association\": \"nisi sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"commodo in reprehenderit\",\n    \"body_html\": \"magna amet ipsum\",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"fugiat occaecat laborum\",\n     \"total_count\": -50086991,\n     \"+1\": -89229718,\n     \"-1\": -87796879,\n     \"laugh\": -88359387,\n     \"confused\": -98245507,\n     \"heart\": 34607739,\n     \"hooray\": 26814181,\n     \"eyes\": -97041191,\n     \"rocket\": -27480535\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"in exercitation dolor\",\n     \"title\": \"eu c\",\n     \"summary\": \"proident Excepteur\",\n     \"action\": \"enim ullamco\",\n     \"sha\": \"ut pariatur esse Duis\",\n     \"html_url\": \"tempor voluptate magna dolore enim\"\n    },\n    {\n     \"page_name\": \"elit voluptate nostrud in\",\n     \"title\": \"laborum et nostrud in ven\",\n     \"summary\": \"consectetur anim in dolor\",\n     \"action\": \"ut laborum\",\n     \"sha\": \"aliqua dolor\",\n     \"html_url\": \"consequat \"\n    }\n   ]\n  },\n  \"public\": true,\n  \"created_at\": \"id et\",\n  \"org\": {\n   \"id\": -52767875,\n   \"login\": \"al\",\n   \"gravatar_id\": \"culpa\",\n   \"url\": \"voluptate sunt Lorem eu\",\n   \"avatar_url\": \"cillum ea\",\n   \"display_login\": \"laborum Lorem\"\n  }\n },\n {\n  \"id\": \"occaecat in commodo ad\",\n  \"type\": \"elit sunt laborum consectetur eiusmod\",\n  \"actor\": {\n   \"id\": -46334373,\n   \"login\": \"deserunt reprehenderit\",\n   \"gravatar_id\": \"eiusmod dolor\",\n   \"url\": \"consectetur nulla\",\n   \"avatar_url\": \"culpa esse non\",\n   \"display_login\": \"esse\"\n  },\n  \"repo\": {\n   \"id\": -64345412,\n   \"name\": \"eiusmod\",\n   \"url\": \"est dolor ad ullamco\"\n  },\n  \"payload\": {\n   \"action\": \"mollit minim commodo deserunt\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"voluptate velit mollit non anim\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -74276284,\n      \"node_id\": \"et paria\",\n      \"url\": \"anim Excepteur commod\",\n      \"name\": \"dolore amet enim non\",\n      \"description\": \"tempor Excepteur\",\n      \"color\": \"voluptate occaecat ipsum\",\n      \"default\": false\n     },\n     {\n      \"id\": -26952286,\n      \"node_id\": \"amet sed mollit elit\",\n      \"url\": \"nostrud ut non ut\",\n      \"name\": \"est nulla quis\",\n      \"description\": \"rep\",\n      \"color\": \"reprehenderit veniam\",\n      \"default\": true\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"enim\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"ea\",\n     \"html_url\": \"sunt labore\",\n     \"patch_url\": \"sed sint eiusmod exercitation\",\n     \"url\": \"Duis ullamco mo\",\n     \"merged_at\": \"eiusmod officia consectetur aute\"\n    },\n    \"body_html\": \"laborum cillum commodo\",\n    \"body_text\": \"elit fugiat ve\",\n    \"timeline_url\": \"commodo fugiat in in\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": 21821554,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"in irure\",\n     \"archived\": false,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": -43887097,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"dolor incididunt\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -85561529,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": true,\n      \"pull\": true,\n      \"push\": true,\n      \"triage\": false,\n      \"maintain\": false\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"in\",\n      \"id consequat anim labore nisi\"\n     ],\n     \"visibility\": \"enim in est\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": 89436410,\n      \"node_id\": \"amet minim esse ut\",\n      \"name\": \"ut laborum\",\n      \"full_name\": \"reprehenderit veniam minim\",\n      \"owner\": {\n       \"login\": \"est aute Excepteur\",\n       \"id\": -5716243,\n       \"node_id\": \"ex in est\",\n       \"avatar_url\": \"velit \",\n       \"gravatar_id\": \"dolore magna\",\n       \"url\": \"nisi\",\n       \"html_url\": \"eli\",\n       \"followers_url\": \"dolor elit eiusmod\",\n       \"following_url\": \"Ut qui voluptate do\",\n       \"gists_url\": \"aute laborum dolor\",\n       \"starred_url\": \"incididunt ad\",\n       \"subscriptions_url\": \"ea quis eu dolore\",\n       \"organizations_url\": \"amet ut\",\n       \"repos_url\": \"labore ut mollit laboris\",\n       \"events_url\": \"exercitation quis adipisicing voluptate ad\",\n       \"received_events_url\": \"cillum ut officia\",\n       \"type\": \"nostrud occaecat irure nisi\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"eiusmod voluptate magna\",\n      \"description\": \"enim dolore Duis esse elit\",\n      \"fork\": true,\n      \"url\": \"tempor quis do\",\n      \"archive_url\": \"dolore sunt anim Excepteur\",\n      \"assignees_url\": \"ea sunt voluptate deserunt\",\n      \"blobs_url\": \"tempor sint dolor amet\",\n      \"branches_url\": \"nulla in\",\n      \"collaborators_url\": \"ea mini\",\n      \"comments_url\": \"Lorem amet\",\n      \"commits_url\": \"id adipisicing cupidatat\",\n      \"compare_url\": \"veniam \",\n      \"contents_url\": \"Duis voluptate pariatur\",\n      \"contributors_url\": \"cupidatat in\",\n      \"deployments_url\": \"sunt\",\n      \"downloads_url\": \"cu\",\n      \"events_url\": \"Excepteur\",\n      \"forks_url\": \"sit\",\n      \"git_commits_url\": \"quis ullamco commodo\",\n      \"git_refs_url\": \"nulla esse\",\n      \"git_tags_url\": \"commodo in velit\",\n      \"git_url\": \"Duis cillum\",\n      \"issue_comment_url\": \"in non\",\n      \"issue_events_url\": \"culpa sint eu\",\n      \"issues_url\": \"ipsum irure do\",\n      \"keys_url\": \"Excepteur fugiat ut dolore\",\n      \"labels_url\": \"dolor esse\",\n      \"languages_url\": \"exercitation sunt culpa in anim\",\n      \"merges_url\": \"sed culpa\",\n      \"milestones_url\": \"cupidatat qui in do dolore\",\n      \"notifications_url\": \"deserunt reprehenderit mollit\",\n      \"pulls_url\": \"cillum ex\",\n      \"releases_url\": \"aute ullamco adipisicing\",\n      \"ssh_url\": \"enim sed dolor ex\",\n      \"stargazers_url\": \"commodo non adipisicing\",\n      \"statuses_url\": \"ex aliquip sint\",\n      \"subscribers_url\": \"nostrud magna adipisicing\",\n      \"subscription_url\": \"ex\",\n      \"tags_url\": \"anim\",\n      \"teams_url\": \"ex\",\n      \"trees_url\": \"consectetur ipsum\",\n      \"clone_url\": \"Duis sint do ullamco dolor\",\n      \"mirror_url\": \"elit incididunt\",\n      \"hooks_url\": \"Duis dolor\",\n      \"svn_url\": \"velit ea id dolore\",\n      \"homepage\": \"voluptate minim tempor cillum\",\n      \"language\": \"incididunt nulla dolor\",\n      \"forks_count\": -32686188,\n      \"stargazers_count\": -90392221,\n      \"watchers_count\": 36281082,\n      \"size\": 92194984,\n      \"default_branch\": \"cupidatat sint \",\n      \"open_issues_count\": -23082587,\n      \"is_template\": true,\n      \"topics\": [\n       \"enim irure in\",\n       \"eiusmod consectetur\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": true,\n      \"has_downloads\": true,\n      \"archived\": false,\n      \"disabled\": false,\n      \"visibility\": \"et\",\n      \"pushed_at\": \"qui proident eu\",\n      \"created_at\": \"mollit cillum\",\n      \"updated_at\": \"in voluptate ea\",\n      \"permissions\": {\n       \"admin\": true,\n       \"push\": true,\n       \"pull\": false\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"id culpa\",\n      \"temp_clone_token\": \"Lorem eiusmod\",\n      \"allow_squash_merge\": true,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": true,\n      \"subscribers_count\": 12516563,\n      \"network_count\": -82004674\n     },\n     \"temp_clone_token\": \"do officia\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 99943829,\n     \"network_count\": 87816874,\n     \"master_branch\": \"ipsum cillum sit est aliquip\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"ex\",\n    \"html_url\": \"dolor\",\n    \"issue_url\": \"laborum id Ut adipi\",\n    \"author_association\": \"sunt sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"Excepteur exercitation\",\n    \"body_html\": \"et \",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"anim ut mollit do\",\n     \"total_count\": -36608164,\n     \"+1\": 9688678,\n     \"-1\": 69639172,\n     \"laugh\": -43483940,\n     \"confused\": -65708964,\n     \"heart\": 17536132,\n     \"hooray\": 87391740,\n     \"eyes\": -38299912,\n     \"rocket\": 93806056\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"id eu\",\n     \"title\": \"nostrud elit Ut ipsum dolor\",\n     \"summary\": \"incididunt sed quis aliquip\",\n     \"action\": \"sunt ad\",\n     \"sha\": \"enim ut consequat\",\n     \"html_url\": \"dolor mollit ea nulla\"\n    },\n    {\n     \"page_name\": \"non aliq\",\n     \"title\": \"culpa elit fugiat cupidatat\",\n     \"summary\": \"qui reprehenderit ea \",\n     \"action\": \"ipsum dolor enim\",\n     \"sha\": \"velit dolore eiusmod in\",\n     \"html_url\": \"ut\"\n    }\n   ]\n  },\n  \"public\": false,\n  \"created_at\": \"laborum qui\",\n  \"org\": {\n   \"id\": 53209167,\n   \"login\": \"ut consequat dolor\",\n   \"gravatar_id\": \"anim nulla elit\",\n   \"url\": \"mollit qui\",\n   \"avatar_url\": \"do in aliqua esse est\",\n   \"display_login\": \"sunt\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Get feeds",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/feeds",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"feeds"
							]
						},
						"description": "GitHub provides several timeline resources in [Atom](http://en.wikipedia.org/wiki/Atom_(standard)) format. The Feeds API lists all the feeds available to the authenticated user:\n\n*   **Timeline**: The GitHub global public timeline\n*   **User**: The public timeline for any user, using [URI template](https://developer.github.com/v3/#hypermedia)\n*   **Current user public**: The public timeline for the authenticated user\n*   **Current user**: The private timeline for the authenticated user\n*   **Current user actor**: The private timeline for activity created by the authenticated user\n*   **Current user organizations**: The private timeline for the organizations the authenticated user is a member of.\n*   **Security advisories**: A collection of public announcements that provide information about security-related vulnerabilities in software on GitHub.\n\n**Note**: Private feeds are only returned when [authenticating via Basic Auth](https://developer.github.com/v3/#basic-authentication) since current feed URIs use the older, non revocable auth tokens."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/feeds",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"feeds"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"timeline_url\": \"https://github.com/timeline\",\n \"user_url\": \"https://github.com/{user}\",\n \"current_user_public_url\": \"https://github.com/octocat\",\n \"current_user_url\": \"https://github.com/octocat.private?token=abc123\",\n \"current_user_actor_url\": \"https://github.com/octocat.private.actor?token=abc123\",\n \"current_user_organization_url\": \"\",\n \"current_user_organization_urls\": [\n  \"https://github.com/organizations/github/octocat.private.atom?token=abc123\"\n ],\n \"security_advisories_url\": \"https://github.com/security-advisories\",\n \"_links\": {\n  \"timeline\": {\n   \"href\": \"https://github.com/timeline\",\n   \"type\": \"application/atom+xml\"\n  },\n  \"user\": {\n   \"href\": \"https://github.com/{user}\",\n   \"type\": \"application/atom+xml\"\n  },\n  \"current_user_public\": {\n   \"href\": \"https://github.com/octocat\",\n   \"type\": \"application/atom+xml\"\n  },\n  \"current_user\": {\n   \"href\": \"https://github.com/octocat.private?token=abc123\",\n   \"type\": \"application/atom+xml\"\n  },\n  \"current_user_actor\": {\n   \"href\": \"https://github.com/octocat.private.actor?token=abc123\",\n   \"type\": \"application/atom+xml\"\n  },\n  \"current_user_organization\": {\n   \"href\": \"\",\n   \"type\": \"\"\n  },\n  \"current_user_organizations\": [\n   {\n    \"href\": \"https://github.com/organizations/github/octocat.private.atom?token=abc123\",\n    \"type\": \"application/atom+xml\"\n   }\n  ],\n  \"security_advisories\": {\n   \"href\": \"https://github.com/security-advisories\",\n   \"type\": \"application/atom+xml\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "List events received by the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/received_events?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"received_events"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "These are events that you've received by watching repos and following users. If you are authenticated as the given user, you will see private events. Otherwise, you'll only see public events."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/received_events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"received_events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"laboris culpa do\",\n  \"type\": \"pariatur labore cupidatat\",\n  \"actor\": {\n   \"id\": 88252344,\n   \"login\": \"dolor culpa\",\n   \"gravatar_id\": \"enim exercitation esse\",\n   \"url\": \"ullamco\",\n   \"avatar_url\": \"incididunt consequat sed dolo\",\n   \"display_login\": \"fugiat Ut id est\"\n  },\n  \"repo\": {\n   \"id\": -28870451,\n   \"name\": \"Lorem occaecat\",\n   \"url\": \"consectetur eiusmod sit\"\n  },\n  \"payload\": {\n   \"action\": \"non qui\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"officia\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -11408165,\n      \"node_id\": \"in ad ex consequat\",\n      \"url\": \"fugiat\",\n      \"name\": \"mollit ut offici\",\n      \"description\": \"deserunt\",\n      \"color\": \"laboris velit cillum\",\n      \"default\": true\n     },\n     {\n      \"id\": 83338791,\n      \"node_id\": \"officia aute quis\",\n      \"url\": \"deserunt id Lorem\",\n      \"name\": \"laboris Lorem\",\n      \"description\": \"ut esse aute est\",\n      \"color\": \"non laboris nulla est\",\n      \"default\": false\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": false,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"commodo ad sint esse\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"nostru\",\n     \"html_url\": \"nostrud elit qui\",\n     \"patch_url\": \"enim laboris\",\n     \"url\": \"cupidatat cillum\",\n     \"merged_at\": \"aliquip veniam sed\"\n    },\n    \"body_html\": \"officia ut sit\",\n    \"body_text\": \"officia sunt cupidatat consequat\",\n    \"timeline_url\": \"do dolor in volu\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": -61641183,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"culpa aliqua labore\",\n     \"archived\": true,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": 52988511,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"ut est\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -58779489,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": false,\n      \"pull\": false,\n      \"push\": false,\n      \"triage\": true,\n      \"maintain\": true\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"qui eiusmod do dolo\",\n      \"culpa mo\"\n     ],\n     \"visibility\": \"sint pariatur iru\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": -11723839,\n      \"node_id\": \"laboris\",\n      \"name\": \"dolor exercitation sunt\",\n      \"full_name\": \"elit qui veniam commodo\",\n      \"owner\": {\n       \"login\": \"ad dolore\",\n       \"id\": -96819604,\n       \"node_id\": \"non Ut nostrud elit\",\n       \"avatar_url\": \"aliquip esse ipsum\",\n       \"gravatar_id\": \"culpa\",\n       \"url\": \"cupidatat voluptate\",\n       \"html_url\": \"Duis in nulla\",\n       \"followers_url\": \"sed\",\n       \"following_url\": \"ex deserunt nisi\",\n       \"gists_url\": \"amet adipisicing aliqua\",\n       \"starred_url\": \"non voluptate Duis reprehenderit\",\n       \"subscriptions_url\": \"culpa aliquip sit\",\n       \"organizations_url\": \"consequat voluptate\",\n       \"repos_url\": \"officia\",\n       \"events_url\": \"in ea et\",\n       \"received_events_url\": \"fugiat esse cupid\",\n       \"type\": \"sed sit\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"dolore pariatur incididunt ad\",\n      \"description\": \"adipisicing dolore incididunt exercitation Excepteur\",\n      \"fork\": false,\n      \"url\": \"ea in officia in\",\n      \"archive_url\": \"dolor\",\n      \"assignees_url\": \"consequat est ut labore\",\n      \"blobs_url\": \"irure\",\n      \"branches_url\": \"et est qui\",\n      \"collaborators_url\": \"magn\",\n      \"comments_url\": \"non\",\n      \"commits_url\": \"veniam elit \",\n      \"compare_url\": \"adipisicing non\",\n      \"contents_url\": \"ut commodo cupidatat consequat\",\n      \"contributors_url\": \"officia ad cillum sed\",\n      \"deployments_url\": \"eiusmod non irure\",\n      \"downloads_url\": \"consequat amet adipisicing\",\n      \"events_url\": \"Lorem dolor\",\n      \"forks_url\": \"dolor labore id aliqua in\",\n      \"git_commits_url\": \"cillum Duis\",\n      \"git_refs_url\": \"dolor Excepteur in\",\n      \"git_tags_url\": \"esse Ut Excepteur minim\",\n      \"git_url\": \"Lorem officia sint laboris\",\n      \"issue_comment_url\": \"eiu\",\n      \"issue_events_url\": \"velit reprehenderit adipisicing magna esse\",\n      \"issues_url\": \"consequat\",\n      \"keys_url\": \"culpa non\",\n      \"labels_url\": \"nulla amet aliqua consequat\",\n      \"languages_url\": \"velit et ex nisi\",\n      \"merges_url\": \"incididunt commodo exercitation\",\n      \"milestones_url\": \"nostr\",\n      \"notifications_url\": \"Ut\",\n      \"pulls_url\": \"amet esse aute veniam\",\n      \"releases_url\": \"dolor sunt\",\n      \"ssh_url\": \"aliquip\",\n      \"stargazers_url\": \"Exce\",\n      \"statuses_url\": \"in tempor irure sed\",\n      \"subscribers_url\": \"ut laborum nulla voluptate\",\n      \"subscription_url\": \"cupidatat cillum\",\n      \"tags_url\": \"irure commodo dolor\",\n      \"teams_url\": \"cillum aliquip Lorem\",\n      \"trees_url\": \"eiusmod\",\n      \"clone_url\": \"adipisicing irure\",\n      \"mirror_url\": \"labore tempor dolore sed\",\n      \"hooks_url\": \"commodo ut voluptate\",\n      \"svn_url\": \"eiusmod consequat\",\n      \"homepage\": \"aliqua amet do officia\",\n      \"language\": \"id Duis consectetur\",\n      \"forks_count\": 36505039,\n      \"stargazers_count\": -15209385,\n      \"watchers_count\": 22691037,\n      \"size\": 52740972,\n      \"default_branch\": \"cupidatat dolor\",\n      \"open_issues_count\": -77157273,\n      \"is_template\": false,\n      \"topics\": [\n       \"magna Lorem ad elit\",\n       \"ut exercitation\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": false,\n      \"has_downloads\": true,\n      \"archived\": true,\n      \"disabled\": true,\n      \"visibility\": \"nisi\",\n      \"pushed_at\": \"laboris sint incididunt minim\",\n      \"created_at\": \"in velit\",\n      \"updated_at\": \"sunt eu\",\n      \"permissions\": {\n       \"admin\": false,\n       \"push\": false,\n       \"pull\": true\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"mollit anim irure\",\n      \"temp_clone_token\": \"deserunt nulla\",\n      \"allow_squash_merge\": false,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": false,\n      \"subscribers_count\": 46064079,\n      \"network_count\": 37676967\n     },\n     \"temp_clone_token\": \"ad dolor nulla eu in\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 69321673,\n     \"network_count\": 88749542,\n     \"master_branch\": \"veniam qui dolor magna nostrud\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"Duis culpa Excepteur consectetur minim\",\n    \"html_url\": \"Ut\",\n    \"issue_url\": \"consectetur nulla adipisicing ad\",\n    \"author_association\": \"nisi sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"commodo in reprehenderit\",\n    \"body_html\": \"magna amet ipsum\",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"fugiat occaecat laborum\",\n     \"total_count\": -50086991,\n     \"+1\": -89229718,\n     \"-1\": -87796879,\n     \"laugh\": -88359387,\n     \"confused\": -98245507,\n     \"heart\": 34607739,\n     \"hooray\": 26814181,\n     \"eyes\": -97041191,\n     \"rocket\": -27480535\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"in exercitation dolor\",\n     \"title\": \"eu c\",\n     \"summary\": \"proident Excepteur\",\n     \"action\": \"enim ullamco\",\n     \"sha\": \"ut pariatur esse Duis\",\n     \"html_url\": \"tempor voluptate magna dolore enim\"\n    },\n    {\n     \"page_name\": \"elit voluptate nostrud in\",\n     \"title\": \"laborum et nostrud in ven\",\n     \"summary\": \"consectetur anim in dolor\",\n     \"action\": \"ut laborum\",\n     \"sha\": \"aliqua dolor\",\n     \"html_url\": \"consequat \"\n    }\n   ]\n  },\n  \"public\": true,\n  \"created_at\": \"id et\",\n  \"org\": {\n   \"id\": -52767875,\n   \"login\": \"al\",\n   \"gravatar_id\": \"culpa\",\n   \"url\": \"voluptate sunt Lorem eu\",\n   \"avatar_url\": \"cillum ea\",\n   \"display_login\": \"laborum Lorem\"\n  }\n },\n {\n  \"id\": \"occaecat in commodo ad\",\n  \"type\": \"elit sunt laborum consectetur eiusmod\",\n  \"actor\": {\n   \"id\": -46334373,\n   \"login\": \"deserunt reprehenderit\",\n   \"gravatar_id\": \"eiusmod dolor\",\n   \"url\": \"consectetur nulla\",\n   \"avatar_url\": \"culpa esse non\",\n   \"display_login\": \"esse\"\n  },\n  \"repo\": {\n   \"id\": -64345412,\n   \"name\": \"eiusmod\",\n   \"url\": \"est dolor ad ullamco\"\n  },\n  \"payload\": {\n   \"action\": \"mollit minim commodo deserunt\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"voluptate velit mollit non anim\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -74276284,\n      \"node_id\": \"et paria\",\n      \"url\": \"anim Excepteur commod\",\n      \"name\": \"dolore amet enim non\",\n      \"description\": \"tempor Excepteur\",\n      \"color\": \"voluptate occaecat ipsum\",\n      \"default\": false\n     },\n     {\n      \"id\": -26952286,\n      \"node_id\": \"amet sed mollit elit\",\n      \"url\": \"nostrud ut non ut\",\n      \"name\": \"est nulla quis\",\n      \"description\": \"rep\",\n      \"color\": \"reprehenderit veniam\",\n      \"default\": true\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"enim\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"ea\",\n     \"html_url\": \"sunt labore\",\n     \"patch_url\": \"sed sint eiusmod exercitation\",\n     \"url\": \"Duis ullamco mo\",\n     \"merged_at\": \"eiusmod officia consectetur aute\"\n    },\n    \"body_html\": \"laborum cillum commodo\",\n    \"body_text\": \"elit fugiat ve\",\n    \"timeline_url\": \"commodo fugiat in in\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": 21821554,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"in irure\",\n     \"archived\": false,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": -43887097,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"dolor incididunt\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -85561529,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": true,\n      \"pull\": true,\n      \"push\": true,\n      \"triage\": false,\n      \"maintain\": false\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"in\",\n      \"id consequat anim labore nisi\"\n     ],\n     \"visibility\": \"enim in est\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": 89436410,\n      \"node_id\": \"amet minim esse ut\",\n      \"name\": \"ut laborum\",\n      \"full_name\": \"reprehenderit veniam minim\",\n      \"owner\": {\n       \"login\": \"est aute Excepteur\",\n       \"id\": -5716243,\n       \"node_id\": \"ex in est\",\n       \"avatar_url\": \"velit \",\n       \"gravatar_id\": \"dolore magna\",\n       \"url\": \"nisi\",\n       \"html_url\": \"eli\",\n       \"followers_url\": \"dolor elit eiusmod\",\n       \"following_url\": \"Ut qui voluptate do\",\n       \"gists_url\": \"aute laborum dolor\",\n       \"starred_url\": \"incididunt ad\",\n       \"subscriptions_url\": \"ea quis eu dolore\",\n       \"organizations_url\": \"amet ut\",\n       \"repos_url\": \"labore ut mollit laboris\",\n       \"events_url\": \"exercitation quis adipisicing voluptate ad\",\n       \"received_events_url\": \"cillum ut officia\",\n       \"type\": \"nostrud occaecat irure nisi\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"eiusmod voluptate magna\",\n      \"description\": \"enim dolore Duis esse elit\",\n      \"fork\": true,\n      \"url\": \"tempor quis do\",\n      \"archive_url\": \"dolore sunt anim Excepteur\",\n      \"assignees_url\": \"ea sunt voluptate deserunt\",\n      \"blobs_url\": \"tempor sint dolor amet\",\n      \"branches_url\": \"nulla in\",\n      \"collaborators_url\": \"ea mini\",\n      \"comments_url\": \"Lorem amet\",\n      \"commits_url\": \"id adipisicing cupidatat\",\n      \"compare_url\": \"veniam \",\n      \"contents_url\": \"Duis voluptate pariatur\",\n      \"contributors_url\": \"cupidatat in\",\n      \"deployments_url\": \"sunt\",\n      \"downloads_url\": \"cu\",\n      \"events_url\": \"Excepteur\",\n      \"forks_url\": \"sit\",\n      \"git_commits_url\": \"quis ullamco commodo\",\n      \"git_refs_url\": \"nulla esse\",\n      \"git_tags_url\": \"commodo in velit\",\n      \"git_url\": \"Duis cillum\",\n      \"issue_comment_url\": \"in non\",\n      \"issue_events_url\": \"culpa sint eu\",\n      \"issues_url\": \"ipsum irure do\",\n      \"keys_url\": \"Excepteur fugiat ut dolore\",\n      \"labels_url\": \"dolor esse\",\n      \"languages_url\": \"exercitation sunt culpa in anim\",\n      \"merges_url\": \"sed culpa\",\n      \"milestones_url\": \"cupidatat qui in do dolore\",\n      \"notifications_url\": \"deserunt reprehenderit mollit\",\n      \"pulls_url\": \"cillum ex\",\n      \"releases_url\": \"aute ullamco adipisicing\",\n      \"ssh_url\": \"enim sed dolor ex\",\n      \"stargazers_url\": \"commodo non adipisicing\",\n      \"statuses_url\": \"ex aliquip sint\",\n      \"subscribers_url\": \"nostrud magna adipisicing\",\n      \"subscription_url\": \"ex\",\n      \"tags_url\": \"anim\",\n      \"teams_url\": \"ex\",\n      \"trees_url\": \"consectetur ipsum\",\n      \"clone_url\": \"Duis sint do ullamco dolor\",\n      \"mirror_url\": \"elit incididunt\",\n      \"hooks_url\": \"Duis dolor\",\n      \"svn_url\": \"velit ea id dolore\",\n      \"homepage\": \"voluptate minim tempor cillum\",\n      \"language\": \"incididunt nulla dolor\",\n      \"forks_count\": -32686188,\n      \"stargazers_count\": -90392221,\n      \"watchers_count\": 36281082,\n      \"size\": 92194984,\n      \"default_branch\": \"cupidatat sint \",\n      \"open_issues_count\": -23082587,\n      \"is_template\": true,\n      \"topics\": [\n       \"enim irure in\",\n       \"eiusmod consectetur\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": true,\n      \"has_downloads\": true,\n      \"archived\": false,\n      \"disabled\": false,\n      \"visibility\": \"et\",\n      \"pushed_at\": \"qui proident eu\",\n      \"created_at\": \"mollit cillum\",\n      \"updated_at\": \"in voluptate ea\",\n      \"permissions\": {\n       \"admin\": true,\n       \"push\": true,\n       \"pull\": false\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"id culpa\",\n      \"temp_clone_token\": \"Lorem eiusmod\",\n      \"allow_squash_merge\": true,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": true,\n      \"subscribers_count\": 12516563,\n      \"network_count\": -82004674\n     },\n     \"temp_clone_token\": \"do officia\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 99943829,\n     \"network_count\": 87816874,\n     \"master_branch\": \"ipsum cillum sit est aliquip\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"ex\",\n    \"html_url\": \"dolor\",\n    \"issue_url\": \"laborum id Ut adipi\",\n    \"author_association\": \"sunt sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"Excepteur exercitation\",\n    \"body_html\": \"et \",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"anim ut mollit do\",\n     \"total_count\": -36608164,\n     \"+1\": 9688678,\n     \"-1\": 69639172,\n     \"laugh\": -43483940,\n     \"confused\": -65708964,\n     \"heart\": 17536132,\n     \"hooray\": 87391740,\n     \"eyes\": -38299912,\n     \"rocket\": 93806056\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"id eu\",\n     \"title\": \"nostrud elit Ut ipsum dolor\",\n     \"summary\": \"incididunt sed quis aliquip\",\n     \"action\": \"sunt ad\",\n     \"sha\": \"enim ut consequat\",\n     \"html_url\": \"dolor mollit ea nulla\"\n    },\n    {\n     \"page_name\": \"non aliq\",\n     \"title\": \"culpa elit fugiat cupidatat\",\n     \"summary\": \"qui reprehenderit ea \",\n     \"action\": \"ipsum dolor enim\",\n     \"sha\": \"velit dolore eiusmod in\",\n     \"html_url\": \"ut\"\n    }\n   ]\n  },\n  \"public\": false,\n  \"created_at\": \"laborum qui\",\n  \"org\": {\n   \"id\": 53209167,\n   \"login\": \"ut consequat dolor\",\n   \"gravatar_id\": \"anim nulla elit\",\n   \"url\": \"mollit qui\",\n   \"avatar_url\": \"do in aliqua esse est\",\n   \"display_login\": \"sunt\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "List repositories starred by a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/starred?sort=created&direction=desc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"starred"
							],
							"query": [
								{
									"key": "sort",
									"value": "created",
									"description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to)."
								},
								{
									"key": "direction",
									"value": "desc",
									"description": "One of `asc` (ascending) or `desc` (descending)."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists repositories a user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/starred?sort=created&direction=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"starred"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"allow_rebase_merge\": true,\n  \"template_repository\": null,\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"allow_squash_merge\": true,\n  \"delete_branch_on_merge\": true,\n  \"allow_merge_commit\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"spdx_id\": \"MIT\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n   \"html_url\": \"https://github.com/licenses/mit\"\n  },\n  \"forks\": 1,\n  \"open_issues\": 1,\n  \"watchers\": 1\n }\n]"
						}
					]
				},
				{
					"name": "List repositories watched by a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/subscriptions?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"subscriptions"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists repositories a user is watching."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/subscriptions?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"subscriptions"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"template_repository\": \"octocat/template\",\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"delete_branch_on_merge\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"spdx_id\": \"MIT\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Get a thread",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notifications/threads/:thread_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"threads",
								":thread_id"
							],
							"variable": [
								{
									"key": "thread_id",
									"value": "41891364",
									"description": "(Required) thread_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"1\",\n \"repository\": {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\"\n },\n \"subject\": {\n  \"title\": \"Greetings\",\n  \"url\": \"https://api.github.com/repos/octokit/octokit.rb/issues/123\",\n  \"latest_comment_url\": \"https://api.github.com/repos/octokit/octokit.rb/issues/comments/123\",\n  \"type\": \"Issue\"\n },\n \"reason\": \"subscribed\",\n \"unread\": true,\n \"updated_at\": \"2014-11-07T22:01:45Z\",\n \"last_read_at\": \"2014-11-07T22:01:45Z\",\n \"url\": \"https://api.github.com/notifications/threads/1\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Mark a thread as read",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notifications/threads/:thread_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"threads",
								":thread_id"
							],
							"variable": [
								{
									"key": "thread_id",
									"value": "41891364",
									"description": "(Required) thread_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "Reset Content",
							"code": 205,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a thread subscription for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notifications/threads/:thread_id/subscription",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"threads",
								":thread_id",
								"subscription"
							],
							"variable": [
								{
									"key": "thread_id",
									"value": "41891364",
									"description": "(Required) thread_id parameter"
								}
							]
						},
						"description": "This checks to see if the current user is subscribed to a thread. You can also [get a repository subscription](https://developer.github.com/v3/activity/watching/#get-a-repository-subscription).\n\nNote that subscriptions are only generated if a user is participating in a conversation--for example, they've replied to the thread, were **@mentioned**, or manually subscribe to a thread."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id",
										"subscription"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id",
										"subscription"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"subscribed\": true,\n \"ignored\": false,\n \"reason\": null,\n \"created_at\": \"2012-10-06T21:34:12Z\",\n \"url\": \"https://api.github.com/notifications/threads/1/subscription\",\n \"thread_url\": \"https://api.github.com/notifications/threads/1\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id",
										"subscription"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id",
										"subscription"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Delete a thread subscription",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notifications/threads/:thread_id/subscription",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"threads",
								":thread_id",
								"subscription"
							],
							"variable": [
								{
									"key": "thread_id",
									"value": "41891364",
									"description": "(Required) thread_id parameter"
								}
							]
						},
						"description": "Mutes all future notifications for a conversation until you comment on the thread or get an **@mention**. If you are watching the repository of the thread, you will still receive notifications. To ignore future notifications for a repository you are watching, use the [Set a thread subscription](https://developer.github.com/v3/activity/notifications/#set-a-thread-subscription) endpoint and set `ignore` to `true`."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id",
										"subscription"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id",
										"subscription"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id",
										"subscription"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id",
										"subscription"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Set a thread subscription",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ignored\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/notifications/threads/:thread_id/subscription",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"threads",
								":thread_id",
								"subscription"
							],
							"variable": [
								{
									"key": "thread_id",
									"value": "41891364",
									"description": "(Required) thread_id parameter"
								}
							]
						},
						"description": "If you are watching a repository, you receive notifications for all threads by default. Use this endpoint to ignore future notifications for threads until you comment on the thread or get an **@mention**.\n\nYou can also use this endpoint to subscribe to threads that you are currently not receiving notifications for or to subscribed to threads that you have previously ignored.\n\nUnsubscribing from a conversation in a repository that you are not watching is functionally equivalent to the [Delete a thread subscription](https://developer.github.com/v3/activity/notifications/#delete-a-thread-subscription) endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ignored\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id",
										"subscription"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"subscribed\": true,\n \"ignored\": false,\n \"reason\": null,\n \"created_at\": \"2012-10-06T21:34:12Z\",\n \"url\": \"https://api.github.com/notifications/threads/1/subscription\",\n \"thread_url\": \"https://api.github.com/notifications/threads/1\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ignored\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id",
										"subscription"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ignored\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id",
										"subscription"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ignored\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/notifications/threads/:thread_id/subscription",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"threads",
										":thread_id",
										"subscription"
									],
									"variable": [
										{
											"key": "thread_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List events for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/events?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"events"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "If you are authenticated as the given user, you will see your private events. Otherwise, you'll only see public events."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"laboris culpa do\",\n  \"type\": \"pariatur labore cupidatat\",\n  \"actor\": {\n   \"id\": 88252344,\n   \"login\": \"dolor culpa\",\n   \"gravatar_id\": \"enim exercitation esse\",\n   \"url\": \"ullamco\",\n   \"avatar_url\": \"incididunt consequat sed dolo\",\n   \"display_login\": \"fugiat Ut id est\"\n  },\n  \"repo\": {\n   \"id\": -28870451,\n   \"name\": \"Lorem occaecat\",\n   \"url\": \"consectetur eiusmod sit\"\n  },\n  \"payload\": {\n   \"action\": \"non qui\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"officia\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -11408165,\n      \"node_id\": \"in ad ex consequat\",\n      \"url\": \"fugiat\",\n      \"name\": \"mollit ut offici\",\n      \"description\": \"deserunt\",\n      \"color\": \"laboris velit cillum\",\n      \"default\": true\n     },\n     {\n      \"id\": 83338791,\n      \"node_id\": \"officia aute quis\",\n      \"url\": \"deserunt id Lorem\",\n      \"name\": \"laboris Lorem\",\n      \"description\": \"ut esse aute est\",\n      \"color\": \"non laboris nulla est\",\n      \"default\": false\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": false,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"commodo ad sint esse\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"nostru\",\n     \"html_url\": \"nostrud elit qui\",\n     \"patch_url\": \"enim laboris\",\n     \"url\": \"cupidatat cillum\",\n     \"merged_at\": \"aliquip veniam sed\"\n    },\n    \"body_html\": \"officia ut sit\",\n    \"body_text\": \"officia sunt cupidatat consequat\",\n    \"timeline_url\": \"do dolor in volu\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": -61641183,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"culpa aliqua labore\",\n     \"archived\": true,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": 52988511,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"ut est\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -58779489,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": false,\n      \"pull\": false,\n      \"push\": false,\n      \"triage\": true,\n      \"maintain\": true\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"qui eiusmod do dolo\",\n      \"culpa mo\"\n     ],\n     \"visibility\": \"sint pariatur iru\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": -11723839,\n      \"node_id\": \"laboris\",\n      \"name\": \"dolor exercitation sunt\",\n      \"full_name\": \"elit qui veniam commodo\",\n      \"owner\": {\n       \"login\": \"ad dolore\",\n       \"id\": -96819604,\n       \"node_id\": \"non Ut nostrud elit\",\n       \"avatar_url\": \"aliquip esse ipsum\",\n       \"gravatar_id\": \"culpa\",\n       \"url\": \"cupidatat voluptate\",\n       \"html_url\": \"Duis in nulla\",\n       \"followers_url\": \"sed\",\n       \"following_url\": \"ex deserunt nisi\",\n       \"gists_url\": \"amet adipisicing aliqua\",\n       \"starred_url\": \"non voluptate Duis reprehenderit\",\n       \"subscriptions_url\": \"culpa aliquip sit\",\n       \"organizations_url\": \"consequat voluptate\",\n       \"repos_url\": \"officia\",\n       \"events_url\": \"in ea et\",\n       \"received_events_url\": \"fugiat esse cupid\",\n       \"type\": \"sed sit\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"dolore pariatur incididunt ad\",\n      \"description\": \"adipisicing dolore incididunt exercitation Excepteur\",\n      \"fork\": false,\n      \"url\": \"ea in officia in\",\n      \"archive_url\": \"dolor\",\n      \"assignees_url\": \"consequat est ut labore\",\n      \"blobs_url\": \"irure\",\n      \"branches_url\": \"et est qui\",\n      \"collaborators_url\": \"magn\",\n      \"comments_url\": \"non\",\n      \"commits_url\": \"veniam elit \",\n      \"compare_url\": \"adipisicing non\",\n      \"contents_url\": \"ut commodo cupidatat consequat\",\n      \"contributors_url\": \"officia ad cillum sed\",\n      \"deployments_url\": \"eiusmod non irure\",\n      \"downloads_url\": \"consequat amet adipisicing\",\n      \"events_url\": \"Lorem dolor\",\n      \"forks_url\": \"dolor labore id aliqua in\",\n      \"git_commits_url\": \"cillum Duis\",\n      \"git_refs_url\": \"dolor Excepteur in\",\n      \"git_tags_url\": \"esse Ut Excepteur minim\",\n      \"git_url\": \"Lorem officia sint laboris\",\n      \"issue_comment_url\": \"eiu\",\n      \"issue_events_url\": \"velit reprehenderit adipisicing magna esse\",\n      \"issues_url\": \"consequat\",\n      \"keys_url\": \"culpa non\",\n      \"labels_url\": \"nulla amet aliqua consequat\",\n      \"languages_url\": \"velit et ex nisi\",\n      \"merges_url\": \"incididunt commodo exercitation\",\n      \"milestones_url\": \"nostr\",\n      \"notifications_url\": \"Ut\",\n      \"pulls_url\": \"amet esse aute veniam\",\n      \"releases_url\": \"dolor sunt\",\n      \"ssh_url\": \"aliquip\",\n      \"stargazers_url\": \"Exce\",\n      \"statuses_url\": \"in tempor irure sed\",\n      \"subscribers_url\": \"ut laborum nulla voluptate\",\n      \"subscription_url\": \"cupidatat cillum\",\n      \"tags_url\": \"irure commodo dolor\",\n      \"teams_url\": \"cillum aliquip Lorem\",\n      \"trees_url\": \"eiusmod\",\n      \"clone_url\": \"adipisicing irure\",\n      \"mirror_url\": \"labore tempor dolore sed\",\n      \"hooks_url\": \"commodo ut voluptate\",\n      \"svn_url\": \"eiusmod consequat\",\n      \"homepage\": \"aliqua amet do officia\",\n      \"language\": \"id Duis consectetur\",\n      \"forks_count\": 36505039,\n      \"stargazers_count\": -15209385,\n      \"watchers_count\": 22691037,\n      \"size\": 52740972,\n      \"default_branch\": \"cupidatat dolor\",\n      \"open_issues_count\": -77157273,\n      \"is_template\": false,\n      \"topics\": [\n       \"magna Lorem ad elit\",\n       \"ut exercitation\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": false,\n      \"has_downloads\": true,\n      \"archived\": true,\n      \"disabled\": true,\n      \"visibility\": \"nisi\",\n      \"pushed_at\": \"laboris sint incididunt minim\",\n      \"created_at\": \"in velit\",\n      \"updated_at\": \"sunt eu\",\n      \"permissions\": {\n       \"admin\": false,\n       \"push\": false,\n       \"pull\": true\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"mollit anim irure\",\n      \"temp_clone_token\": \"deserunt nulla\",\n      \"allow_squash_merge\": false,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": false,\n      \"subscribers_count\": 46064079,\n      \"network_count\": 37676967\n     },\n     \"temp_clone_token\": \"ad dolor nulla eu in\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 69321673,\n     \"network_count\": 88749542,\n     \"master_branch\": \"veniam qui dolor magna nostrud\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"Duis culpa Excepteur consectetur minim\",\n    \"html_url\": \"Ut\",\n    \"issue_url\": \"consectetur nulla adipisicing ad\",\n    \"author_association\": \"nisi sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"commodo in reprehenderit\",\n    \"body_html\": \"magna amet ipsum\",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"fugiat occaecat laborum\",\n     \"total_count\": -50086991,\n     \"+1\": -89229718,\n     \"-1\": -87796879,\n     \"laugh\": -88359387,\n     \"confused\": -98245507,\n     \"heart\": 34607739,\n     \"hooray\": 26814181,\n     \"eyes\": -97041191,\n     \"rocket\": -27480535\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"in exercitation dolor\",\n     \"title\": \"eu c\",\n     \"summary\": \"proident Excepteur\",\n     \"action\": \"enim ullamco\",\n     \"sha\": \"ut pariatur esse Duis\",\n     \"html_url\": \"tempor voluptate magna dolore enim\"\n    },\n    {\n     \"page_name\": \"elit voluptate nostrud in\",\n     \"title\": \"laborum et nostrud in ven\",\n     \"summary\": \"consectetur anim in dolor\",\n     \"action\": \"ut laborum\",\n     \"sha\": \"aliqua dolor\",\n     \"html_url\": \"consequat \"\n    }\n   ]\n  },\n  \"public\": true,\n  \"created_at\": \"id et\",\n  \"org\": {\n   \"id\": -52767875,\n   \"login\": \"al\",\n   \"gravatar_id\": \"culpa\",\n   \"url\": \"voluptate sunt Lorem eu\",\n   \"avatar_url\": \"cillum ea\",\n   \"display_login\": \"laborum Lorem\"\n  }\n },\n {\n  \"id\": \"occaecat in commodo ad\",\n  \"type\": \"elit sunt laborum consectetur eiusmod\",\n  \"actor\": {\n   \"id\": -46334373,\n   \"login\": \"deserunt reprehenderit\",\n   \"gravatar_id\": \"eiusmod dolor\",\n   \"url\": \"consectetur nulla\",\n   \"avatar_url\": \"culpa esse non\",\n   \"display_login\": \"esse\"\n  },\n  \"repo\": {\n   \"id\": -64345412,\n   \"name\": \"eiusmod\",\n   \"url\": \"est dolor ad ullamco\"\n  },\n  \"payload\": {\n   \"action\": \"mollit minim commodo deserunt\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"voluptate velit mollit non anim\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -74276284,\n      \"node_id\": \"et paria\",\n      \"url\": \"anim Excepteur commod\",\n      \"name\": \"dolore amet enim non\",\n      \"description\": \"tempor Excepteur\",\n      \"color\": \"voluptate occaecat ipsum\",\n      \"default\": false\n     },\n     {\n      \"id\": -26952286,\n      \"node_id\": \"amet sed mollit elit\",\n      \"url\": \"nostrud ut non ut\",\n      \"name\": \"est nulla quis\",\n      \"description\": \"rep\",\n      \"color\": \"reprehenderit veniam\",\n      \"default\": true\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"enim\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"ea\",\n     \"html_url\": \"sunt labore\",\n     \"patch_url\": \"sed sint eiusmod exercitation\",\n     \"url\": \"Duis ullamco mo\",\n     \"merged_at\": \"eiusmod officia consectetur aute\"\n    },\n    \"body_html\": \"laborum cillum commodo\",\n    \"body_text\": \"elit fugiat ve\",\n    \"timeline_url\": \"commodo fugiat in in\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": 21821554,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"in irure\",\n     \"archived\": false,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": -43887097,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"dolor incididunt\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -85561529,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": true,\n      \"pull\": true,\n      \"push\": true,\n      \"triage\": false,\n      \"maintain\": false\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"in\",\n      \"id consequat anim labore nisi\"\n     ],\n     \"visibility\": \"enim in est\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": 89436410,\n      \"node_id\": \"amet minim esse ut\",\n      \"name\": \"ut laborum\",\n      \"full_name\": \"reprehenderit veniam minim\",\n      \"owner\": {\n       \"login\": \"est aute Excepteur\",\n       \"id\": -5716243,\n       \"node_id\": \"ex in est\",\n       \"avatar_url\": \"velit \",\n       \"gravatar_id\": \"dolore magna\",\n       \"url\": \"nisi\",\n       \"html_url\": \"eli\",\n       \"followers_url\": \"dolor elit eiusmod\",\n       \"following_url\": \"Ut qui voluptate do\",\n       \"gists_url\": \"aute laborum dolor\",\n       \"starred_url\": \"incididunt ad\",\n       \"subscriptions_url\": \"ea quis eu dolore\",\n       \"organizations_url\": \"amet ut\",\n       \"repos_url\": \"labore ut mollit laboris\",\n       \"events_url\": \"exercitation quis adipisicing voluptate ad\",\n       \"received_events_url\": \"cillum ut officia\",\n       \"type\": \"nostrud occaecat irure nisi\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"eiusmod voluptate magna\",\n      \"description\": \"enim dolore Duis esse elit\",\n      \"fork\": true,\n      \"url\": \"tempor quis do\",\n      \"archive_url\": \"dolore sunt anim Excepteur\",\n      \"assignees_url\": \"ea sunt voluptate deserunt\",\n      \"blobs_url\": \"tempor sint dolor amet\",\n      \"branches_url\": \"nulla in\",\n      \"collaborators_url\": \"ea mini\",\n      \"comments_url\": \"Lorem amet\",\n      \"commits_url\": \"id adipisicing cupidatat\",\n      \"compare_url\": \"veniam \",\n      \"contents_url\": \"Duis voluptate pariatur\",\n      \"contributors_url\": \"cupidatat in\",\n      \"deployments_url\": \"sunt\",\n      \"downloads_url\": \"cu\",\n      \"events_url\": \"Excepteur\",\n      \"forks_url\": \"sit\",\n      \"git_commits_url\": \"quis ullamco commodo\",\n      \"git_refs_url\": \"nulla esse\",\n      \"git_tags_url\": \"commodo in velit\",\n      \"git_url\": \"Duis cillum\",\n      \"issue_comment_url\": \"in non\",\n      \"issue_events_url\": \"culpa sint eu\",\n      \"issues_url\": \"ipsum irure do\",\n      \"keys_url\": \"Excepteur fugiat ut dolore\",\n      \"labels_url\": \"dolor esse\",\n      \"languages_url\": \"exercitation sunt culpa in anim\",\n      \"merges_url\": \"sed culpa\",\n      \"milestones_url\": \"cupidatat qui in do dolore\",\n      \"notifications_url\": \"deserunt reprehenderit mollit\",\n      \"pulls_url\": \"cillum ex\",\n      \"releases_url\": \"aute ullamco adipisicing\",\n      \"ssh_url\": \"enim sed dolor ex\",\n      \"stargazers_url\": \"commodo non adipisicing\",\n      \"statuses_url\": \"ex aliquip sint\",\n      \"subscribers_url\": \"nostrud magna adipisicing\",\n      \"subscription_url\": \"ex\",\n      \"tags_url\": \"anim\",\n      \"teams_url\": \"ex\",\n      \"trees_url\": \"consectetur ipsum\",\n      \"clone_url\": \"Duis sint do ullamco dolor\",\n      \"mirror_url\": \"elit incididunt\",\n      \"hooks_url\": \"Duis dolor\",\n      \"svn_url\": \"velit ea id dolore\",\n      \"homepage\": \"voluptate minim tempor cillum\",\n      \"language\": \"incididunt nulla dolor\",\n      \"forks_count\": -32686188,\n      \"stargazers_count\": -90392221,\n      \"watchers_count\": 36281082,\n      \"size\": 92194984,\n      \"default_branch\": \"cupidatat sint \",\n      \"open_issues_count\": -23082587,\n      \"is_template\": true,\n      \"topics\": [\n       \"enim irure in\",\n       \"eiusmod consectetur\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": true,\n      \"has_downloads\": true,\n      \"archived\": false,\n      \"disabled\": false,\n      \"visibility\": \"et\",\n      \"pushed_at\": \"qui proident eu\",\n      \"created_at\": \"mollit cillum\",\n      \"updated_at\": \"in voluptate ea\",\n      \"permissions\": {\n       \"admin\": true,\n       \"push\": true,\n       \"pull\": false\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"id culpa\",\n      \"temp_clone_token\": \"Lorem eiusmod\",\n      \"allow_squash_merge\": true,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": true,\n      \"subscribers_count\": 12516563,\n      \"network_count\": -82004674\n     },\n     \"temp_clone_token\": \"do officia\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 99943829,\n     \"network_count\": 87816874,\n     \"master_branch\": \"ipsum cillum sit est aliquip\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"ex\",\n    \"html_url\": \"dolor\",\n    \"issue_url\": \"laborum id Ut adipi\",\n    \"author_association\": \"sunt sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"Excepteur exercitation\",\n    \"body_html\": \"et \",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"anim ut mollit do\",\n     \"total_count\": -36608164,\n     \"+1\": 9688678,\n     \"-1\": 69639172,\n     \"laugh\": -43483940,\n     \"confused\": -65708964,\n     \"heart\": 17536132,\n     \"hooray\": 87391740,\n     \"eyes\": -38299912,\n     \"rocket\": 93806056\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"id eu\",\n     \"title\": \"nostrud elit Ut ipsum dolor\",\n     \"summary\": \"incididunt sed quis aliquip\",\n     \"action\": \"sunt ad\",\n     \"sha\": \"enim ut consequat\",\n     \"html_url\": \"dolor mollit ea nulla\"\n    },\n    {\n     \"page_name\": \"non aliq\",\n     \"title\": \"culpa elit fugiat cupidatat\",\n     \"summary\": \"qui reprehenderit ea \",\n     \"action\": \"ipsum dolor enim\",\n     \"sha\": \"velit dolore eiusmod in\",\n     \"html_url\": \"ut\"\n    }\n   ]\n  },\n  \"public\": false,\n  \"created_at\": \"laborum qui\",\n  \"org\": {\n   \"id\": 53209167,\n   \"login\": \"ut consequat dolor\",\n   \"gravatar_id\": \"anim nulla elit\",\n   \"url\": \"mollit qui\",\n   \"avatar_url\": \"do in aliqua esse est\",\n   \"display_login\": \"sunt\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "List notifications for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notifications?all=true&participating=true&since=aliquip sint&before=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							],
							"query": [
								{
									"key": "all",
									"value": "true",
									"description": "If `true`, show notifications marked as read."
								},
								{
									"key": "participating",
									"value": "true",
									"description": "If `true`, only shows notifications in which the user is directly participating or mentioned."
								},
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "before",
									"value": "aliquip sint",
									"description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "List all notifications for the current user, sorted by most recently updated."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications?all=true&participating=true&since=nisi reprehenderit&before=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "all",
											"value": "true"
										},
										{
											"key": "participating",
											"value": "true"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "before",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications?all=true&participating=true&since=nisi reprehenderit&before=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "all",
											"value": "true"
										},
										{
											"key": "participating",
											"value": "true"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "before",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications?all=true&participating=true&since=nisi reprehenderit&before=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "all",
											"value": "true"
										},
										{
											"key": "participating",
											"value": "true"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "before",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications?all=true&participating=true&since=nisi reprehenderit&before=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "all",
											"value": "true"
										},
										{
											"key": "participating",
											"value": "true"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "before",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"1\",\n  \"repository\": {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\"\n  },\n  \"subject\": {\n   \"title\": \"Greetings\",\n   \"url\": \"https://api.github.com/repos/octokit/octokit.rb/issues/123\",\n   \"latest_comment_url\": \"https://api.github.com/repos/octokit/octokit.rb/issues/comments/123\",\n   \"type\": \"Issue\"\n  },\n  \"reason\": \"subscribed\",\n  \"unread\": true,\n  \"updated_at\": \"2014-11-07T22:01:45Z\",\n  \"last_read_at\": \"2014-11-07T22:01:45Z\",\n  \"url\": \"https://api.github.com/notifications/threads/1\"\n }\n]"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/notifications?all=true&participating=true&since=nisi reprehenderit&before=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									],
									"query": [
										{
											"key": "all",
											"value": "true"
										},
										{
											"key": "participating",
											"value": "true"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "before",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Mark notifications as read",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"last_read_at\": \"id veniam dolor occaecat\",\n    \"read\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							]
						},
						"description": "Marks all notifications as \"read\" removes it from the [default view on GitHub](https://github.com/notifications). If the number of notifications is too large to complete in one request, you will receive a `202 Accepted` status and GitHub will run an asynchronous process to mark notifications as \"read.\" To check whether any \"unread\" notifications remain, you can use the [List notifications for the authenticated user](https://developer.github.com/v3/activity/notifications/#list-notifications-for-the-authenticated-user) endpoint and pass the query parameter `all=false`."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"last_read_at\": \"id veniam dolor occaecat\",\n    \"read\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"last_read_at\": \"id veniam dolor occaecat\",\n    \"read\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"quis id fugiat laboris ad\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"last_read_at\": \"id veniam dolor occaecat\",\n    \"read\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"last_read_at\": \"id veniam dolor occaecat\",\n    \"read\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Reset Content",
							"code": 205,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"last_read_at\": \"id veniam dolor occaecat\",\n    \"read\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List repositories watched by the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/subscriptions?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"subscriptions"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Lists repositories the authenticated user is watching."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/subscriptions?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"subscriptions"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/subscriptions?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"subscriptions"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/subscriptions?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"subscriptions"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"template_repository\": \"octocat/template\",\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"delete_branch_on_merge\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"spdx_id\": \"MIT\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n  }\n }\n]"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/subscriptions?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"subscriptions"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List repositories starred by the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/starred?sort=created&direction=desc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"starred"
							],
							"query": [
								{
									"key": "sort",
									"value": "created",
									"description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to)."
								},
								{
									"key": "direction",
									"value": "desc",
									"description": "One of `asc` (ascending) or `desc` (descending)."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Lists repositories the authenticated user has starred.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred?sort=created&direction=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"allow_rebase_merge\": true,\n  \"template_repository\": null,\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"allow_squash_merge\": true,\n  \"delete_branch_on_merge\": true,\n  \"allow_merge_commit\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"spdx_id\": \"MIT\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n   \"html_url\": \"https://github.com/licenses/mit\"\n  },\n  \"forks\": 1,\n  \"open_issues\": 1,\n  \"watchers\": 1\n }\n]"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred?sort=created&direction=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred?sort=created&direction=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/starred?sort=created&direction=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"starred"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List stargazers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/stargazers?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"stargazers"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists the people that have starred the repository.\n\nYou can also find out _when_ stars were created by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/stargazers?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"stargazers"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/stargazers?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"stargazers"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List public events received by a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/received_events/public?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"received_events",
								"public"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/received_events/public?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"received_events",
										"public"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"laboris culpa do\",\n  \"type\": \"pariatur labore cupidatat\",\n  \"actor\": {\n   \"id\": 88252344,\n   \"login\": \"dolor culpa\",\n   \"gravatar_id\": \"enim exercitation esse\",\n   \"url\": \"ullamco\",\n   \"avatar_url\": \"incididunt consequat sed dolo\",\n   \"display_login\": \"fugiat Ut id est\"\n  },\n  \"repo\": {\n   \"id\": -28870451,\n   \"name\": \"Lorem occaecat\",\n   \"url\": \"consectetur eiusmod sit\"\n  },\n  \"payload\": {\n   \"action\": \"non qui\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"officia\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -11408165,\n      \"node_id\": \"in ad ex consequat\",\n      \"url\": \"fugiat\",\n      \"name\": \"mollit ut offici\",\n      \"description\": \"deserunt\",\n      \"color\": \"laboris velit cillum\",\n      \"default\": true\n     },\n     {\n      \"id\": 83338791,\n      \"node_id\": \"officia aute quis\",\n      \"url\": \"deserunt id Lorem\",\n      \"name\": \"laboris Lorem\",\n      \"description\": \"ut esse aute est\",\n      \"color\": \"non laboris nulla est\",\n      \"default\": false\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": false,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"commodo ad sint esse\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"nostru\",\n     \"html_url\": \"nostrud elit qui\",\n     \"patch_url\": \"enim laboris\",\n     \"url\": \"cupidatat cillum\",\n     \"merged_at\": \"aliquip veniam sed\"\n    },\n    \"body_html\": \"officia ut sit\",\n    \"body_text\": \"officia sunt cupidatat consequat\",\n    \"timeline_url\": \"do dolor in volu\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": -61641183,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"culpa aliqua labore\",\n     \"archived\": true,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": 52988511,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"ut est\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -58779489,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": false,\n      \"pull\": false,\n      \"push\": false,\n      \"triage\": true,\n      \"maintain\": true\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"qui eiusmod do dolo\",\n      \"culpa mo\"\n     ],\n     \"visibility\": \"sint pariatur iru\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": -11723839,\n      \"node_id\": \"laboris\",\n      \"name\": \"dolor exercitation sunt\",\n      \"full_name\": \"elit qui veniam commodo\",\n      \"owner\": {\n       \"login\": \"ad dolore\",\n       \"id\": -96819604,\n       \"node_id\": \"non Ut nostrud elit\",\n       \"avatar_url\": \"aliquip esse ipsum\",\n       \"gravatar_id\": \"culpa\",\n       \"url\": \"cupidatat voluptate\",\n       \"html_url\": \"Duis in nulla\",\n       \"followers_url\": \"sed\",\n       \"following_url\": \"ex deserunt nisi\",\n       \"gists_url\": \"amet adipisicing aliqua\",\n       \"starred_url\": \"non voluptate Duis reprehenderit\",\n       \"subscriptions_url\": \"culpa aliquip sit\",\n       \"organizations_url\": \"consequat voluptate\",\n       \"repos_url\": \"officia\",\n       \"events_url\": \"in ea et\",\n       \"received_events_url\": \"fugiat esse cupid\",\n       \"type\": \"sed sit\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"dolore pariatur incididunt ad\",\n      \"description\": \"adipisicing dolore incididunt exercitation Excepteur\",\n      \"fork\": false,\n      \"url\": \"ea in officia in\",\n      \"archive_url\": \"dolor\",\n      \"assignees_url\": \"consequat est ut labore\",\n      \"blobs_url\": \"irure\",\n      \"branches_url\": \"et est qui\",\n      \"collaborators_url\": \"magn\",\n      \"comments_url\": \"non\",\n      \"commits_url\": \"veniam elit \",\n      \"compare_url\": \"adipisicing non\",\n      \"contents_url\": \"ut commodo cupidatat consequat\",\n      \"contributors_url\": \"officia ad cillum sed\",\n      \"deployments_url\": \"eiusmod non irure\",\n      \"downloads_url\": \"consequat amet adipisicing\",\n      \"events_url\": \"Lorem dolor\",\n      \"forks_url\": \"dolor labore id aliqua in\",\n      \"git_commits_url\": \"cillum Duis\",\n      \"git_refs_url\": \"dolor Excepteur in\",\n      \"git_tags_url\": \"esse Ut Excepteur minim\",\n      \"git_url\": \"Lorem officia sint laboris\",\n      \"issue_comment_url\": \"eiu\",\n      \"issue_events_url\": \"velit reprehenderit adipisicing magna esse\",\n      \"issues_url\": \"consequat\",\n      \"keys_url\": \"culpa non\",\n      \"labels_url\": \"nulla amet aliqua consequat\",\n      \"languages_url\": \"velit et ex nisi\",\n      \"merges_url\": \"incididunt commodo exercitation\",\n      \"milestones_url\": \"nostr\",\n      \"notifications_url\": \"Ut\",\n      \"pulls_url\": \"amet esse aute veniam\",\n      \"releases_url\": \"dolor sunt\",\n      \"ssh_url\": \"aliquip\",\n      \"stargazers_url\": \"Exce\",\n      \"statuses_url\": \"in tempor irure sed\",\n      \"subscribers_url\": \"ut laborum nulla voluptate\",\n      \"subscription_url\": \"cupidatat cillum\",\n      \"tags_url\": \"irure commodo dolor\",\n      \"teams_url\": \"cillum aliquip Lorem\",\n      \"trees_url\": \"eiusmod\",\n      \"clone_url\": \"adipisicing irure\",\n      \"mirror_url\": \"labore tempor dolore sed\",\n      \"hooks_url\": \"commodo ut voluptate\",\n      \"svn_url\": \"eiusmod consequat\",\n      \"homepage\": \"aliqua amet do officia\",\n      \"language\": \"id Duis consectetur\",\n      \"forks_count\": 36505039,\n      \"stargazers_count\": -15209385,\n      \"watchers_count\": 22691037,\n      \"size\": 52740972,\n      \"default_branch\": \"cupidatat dolor\",\n      \"open_issues_count\": -77157273,\n      \"is_template\": false,\n      \"topics\": [\n       \"magna Lorem ad elit\",\n       \"ut exercitation\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": false,\n      \"has_downloads\": true,\n      \"archived\": true,\n      \"disabled\": true,\n      \"visibility\": \"nisi\",\n      \"pushed_at\": \"laboris sint incididunt minim\",\n      \"created_at\": \"in velit\",\n      \"updated_at\": \"sunt eu\",\n      \"permissions\": {\n       \"admin\": false,\n       \"push\": false,\n       \"pull\": true\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"mollit anim irure\",\n      \"temp_clone_token\": \"deserunt nulla\",\n      \"allow_squash_merge\": false,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": false,\n      \"subscribers_count\": 46064079,\n      \"network_count\": 37676967\n     },\n     \"temp_clone_token\": \"ad dolor nulla eu in\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 69321673,\n     \"network_count\": 88749542,\n     \"master_branch\": \"veniam qui dolor magna nostrud\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"Duis culpa Excepteur consectetur minim\",\n    \"html_url\": \"Ut\",\n    \"issue_url\": \"consectetur nulla adipisicing ad\",\n    \"author_association\": \"nisi sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"commodo in reprehenderit\",\n    \"body_html\": \"magna amet ipsum\",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"fugiat occaecat laborum\",\n     \"total_count\": -50086991,\n     \"+1\": -89229718,\n     \"-1\": -87796879,\n     \"laugh\": -88359387,\n     \"confused\": -98245507,\n     \"heart\": 34607739,\n     \"hooray\": 26814181,\n     \"eyes\": -97041191,\n     \"rocket\": -27480535\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"in exercitation dolor\",\n     \"title\": \"eu c\",\n     \"summary\": \"proident Excepteur\",\n     \"action\": \"enim ullamco\",\n     \"sha\": \"ut pariatur esse Duis\",\n     \"html_url\": \"tempor voluptate magna dolore enim\"\n    },\n    {\n     \"page_name\": \"elit voluptate nostrud in\",\n     \"title\": \"laborum et nostrud in ven\",\n     \"summary\": \"consectetur anim in dolor\",\n     \"action\": \"ut laborum\",\n     \"sha\": \"aliqua dolor\",\n     \"html_url\": \"consequat \"\n    }\n   ]\n  },\n  \"public\": true,\n  \"created_at\": \"id et\",\n  \"org\": {\n   \"id\": -52767875,\n   \"login\": \"al\",\n   \"gravatar_id\": \"culpa\",\n   \"url\": \"voluptate sunt Lorem eu\",\n   \"avatar_url\": \"cillum ea\",\n   \"display_login\": \"laborum Lorem\"\n  }\n },\n {\n  \"id\": \"occaecat in commodo ad\",\n  \"type\": \"elit sunt laborum consectetur eiusmod\",\n  \"actor\": {\n   \"id\": -46334373,\n   \"login\": \"deserunt reprehenderit\",\n   \"gravatar_id\": \"eiusmod dolor\",\n   \"url\": \"consectetur nulla\",\n   \"avatar_url\": \"culpa esse non\",\n   \"display_login\": \"esse\"\n  },\n  \"repo\": {\n   \"id\": -64345412,\n   \"name\": \"eiusmod\",\n   \"url\": \"est dolor ad ullamco\"\n  },\n  \"payload\": {\n   \"action\": \"mollit minim commodo deserunt\",\n   \"issue\": {\n    \"assignee\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"closed_at\": \"voluptate velit mollit non anim\",\n    \"comments\": 0,\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n    \"id\": 1,\n    \"node_id\": \"MDU6SXNzdWUx\",\n    \"labels\": [\n     {\n      \"id\": -74276284,\n      \"node_id\": \"et paria\",\n      \"url\": \"anim Excepteur commod\",\n      \"name\": \"dolore amet enim non\",\n      \"description\": \"tempor Excepteur\",\n      \"color\": \"voluptate occaecat ipsum\",\n      \"default\": false\n     },\n     {\n      \"id\": -26952286,\n      \"node_id\": \"amet sed mollit elit\",\n      \"url\": \"nostrud ut non ut\",\n      \"name\": \"est nulla quis\",\n      \"description\": \"rep\",\n      \"color\": \"reprehenderit veniam\",\n      \"default\": true\n     }\n    ],\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n    \"milestone\": {\n     \"closed_issues\": 8,\n     \"creator\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"description\": \"Tracking milestone for version 1.0\",\n     \"due_on\": \"2012-10-09T23:39:01Z\",\n     \"closed_at\": \"2013-02-12T13:22:01Z\",\n     \"id\": 1002604,\n     \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n     \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n     \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n     \"number\": 42,\n     \"open_issues\": 4,\n     \"state\": \"open\",\n     \"title\": \"v1.0\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n     \"created_at\": \"2011-04-10T20:09:31Z\",\n     \"updated_at\": \"2014-03-03T18:58:10Z\"\n    },\n    \"number\": 1347,\n    \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"state\": \"open\",\n    \"locked\": true,\n    \"title\": \"Found a bug\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"author_association\": \"enim\",\n    \"created_at\": \"2011-04-22T13:33:48Z\",\n    \"updated_at\": \"2011-04-22T13:33:48Z\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     }\n    ],\n    \"active_lock_reason\": \"too heated\",\n    \"pull_request\": {\n     \"diff_url\": \"ea\",\n     \"html_url\": \"sunt labore\",\n     \"patch_url\": \"sed sint eiusmod exercitation\",\n     \"url\": \"Duis ullamco mo\",\n     \"merged_at\": \"eiusmod officia consectetur aute\"\n    },\n    \"body_html\": \"laborum cillum commodo\",\n    \"body_text\": \"elit fugiat ve\",\n    \"timeline_url\": \"commodo fugiat in in\",\n    \"repository\": {\n     \"archive_url\": \"http://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n     \"assignees_url\": \"http://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n     \"blobs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n     \"branches_url\": \"http://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n     \"collaborators_url\": \"http://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n     \"comments_url\": \"http://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n     \"commits_url\": \"http://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n     \"compare_url\": \"http://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n     \"contents_url\": \"http://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n     \"contributors_url\": \"http://api.github.com/repos/octocat/Hello-World/contributors\",\n     \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n     \"description\": \"This your first repo!\",\n     \"downloads_url\": \"http://api.github.com/repos/octocat/Hello-World/downloads\",\n     \"events_url\": \"http://api.github.com/repos/octocat/Hello-World/events\",\n     \"fork\": true,\n     \"forks_url\": \"http://api.github.com/repos/octocat/Hello-World/forks\",\n     \"full_name\": \"octocat/Hello-World\",\n     \"git_commits_url\": \"http://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n     \"git_refs_url\": \"http://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n     \"git_tags_url\": \"http://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n     \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\",\n     \"html_url\": \"https://github.com/octocat/Hello-World\",\n     \"id\": 42,\n     \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n     \"issue_comment_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n     \"issue_events_url\": \"http://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n     \"issues_url\": \"http://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n     \"keys_url\": \"http://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n     \"labels_url\": \"http://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n     \"languages_url\": \"http://api.github.com/repos/octocat/Hello-World/languages\",\n     \"merges_url\": \"http://api.github.com/repos/octocat/Hello-World/merges\",\n     \"milestones_url\": \"http://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n     \"name\": \"Team Environment\",\n     \"notifications_url\": \"http://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": true,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"private\": false,\n     \"pulls_url\": \"http://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n     \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n     \"stargazers_url\": \"http://api.github.com/repos/octocat/Hello-World/stargazers\",\n     \"statuses_url\": \"http://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n     \"subscribers_url\": \"http://api.github.com/repos/octocat/Hello-World/subscribers\",\n     \"subscription_url\": \"http://api.github.com/repos/octocat/Hello-World/subscription\",\n     \"tags_url\": \"http://api.github.com/repos/octocat/Hello-World/tags\",\n     \"teams_url\": \"http://api.github.com/repos/octocat/Hello-World/teams\",\n     \"trees_url\": \"http://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n     \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n     \"default_branch\": \"master\",\n     \"forks\": 21821554,\n     \"forks_count\": 9,\n     \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n     \"has_downloads\": true,\n     \"has_issues\": true,\n     \"has_projects\": true,\n     \"has_wiki\": true,\n     \"has_pages\": false,\n     \"homepage\": \"https://github.com\",\n     \"language\": \"in irure\",\n     \"archived\": false,\n     \"disabled\": true,\n     \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n     \"open_issues\": -43887097,\n     \"open_issues_count\": 0,\n     \"license\": {\n      \"key\": \"mit\",\n      \"name\": \"MIT License\",\n      \"url\": \"https://api.github.com/licenses/mit\",\n      \"spdx_id\": \"MIT\",\n      \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n      \"html_url\": \"dolor incididunt\"\n     },\n     \"pushed_at\": \"2011-01-26T19:06:43Z\",\n     \"size\": 108,\n     \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n     \"stargazers_count\": 80,\n     \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n     \"watchers\": -85561529,\n     \"watchers_count\": 80,\n     \"created_at\": \"2011-01-26T19:01:12Z\",\n     \"updated_at\": \"2011-01-26T19:14:43Z\",\n     \"permissions\": {\n      \"admin\": true,\n      \"pull\": true,\n      \"push\": true,\n      \"triage\": false,\n      \"maintain\": false\n     },\n     \"is_template\": true,\n     \"topics\": [\n      \"in\",\n      \"id consequat anim labore nisi\"\n     ],\n     \"visibility\": \"enim in est\",\n     \"allow_rebase_merge\": true,\n     \"template_repository\": {\n      \"id\": 89436410,\n      \"node_id\": \"amet minim esse ut\",\n      \"name\": \"ut laborum\",\n      \"full_name\": \"reprehenderit veniam minim\",\n      \"owner\": {\n       \"login\": \"est aute Excepteur\",\n       \"id\": -5716243,\n       \"node_id\": \"ex in est\",\n       \"avatar_url\": \"velit \",\n       \"gravatar_id\": \"dolore magna\",\n       \"url\": \"nisi\",\n       \"html_url\": \"eli\",\n       \"followers_url\": \"dolor elit eiusmod\",\n       \"following_url\": \"Ut qui voluptate do\",\n       \"gists_url\": \"aute laborum dolor\",\n       \"starred_url\": \"incididunt ad\",\n       \"subscriptions_url\": \"ea quis eu dolore\",\n       \"organizations_url\": \"amet ut\",\n       \"repos_url\": \"labore ut mollit laboris\",\n       \"events_url\": \"exercitation quis adipisicing voluptate ad\",\n       \"received_events_url\": \"cillum ut officia\",\n       \"type\": \"nostrud occaecat irure nisi\",\n       \"site_admin\": false\n      },\n      \"private\": false,\n      \"html_url\": \"eiusmod voluptate magna\",\n      \"description\": \"enim dolore Duis esse elit\",\n      \"fork\": true,\n      \"url\": \"tempor quis do\",\n      \"archive_url\": \"dolore sunt anim Excepteur\",\n      \"assignees_url\": \"ea sunt voluptate deserunt\",\n      \"blobs_url\": \"tempor sint dolor amet\",\n      \"branches_url\": \"nulla in\",\n      \"collaborators_url\": \"ea mini\",\n      \"comments_url\": \"Lorem amet\",\n      \"commits_url\": \"id adipisicing cupidatat\",\n      \"compare_url\": \"veniam \",\n      \"contents_url\": \"Duis voluptate pariatur\",\n      \"contributors_url\": \"cupidatat in\",\n      \"deployments_url\": \"sunt\",\n      \"downloads_url\": \"cu\",\n      \"events_url\": \"Excepteur\",\n      \"forks_url\": \"sit\",\n      \"git_commits_url\": \"quis ullamco commodo\",\n      \"git_refs_url\": \"nulla esse\",\n      \"git_tags_url\": \"commodo in velit\",\n      \"git_url\": \"Duis cillum\",\n      \"issue_comment_url\": \"in non\",\n      \"issue_events_url\": \"culpa sint eu\",\n      \"issues_url\": \"ipsum irure do\",\n      \"keys_url\": \"Excepteur fugiat ut dolore\",\n      \"labels_url\": \"dolor esse\",\n      \"languages_url\": \"exercitation sunt culpa in anim\",\n      \"merges_url\": \"sed culpa\",\n      \"milestones_url\": \"cupidatat qui in do dolore\",\n      \"notifications_url\": \"deserunt reprehenderit mollit\",\n      \"pulls_url\": \"cillum ex\",\n      \"releases_url\": \"aute ullamco adipisicing\",\n      \"ssh_url\": \"enim sed dolor ex\",\n      \"stargazers_url\": \"commodo non adipisicing\",\n      \"statuses_url\": \"ex aliquip sint\",\n      \"subscribers_url\": \"nostrud magna adipisicing\",\n      \"subscription_url\": \"ex\",\n      \"tags_url\": \"anim\",\n      \"teams_url\": \"ex\",\n      \"trees_url\": \"consectetur ipsum\",\n      \"clone_url\": \"Duis sint do ullamco dolor\",\n      \"mirror_url\": \"elit incididunt\",\n      \"hooks_url\": \"Duis dolor\",\n      \"svn_url\": \"velit ea id dolore\",\n      \"homepage\": \"voluptate minim tempor cillum\",\n      \"language\": \"incididunt nulla dolor\",\n      \"forks_count\": -32686188,\n      \"stargazers_count\": -90392221,\n      \"watchers_count\": 36281082,\n      \"size\": 92194984,\n      \"default_branch\": \"cupidatat sint \",\n      \"open_issues_count\": -23082587,\n      \"is_template\": true,\n      \"topics\": [\n       \"enim irure in\",\n       \"eiusmod consectetur\"\n      ],\n      \"has_issues\": true,\n      \"has_projects\": true,\n      \"has_wiki\": false,\n      \"has_pages\": true,\n      \"has_downloads\": true,\n      \"archived\": false,\n      \"disabled\": false,\n      \"visibility\": \"et\",\n      \"pushed_at\": \"qui proident eu\",\n      \"created_at\": \"mollit cillum\",\n      \"updated_at\": \"in voluptate ea\",\n      \"permissions\": {\n       \"admin\": true,\n       \"push\": true,\n       \"pull\": false\n      },\n      \"allow_rebase_merge\": true,\n      \"template_repository\": \"id culpa\",\n      \"temp_clone_token\": \"Lorem eiusmod\",\n      \"allow_squash_merge\": true,\n      \"delete_branch_on_merge\": true,\n      \"allow_merge_commit\": true,\n      \"subscribers_count\": 12516563,\n      \"network_count\": -82004674\n     },\n     \"temp_clone_token\": \"do officia\",\n     \"allow_squash_merge\": true,\n     \"delete_branch_on_merge\": false,\n     \"allow_merge_commit\": true,\n     \"subscribers_count\": 99943829,\n     \"network_count\": 87816874,\n     \"master_branch\": \"ipsum cillum sit est aliquip\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:42Z\\\"\"\n    },\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    }\n   },\n   \"comment\": {\n    \"id\": 42,\n    \"node_id\": \"ex\",\n    \"html_url\": \"dolor\",\n    \"issue_url\": \"laborum id Ut adipi\",\n    \"author_association\": \"sunt sint\",\n    \"user\": {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    \"url\": \"https://api.github.com/repositories/42/issues/comments/1\",\n    \"created_at\": \"2011-04-14T16:00:49Z\",\n    \"updated_at\": \"2011-04-14T16:00:49Z\",\n    \"body\": \"What version of Safari were you using when you observed this bug?\",\n    \"body_text\": \"Excepteur exercitation\",\n    \"body_html\": \"et \",\n    \"performed_via_github_app\": {\n     \"id\": 37,\n     \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n     \"owner\": {\n      \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n      \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n      \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n      \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n      \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n      \"gravatar_id\": \"\",\n      \"html_url\": \"https://github.com/octocat\",\n      \"id\": 1,\n      \"node_id\": \"MDQ6VXNlcjE=\",\n      \"login\": \"octocat\",\n      \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n      \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n      \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n      \"site_admin\": false,\n      \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n      \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n      \"type\": \"User\",\n      \"url\": \"https://api.github.com/users/octocat\",\n      \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n     },\n     \"name\": \"Probot Owners\",\n     \"description\": \"\",\n     \"external_url\": \"https://example.com\",\n     \"html_url\": \"https://github.com/apps/super-ci\",\n     \"created_at\": \"2017-07-08T16:18:44-04:00\",\n     \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n     \"permissions\": {\n      \"issues\": \"read\",\n      \"deployments\": \"write\"\n     },\n     \"events\": [\n      \"label\",\n      \"deployment\"\n     ],\n     \"slug\": \"probot-owners\",\n     \"installations_count\": 5,\n     \"client_id\": \"\\\"Iv1.25b5d1e65ffc4022\\\"\",\n     \"client_secret\": \"\\\"1d4b2097ac622ba702d19de498f005747a8b21d3\\\"\",\n     \"webhook_secret\": \"\\\"6fba8f2fc8a7e8f2cca5577eddd82ca7586b3b6b\\\"\",\n     \"pem\": \"\\\"-----BEGIN RSA PRIVATE KEY-----\\\\nMIIEogIBAAKCAQEArYxrNYD/iT5CZVpRJu4rBKmmze3PVmT/gCo2ATUvDvZTPTey\\\\nxcGJ3vvrJXazKk06pN05TN29o98jrYz4cengG3YGsXPNEpKsIrEl8NhbnxapEnM9\\\\nJCMRe0P5JcPsfZlX6hmiT7136GRWiGOUba2X9+HKh8QJVLG5rM007TBER9/z9mWm\\\\nrJuNh+m5l320oBQY/Qq3A7wzdEfZw8qm/mIN0FCeoXH1L6B8xXWaAYBwhTEh6SSn\\\\nZHlO1Xu1JWDmAvBCi0RO5aRSKM8q9QEkvvHP4yweAtK3N8+aAbZ7ovaDhyGz8r6r\\\\nzhU1b8Uo0Z2ysf503WqzQgIajr7Fry7/kUwpgQIDAQABAoIBADwJp80Ko1xHPZDy\\\\nfcCKBDfIuPvkmSW6KumbsLMaQv1aGdHDwwTGv3t0ixSay8CGlxMRtRDyZPib6SvQ\\\\n6OH/lpfpbMdW2ErkksgtoIKBVrDilfrcAvrNZu7NxRNbhCSvN8q0s4ICecjbbVQh\\\\nnueSdlA6vGXbW58BHMq68uRbHkP+k+mM9U0mDJ1HMch67wlg5GbayVRt63H7R2+r\\\\nVxcna7B80J/lCEjIYZznawgiTvp3MSanTglqAYi+m1EcSsP14bJIB9vgaxS79kTu\\\\noiSo93leJbBvuGo8QEiUqTwMw4tDksmkLsoqNKQ1q9P7LZ9DGcujtPy4EZsamSJT\\\\ny8OJt0ECgYEA2lxOxJsQk2kI325JgKFjo92mQeUObIvPfSNWUIZQDTjniOI6Gv63\\\\nGLWVFrZcvQBWjMEQraJA9xjPbblV8PtfO87MiJGLWCHFxmPz2dzoedN+2Coxom8m\\\\nV95CLz8QUShuao6u/RYcvUaZEoYs5bHcTmy5sBK80JyEmafJPtCQVxMCgYEAy3ar\\\\nZr3yv4xRPEPMat4rseswmuMooSaK3SKub19WFI5IAtB/e7qR1Rj9JhOGcZz+OQrl\\\\nT78O2OFYlgOIkJPvRMrPpK5V9lslc7tz1FSh3BZMRGq5jSyD7ETSOQ0c8T2O/s7v\\\\nbeEPbVbDe4mwvM24XByH0GnWveVxaDl51ABD65sCgYB3ZAspUkOA5egVCh8kNpnd\\\\nSd6SnuQBE3ySRlT2WEnCwP9Ph6oPgn+oAfiPX4xbRqkL8q/k0BdHQ4h+zNwhk7+h\\\\nWtPYRAP1Xxnc/F+jGjb+DVaIaKGU18MWPg7f+FI6nampl3Q0KvfxwX0GdNhtio8T\\\\nTj1E+SnFwh56SRQuxSh2gwKBgHKjlIO5NtNSflsUYFM+hyQiPiqnHzddfhSG+/3o\\\\nm5nNaSmczJesUYreH5San7/YEy2UxAugvP7aSY2MxB+iGsiJ9WD2kZzTUlDZJ7RV\\\\nUzWsoqBR+eZfVJ2FUWWvy8TpSG6trh4dFxImNtKejCR1TREpSiTV3Zb1dmahK9GV\\\\nrK9NAoGAbBxRLoC01xfxCTgt5BDiBcFVh4fp5yYKwavJPLzHSpuDOrrI9jDn1oKN\\\\nonq5sDU1i391zfQvdrbX4Ova48BN+B7p63FocP/MK5tyyBoT8zQEk2+vWDOw7H/Z\\\\nu5dTCPxTIsoIwUw1I+7yIxqJzLPFgR2gVBwY1ra/8iAqCj+zeBw=\\\\n-----END RSA PRIVATE KEY-----\\\\n\\\"\"\n    },\n    \"reactions\": {\n     \"url\": \"anim ut mollit do\",\n     \"total_count\": -36608164,\n     \"+1\": 9688678,\n     \"-1\": 69639172,\n     \"laugh\": -43483940,\n     \"confused\": -65708964,\n     \"heart\": 17536132,\n     \"hooray\": 87391740,\n     \"eyes\": -38299912,\n     \"rocket\": 93806056\n    }\n   },\n   \"pages\": [\n    {\n     \"page_name\": \"id eu\",\n     \"title\": \"nostrud elit Ut ipsum dolor\",\n     \"summary\": \"incididunt sed quis aliquip\",\n     \"action\": \"sunt ad\",\n     \"sha\": \"enim ut consequat\",\n     \"html_url\": \"dolor mollit ea nulla\"\n    },\n    {\n     \"page_name\": \"non aliq\",\n     \"title\": \"culpa elit fugiat cupidatat\",\n     \"summary\": \"qui reprehenderit ea \",\n     \"action\": \"ipsum dolor enim\",\n     \"sha\": \"velit dolore eiusmod in\",\n     \"html_url\": \"ut\"\n    }\n   ]\n  },\n  \"public\": false,\n  \"created_at\": \"laborum qui\",\n  \"org\": {\n   \"id\": 53209167,\n   \"login\": \"ut consequat dolor\",\n   \"gravatar_id\": \"anim nulla elit\",\n   \"url\": \"mollit qui\",\n   \"avatar_url\": \"do in aliqua esse est\",\n   \"display_login\": \"sunt\"\n  }\n }\n]"
						}
					]
				}
			],
			"description": "Activity APIs provide access to notifications, subscriptions, and timelines.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "apps",
			"item": [
				{
					"name": "Delete an app token",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access_token\": \"e72e16c7e42f292c6912e7710c838347ae178b4a\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/applications/:client_id/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications",
								":client_id",
								"token"
							],
							"variable": [
								{
									"key": "client_id",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "OAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": \"e72e16c7e42f292c6912e7710c838347ae178b4a\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/applications/:client_id/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										":client_id",
										"token"
									],
									"variable": [
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": \"e72e16c7e42f292c6912e7710c838347ae178b4a\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/applications/:client_id/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										":client_id",
										"token"
									],
									"variable": [
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Reset a token",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access_token\": \"ipsum\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/applications/:client_id/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications",
								":client_id",
								"token"
							],
							"variable": [
								{
									"key": "client_id",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "OAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the \"token\" property in the response because changes take effect immediately. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": \"ipsum\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/applications/:client_id/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										":client_id",
										"token"
									],
									"variable": [
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"url\": \"https://api.github.com/authorizations/1\",\n \"scopes\": [\n  \"public_repo\"\n ],\n \"token\": \"abcdefgh12345678\",\n \"token_last_eight\": \"12345678\",\n \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\n \"app\": {\n  \"url\": \"http://my-github-app.com\",\n  \"name\": \"my github app\",\n  \"client_id\": \"abcde12345fghij67890\"\n },\n \"note\": \"optional note\",\n \"note_url\": \"http://optional/note/url\",\n \"updated_at\": \"2011-09-06T20:39:23Z\",\n \"created_at\": \"2011-09-06T17:26:27Z\",\n \"fingerprint\": \"jklmnop12345678\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": \"ipsum\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/applications/:client_id/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										":client_id",
										"token"
									],
									"variable": [
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Check a token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access_token\": \"ipsum\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/applications/:client_id/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications",
								":client_id",
								"token"
							],
							"variable": [
								{
									"key": "client_id",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "OAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) to use this endpoint, where the username is the OAuth application `client_id` and the password is its `client_secret`. Invalid tokens will return `404 NOT FOUND`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": \"ipsum\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/applications/:client_id/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										":client_id",
										"token"
									],
									"variable": [
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"url\": \"https://api.github.com/authorizations/1\",\n \"scopes\": [\n  \"public_repo\"\n ],\n \"token\": \"abcdefgh12345678\",\n \"token_last_eight\": \"12345678\",\n \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\n \"app\": {\n  \"url\": \"http://my-github-app.com\",\n  \"name\": \"my github app\",\n  \"client_id\": \"abcde12345fghij67890\"\n },\n \"note\": \"optional note\",\n \"note_url\": \"http://optional/note/url\",\n \"updated_at\": \"2011-09-06T20:39:23Z\",\n \"created_at\": \"2011-09-06T17:26:27Z\",\n \"fingerprint\": \"jklmnop12345678\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": \"ipsum\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/applications/:client_id/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										":client_id",
										"token"
									],
									"variable": [
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": \"ipsum\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/applications/:client_id/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										":client_id",
										"token"
									],
									"variable": [
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get a user installation for the authenticated app",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/installation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"installation"
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Enables an authenticated GitHub App to find the user’s installation information.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/installation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"installation"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"account\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"avatar_url\": \"https://github.com/images/error/hubot_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"html_url\": \"https://github.com/github\",\n  \"followers_url\": \"https://api.github.com/users/github/followers\",\n  \"following_url\": \"https://api.github.com/users/github/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/github/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/github/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/github/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/github/orgs\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"received_events_url\": \"https://api.github.com/users/github/received_events\",\n  \"type\": \"Organization\",\n  \"site_admin\": false\n },\n \"repository_selection\": \"all\",\n \"access_tokens_url\": \"https://api.github.com/installations/1/access_tokens\",\n \"repositories_url\": \"https://api.github.com/installation/repositories\",\n \"html_url\": \"https://github.com/organizations/github/settings/installations/1\",\n \"app_id\": 1,\n \"target_id\": 1,\n \"target_type\": \"Organization\",\n \"permissions\": {\n  \"checks\": \"write\",\n  \"metadata\": \"read\",\n  \"contents\": \"read\"\n },\n \"events\": [\n  \"push\",\n  \"pull_request\"\n ],\n \"created_at\": \"2018-02-09T20:51:14Z\",\n \"updated_at\": \"2018-02-09T20:51:14Z\",\n \"single_file_name\": null,\n \"app_slug\": \"github-actions\"\n}"
						}
					]
				},
				{
					"name": "List accounts for a plan",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/marketplace_listing/plans/:plan_id/accounts?sort=created&direction=asc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"marketplace_listing",
								"plans",
								":plan_id",
								"accounts"
							],
							"query": [
								{
									"key": "sort",
									"value": "created",
									"description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to)."
								},
								{
									"key": "direction",
									"value": "asc",
									"description": "To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "plan_id",
									"value": "41891364",
									"description": "(Required) plan_id parameter"
								}
							]
						},
						"description": "Returns user and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/plans/:plan_id/accounts?sort=created&direction=asc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"plans",
										":plan_id",
										"accounts"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "plan_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/plans/:plan_id/accounts?sort=created&direction=asc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"plans",
										":plan_id",
										"accounts"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "plan_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/plans/:plan_id/accounts?sort=created&direction=asc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"plans",
										":plan_id",
										"accounts"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "plan_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/plans/:plan_id/accounts?sort=created&direction=asc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"plans",
										":plan_id",
										"accounts"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "plan_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"type\": \"Organization\",\n  \"id\": 4,\n  \"login\": \"github\",\n  \"organization_billing_email\": \"billing@github.com\",\n  \"marketplace_pending_change\": {\n   \"effective_date\": \"2017-11-11T00:00:00Z\",\n   \"unit_count\": null,\n   \"id\": 77,\n   \"plan\": {\n    \"url\": \"https://api.github.com/marketplace_listing/plans/1111\",\n    \"accounts_url\": \"https://api.github.com/marketplace_listing/plans/1111/accounts\",\n    \"id\": 1111,\n    \"number\": 2,\n    \"name\": \"Startup\",\n    \"description\": \"A professional-grade CI solution\",\n    \"monthly_price_in_cents\": 699,\n    \"yearly_price_in_cents\": 7870,\n    \"price_model\": \"flat-rate\",\n    \"has_free_trial\": true,\n    \"state\": \"published\",\n    \"unit_name\": null,\n    \"bullets\": [\n     \"Up to 10 private repositories\",\n     \"3 concurrent builds\"\n    ]\n   }\n  },\n  \"marketplace_purchase\": {\n   \"billing_cycle\": \"monthly\",\n   \"next_billing_date\": \"2017-11-11T00:00:00Z\",\n   \"unit_count\": null,\n   \"on_free_trial\": true,\n   \"free_trial_ends_on\": \"2017-11-11T00:00:00Z\",\n   \"updated_at\": \"2017-11-02T01:12:12Z\",\n   \"plan\": {\n    \"url\": \"https://api.github.com/marketplace_listing/plans/1313\",\n    \"accounts_url\": \"https://api.github.com/marketplace_listing/plans/1313/accounts\",\n    \"id\": 1313,\n    \"number\": 3,\n    \"name\": \"Pro\",\n    \"description\": \"A professional-grade CI solution\",\n    \"monthly_price_in_cents\": 1099,\n    \"yearly_price_in_cents\": 11870,\n    \"price_model\": \"flat-rate\",\n    \"has_free_trial\": true,\n    \"unit_name\": null,\n    \"state\": \"published\",\n    \"bullets\": [\n     \"Up to 25 private repositories\",\n     \"11 concurrent builds\"\n    ]\n   }\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Create a content attachment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Title of the attachment\",\n    \"body\": \"Body of the attachment\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/content_references/:content_reference_id/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"content_references",
								":content_reference_id",
								"attachments"
							],
							"variable": [
								{
									"key": "content_reference_id",
									"value": "41891364",
									"description": "(Required) content_reference_id parameter"
								}
							]
						},
						"description": "Creates an attachment under a content reference URL in the body or comment of an issue or pull request. Use the `id` of the content reference from the [`content_reference` event](https://developer.github.com/webhooks/event-payloads/#content_reference) to create an attachment.\n\nThe app must create a content attachment within six hours of the content reference URL being posted. See \"[Using content attachments](https://developer.github.com/apps/using-content-attachments/)\" for details about content attachments.\n\nYou must use an [installation access token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint."
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Title of the attachment\",\n    \"body\": \"Body of the attachment\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/content_references/:content_reference_id/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content_references",
										":content_reference_id",
										"attachments"
									],
									"variable": [
										{
											"key": "content_reference_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Title of the attachment\",\n    \"body\": \"Body of the attachment\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/content_references/:content_reference_id/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content_references",
										":content_reference_id",
										"attachments"
									],
									"variable": [
										{
											"key": "content_reference_id"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Title of the attachment\",\n    \"body\": \"Body of the attachment\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/content_references/:content_reference_id/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content_references",
										":content_reference_id",
										"attachments"
									],
									"variable": [
										{
											"key": "content_reference_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Title of the attachment\",\n    \"body\": \"Body of the attachment\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/content_references/:content_reference_id/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content_references",
										":content_reference_id",
										"attachments"
									],
									"variable": [
										{
											"key": "content_reference_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Title of the attachment\",\n    \"body\": \"Body of the attachment\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/content_references/:content_reference_id/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content_references",
										":content_reference_id",
										"attachments"
									],
									"variable": [
										{
											"key": "content_reference_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Title of the attachment\",\n    \"body\": \"Body of the attachment\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/content_references/:content_reference_id/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content_references",
										":content_reference_id",
										"attachments"
									],
									"variable": [
										{
											"key": "content_reference_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Title of the attachment\",\n    \"body\": \"Body of the attachment\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/content_references/:content_reference_id/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"content_references",
										":content_reference_id",
										"attachments"
									],
									"variable": [
										{
											"key": "content_reference_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 101,\n \"title\": \"[A-1234] Error found in core/models.py file'\",\n \"body\": \"You have used an email that already exists for the user_email_uniq field.\\n ## DETAILS:\\n\\nThe (email)=(Octocat@github.com) already exists.\\n\\n The error was found in core/models.py in get_or_create_user at line 62.\\n\\n self.save()\"\n}"
						}
					]
				},
				{
					"name": "Get a subscription plan for an account (stubbed)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/marketplace_listing/stubbed/accounts/:account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"marketplace_listing",
								"stubbed",
								"accounts",
								":account_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "41891364",
									"description": "(Required) account_id parameter"
								}
							]
						},
						"description": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/stubbed/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"stubbed",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Response when the account has not purchased the listing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/stubbed/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"stubbed",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/stubbed/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"stubbed",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/orgs/github\",\n \"type\": \"Organization\",\n \"id\": 4,\n \"login\": \"github\",\n \"organization_billing_email\": \"billing@github.com\",\n \"marketplace_pending_change\": {\n  \"effective_date\": \"2017-11-11T00:00:00Z\",\n  \"unit_count\": null,\n  \"id\": 77,\n  \"plan\": {\n   \"url\": \"https://api.github.com/marketplace_listing/plans/1111\",\n   \"accounts_url\": \"https://api.github.com/marketplace_listing/plans/1111/accounts\",\n   \"id\": 1111,\n   \"number\": 2,\n   \"name\": \"Startup\",\n   \"description\": \"A professional-grade CI solution\",\n   \"monthly_price_in_cents\": 699,\n   \"yearly_price_in_cents\": 7870,\n   \"price_model\": \"flat-rate\",\n   \"has_free_trial\": true,\n   \"state\": \"published\",\n   \"unit_name\": null,\n   \"bullets\": [\n    \"Up to 10 private repositories\",\n    \"3 concurrent builds\"\n   ]\n  }\n },\n \"marketplace_purchase\": {\n  \"billing_cycle\": \"monthly\",\n  \"next_billing_date\": \"2017-11-11T00:00:00Z\",\n  \"unit_count\": null,\n  \"on_free_trial\": true,\n  \"free_trial_ends_on\": \"2017-11-11T00:00:00Z\",\n  \"updated_at\": \"2017-11-02T01:12:12Z\",\n  \"plan\": {\n   \"url\": \"https://api.github.com/marketplace_listing/plans/1313\",\n   \"accounts_url\": \"https://api.github.com/marketplace_listing/plans/1313/accounts\",\n   \"id\": 1313,\n   \"number\": 3,\n   \"name\": \"Pro\",\n   \"description\": \"A professional-grade CI solution\",\n   \"monthly_price_in_cents\": 1099,\n   \"yearly_price_in_cents\": 11870,\n   \"price_model\": \"flat-rate\",\n   \"has_free_trial\": true,\n   \"unit_name\": null,\n   \"state\": \"published\",\n   \"bullets\": [\n    \"Up to 25 private repositories\",\n    \"11 concurrent builds\"\n   ]\n  }\n }\n}"
						}
					]
				},
				{
					"name": "Get a repository installation for the authenticated app",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/installation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"installation"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Enables an authenticated GitHub App to find the repository's installation information. The installation's account type will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/installation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"installation"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Moved Permanently",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/installation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"installation"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Moved Permanently",
							"code": 301,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/installation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"installation"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"account\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"avatar_url\": \"https://github.com/images/error/hubot_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"html_url\": \"https://github.com/github\",\n  \"followers_url\": \"https://api.github.com/users/github/followers\",\n  \"following_url\": \"https://api.github.com/users/github/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/github/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/github/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/github/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/github/orgs\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"received_events_url\": \"https://api.github.com/users/github/received_events\",\n  \"type\": \"Organization\",\n  \"site_admin\": false\n },\n \"repository_selection\": \"all\",\n \"access_tokens_url\": \"https://api.github.com/installations/1/access_tokens\",\n \"repositories_url\": \"https://api.github.com/installation/repositories\",\n \"html_url\": \"https://github.com/organizations/github/settings/installations/1\",\n \"app_id\": 1,\n \"target_id\": 1,\n \"target_type\": \"Organization\",\n \"permissions\": {\n  \"checks\": \"write\",\n  \"metadata\": \"read\",\n  \"contents\": \"read\"\n },\n \"events\": [\n  \"push\",\n  \"pull_request\"\n ],\n \"created_at\": \"2018-02-09T20:51:14Z\",\n \"updated_at\": \"2018-02-09T20:51:14Z\",\n \"single_file_name\": null,\n \"app_slug\": \"github-actions\"\n}"
						}
					]
				},
				{
					"name": "List accounts for a plan (stubbed)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/marketplace_listing/stubbed/plans/:plan_id/accounts?sort=created&direction=asc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"marketplace_listing",
								"stubbed",
								"plans",
								":plan_id",
								"accounts"
							],
							"query": [
								{
									"key": "sort",
									"value": "created",
									"description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to)."
								},
								{
									"key": "direction",
									"value": "asc",
									"description": "To return the oldest accounts first, set to `asc`. Can be one of `asc` or `desc`. Ignored without the `sort` parameter."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "plan_id",
									"value": "41891364",
									"description": "(Required) plan_id parameter"
								}
							]
						},
						"description": "Returns repository and organization accounts associated with the specified plan, including free plans. For per-seat pricing, you see the list of accounts that have purchased the plan, including the number of seats purchased. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/stubbed/plans/:plan_id/accounts?sort=created&direction=asc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"stubbed",
										"plans",
										":plan_id",
										"accounts"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "plan_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/stubbed/plans/:plan_id/accounts?sort=created&direction=asc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"stubbed",
										"plans",
										":plan_id",
										"accounts"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "plan_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"type\": \"Organization\",\n  \"id\": 4,\n  \"login\": \"github\",\n  \"organization_billing_email\": \"billing@github.com\",\n  \"marketplace_pending_change\": {\n   \"effective_date\": \"2017-11-11T00:00:00Z\",\n   \"unit_count\": null,\n   \"id\": 77,\n   \"plan\": {\n    \"url\": \"https://api.github.com/marketplace_listing/plans/1111\",\n    \"accounts_url\": \"https://api.github.com/marketplace_listing/plans/1111/accounts\",\n    \"id\": 1111,\n    \"number\": 2,\n    \"name\": \"Startup\",\n    \"description\": \"A professional-grade CI solution\",\n    \"monthly_price_in_cents\": 699,\n    \"yearly_price_in_cents\": 7870,\n    \"price_model\": \"flat-rate\",\n    \"has_free_trial\": true,\n    \"state\": \"published\",\n    \"unit_name\": null,\n    \"bullets\": [\n     \"Up to 10 private repositories\",\n     \"3 concurrent builds\"\n    ]\n   }\n  },\n  \"marketplace_purchase\": {\n   \"billing_cycle\": \"monthly\",\n   \"next_billing_date\": \"2017-11-11T00:00:00Z\",\n   \"unit_count\": null,\n   \"on_free_trial\": true,\n   \"free_trial_ends_on\": \"2017-11-11T00:00:00Z\",\n   \"updated_at\": \"2017-11-02T01:12:12Z\",\n   \"plan\": {\n    \"url\": \"https://api.github.com/marketplace_listing/plans/1313\",\n    \"accounts_url\": \"https://api.github.com/marketplace_listing/plans/1313/accounts\",\n    \"id\": 1313,\n    \"number\": 3,\n    \"name\": \"Pro\",\n    \"description\": \"A professional-grade CI solution\",\n    \"monthly_price_in_cents\": 1099,\n    \"yearly_price_in_cents\": 11870,\n    \"price_model\": \"flat-rate\",\n    \"has_free_trial\": true,\n    \"unit_name\": null,\n    \"state\": \"published\",\n    \"bullets\": [\n     \"Up to 25 private repositories\",\n     \"11 concurrent builds\"\n    ]\n   }\n  }\n }\n]"
						}
					]
				},
				{
					"name": "List app installations accessible to the user access token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/installations?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"installations"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Lists installations of your GitHub App that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nYou must use a [user-to-server OAuth access token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou can find the permissions for the installation under the `permissions` key."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "You can find the permissions for the installation under the `permissions` key.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 2,\n \"installations\": [\n  {\n   \"id\": 1,\n   \"account\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"access_tokens_url\": \"https://api.github.com/installations/1/access_tokens\",\n   \"repositories_url\": \"https://api.github.com/installation/repositories\",\n   \"html_url\": \"https://github.com/organizations/github/settings/installations/1\",\n   \"app_id\": 1,\n   \"target_id\": 1,\n   \"target_type\": \"Organization\",\n   \"permissions\": {\n    \"checks\": \"write\",\n    \"metadata\": \"read\",\n    \"contents\": \"read\"\n   },\n   \"events\": [\n    \"push\",\n    \"pull_request\"\n   ],\n   \"single_file_name\": \"config.yml\",\n   \"repository_selection\": \"all\",\n   \"created_at\": \"2017-07-08T16:18:44-04:00\",\n   \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n   \"app_slug\": \"github-actions\"\n  },\n  {\n   \"id\": 3,\n   \"account\": {\n    \"login\": \"octocat\",\n    \"id\": 2,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"access_tokens_url\": \"https://api.github.com/installations/1/access_tokens\",\n   \"repositories_url\": \"https://api.github.com/installation/repositories\",\n   \"html_url\": \"https://github.com/organizations/github/settings/installations/1\",\n   \"app_id\": 1,\n   \"target_id\": 1,\n   \"target_type\": \"Organization\",\n   \"permissions\": {\n    \"checks\": \"write\",\n    \"metadata\": \"read\",\n    \"contents\": \"read\"\n   },\n   \"events\": [\n    \"push\",\n    \"pull_request\"\n   ],\n   \"single_file_name\": \"config.yml\",\n   \"repository_selection\": \"all\",\n   \"created_at\": \"2017-07-08T16:18:44-04:00\",\n   \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n   \"app_slug\": \"github-actions\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Unsuspend an app installation",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/app/installations/:installation_id/suspended",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app",
								"installations",
								":installation_id",
								"suspended"
							],
							"variable": [
								{
									"key": "installation_id",
									"value": "41891364",
									"description": "(Required) installation_id parameter"
								}
							]
						},
						"description": "**Note:** Suspending a GitHub App installation is currently in beta and subject to change. Before you can suspend a GitHub App, the app owner must enable suspending installations for the app by opting-in to the beta. For more information, see \"[Suspending a GitHub App installation](https://developer.github.com/apps/managing-github-apps/suspending-a-github-app-installation/).\"\n\nRemoves a GitHub App installation suspension.\n\nTo unsuspend a GitHub App, you must be an account owner or have admin permissions in the repository or organization where the app is installed and suspended.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app/installations/:installation_id/suspended",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations",
										":installation_id",
										"suspended"
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app/installations/:installation_id/suspended",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations",
										":installation_id",
										"suspended"
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Suspend an app installation",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/app/installations/:installation_id/suspended",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app",
								"installations",
								":installation_id",
								"suspended"
							],
							"variable": [
								{
									"key": "installation_id",
									"value": "41891364",
									"description": "(Required) installation_id parameter"
								}
							]
						},
						"description": "**Note:** Suspending a GitHub App installation is currently in beta and subject to change. Before you can suspend a GitHub App, the app owner must enable suspending installations for the app by opting-in to the beta. For more information, see \"[Suspending a GitHub App installation](https://developer.github.com/apps/managing-github-apps/suspending-a-github-app-installation/).\"\n\nSuspends a GitHub App on a user, organization, or business account, which blocks the app from accessing the account's resources. When a GitHub App is suspended, the app's access to the GitHub API or webhook events is blocked for that account.\n\nTo suspend a GitHub App, you must be an account owner or have admin permissions in the repository or organization where the app is installed.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app/installations/:installation_id/suspended",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations",
										":installation_id",
										"suspended"
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app/installations/:installation_id/suspended",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations",
										":installation_id",
										"suspended"
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List repositories accessible to the app installation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/installation/repositories?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"installation",
								"repositories"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "List repositories that an app installation can access.\n\nYou must use an [installation access token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/installation/repositories?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"installation",
										"repositories"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/installation/repositories?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"installation",
										"repositories"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/installation/repositories?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"installation",
										"repositories"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/installation/repositories?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"installation",
										"repositories"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 1,\n \"repositories\": [\n  {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"is_template\": true,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"visibility\": \"public\",\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"allow_rebase_merge\": true,\n   \"template_repository\": null,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"delete_branch_on_merge\": true,\n   \"allow_merge_commit\": true,\n   \"subscribers_count\": 42,\n   \"network_count\": 0,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n    \"html_url\": \"https://github.com/licenses/mit\"\n   },\n   \"forks\": 1,\n   \"open_issues\": 1,\n   \"watchers\": 1\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List repositories accessible to the user access token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/installations/:installation_id/repositories?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"installations",
								":installation_id",
								"repositories"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "installation_id",
									"value": "41891364",
									"description": "(Required) installation_id parameter"
								}
							]
						},
						"description": "List repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access for an installation.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership.\n\nYou must use a [user-to-server OAuth access token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint.\n\nThe access the user has to each repository is included in the hash under the `permissions` key."
					},
					"response": [
						{
							"name": "The access the user has to each repository is included in the hash under the `permissions` key.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations/:installation_id/repositories?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations",
										":installation_id",
										"repositories"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 1,\n \"repositories\": [\n  {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"is_template\": true,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"visibility\": \"public\",\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"template_repository\": null,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"delete_branch_on_merge\": true,\n   \"allow_merge_commit\": true,\n   \"subscribers_count\": 42,\n   \"network_count\": 0,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n    \"html_url\": \"https://github.com/licenses/mit\"\n   },\n   \"forks\": 1,\n   \"open_issues\": 1,\n   \"watchers\": 1\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations/:installation_id/repositories?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations",
										":installation_id",
										"repositories"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations/:installation_id/repositories?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations",
										":installation_id",
										"repositories"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations/:installation_id/repositories?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations",
										":installation_id",
										"repositories"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Revoke a grant for an application",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/applications/:client_id/grants/:access_token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications",
								":client_id",
								"grants",
								":access_token"
							],
							"variable": [
								{
									"key": "client_id",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "access_token",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** GitHub will replace and discontinue OAuth endpoints containing `access_token` in the path parameter. We are introducing new endpoints that allow you to securely manage tokens for OAuth Apps by using `access_token` as an input parameter. The OAuth Application API will be removed on May 5, 2021. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. You must also provide a valid token as `:access_token` and the grant for the token's owner will be deleted.\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the Applications settings page under \"Authorized OAuth Apps\" on GitHub](https://github.com/settings/applications#authorized)."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/:client_id/grants/:access_token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										":client_id",
										"grants",
										":access_token"
									],
									"variable": [
										{
											"key": "client_id"
										},
										{
											"key": "access_token"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a subscription plan for an account",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/marketplace_listing/accounts/:account_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"marketplace_listing",
								"accounts",
								":account_id"
							],
							"variable": [
								{
									"key": "account_id",
									"value": "41891364",
									"description": "(Required) account_id parameter"
								}
							]
						},
						"description": "Shows whether the user or organization account actively subscribes to a plan listed by the authenticated GitHub App. When someone submits a plan change that won't be processed until the end of their billing cycle, you will also see the upcoming pending change.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint."
					},
					"response": [
						{
							"name": "Response when the account has not purchased the listing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/accounts/:account_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"accounts",
										":account_id"
									],
									"variable": [
										{
											"key": "account_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/orgs/github\",\n \"type\": \"Organization\",\n \"id\": 4,\n \"login\": \"github\",\n \"organization_billing_email\": \"billing@github.com\",\n \"marketplace_pending_change\": {\n  \"effective_date\": \"2017-11-11T00:00:00Z\",\n  \"unit_count\": null,\n  \"id\": 77,\n  \"plan\": {\n   \"url\": \"https://api.github.com/marketplace_listing/plans/1111\",\n   \"accounts_url\": \"https://api.github.com/marketplace_listing/plans/1111/accounts\",\n   \"id\": 1111,\n   \"number\": 2,\n   \"name\": \"Startup\",\n   \"description\": \"A professional-grade CI solution\",\n   \"monthly_price_in_cents\": 699,\n   \"yearly_price_in_cents\": 7870,\n   \"price_model\": \"flat-rate\",\n   \"has_free_trial\": true,\n   \"state\": \"published\",\n   \"unit_name\": null,\n   \"bullets\": [\n    \"Up to 10 private repositories\",\n    \"3 concurrent builds\"\n   ]\n  }\n },\n \"marketplace_purchase\": {\n  \"billing_cycle\": \"monthly\",\n  \"next_billing_date\": \"2017-11-11T00:00:00Z\",\n  \"unit_count\": null,\n  \"on_free_trial\": true,\n  \"free_trial_ends_on\": \"2017-11-11T00:00:00Z\",\n  \"updated_at\": \"2017-11-02T01:12:12Z\",\n  \"plan\": {\n   \"url\": \"https://api.github.com/marketplace_listing/plans/1313\",\n   \"accounts_url\": \"https://api.github.com/marketplace_listing/plans/1313/accounts\",\n   \"id\": 1313,\n   \"number\": 3,\n   \"name\": \"Pro\",\n   \"description\": \"A professional-grade CI solution\",\n   \"monthly_price_in_cents\": 1099,\n   \"yearly_price_in_cents\": 11870,\n   \"price_model\": \"flat-rate\",\n   \"has_free_trial\": true,\n   \"unit_name\": null,\n   \"state\": \"published\",\n   \"bullets\": [\n    \"Up to 25 private repositories\",\n    \"11 concurrent builds\"\n   ]\n  }\n }\n}"
						}
					]
				},
				{
					"name": "Create an installation access token for an app",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"repositories\": [\n        \"rails\",\n        \"rails\"\n    ],\n    \"repository_ids\": [\n        1\n    ],\n    \"permissions\": {\n        \"contents\": \"read\",\n        \"issues\": \"read\",\n        \"deployments\": \"write\",\n        \"single_file\": \"read\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/app/installations/:installation_id/access_tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app",
								"installations",
								":installation_id",
								"access_tokens"
							],
							"variable": [
								{
									"key": "installation_id",
									"value": "41891364",
									"description": "(Required) installation_id parameter"
								}
							]
						},
						"description": "Creates an installation access token that enables a GitHub App to make authenticated API requests for the app's installation on an organization or individual account. Installation tokens expire one hour from the time you create them. Using an expired token produces a status code of `401 - Unauthorized`, and requires creating a new installation token. By default the installation token has access to all repositories that the installation can access. To restrict the access to specific repositories, you can provide the `repository_ids` when creating the token. When you omit `repository_ids`, the response does not contain the `repositories` key.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositories\": [\n        \"rails\",\n        \"rails\"\n    ],\n    \"repository_ids\": [\n        25563118,\n        -85341167\n    ],\n    \"permissions\": {\n        \"contents\": \"read\",\n        \"issues\": \"read\",\n        \"deployments\": \"write\",\n        \"single_file\": \"read\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/app/installations/:installation_id/access_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations",
										":installation_id",
										"access_tokens"
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositories\": [\n        \"rails\",\n        \"rails\"\n    ],\n    \"repository_ids\": [\n        25563118,\n        -85341167\n    ],\n    \"permissions\": {\n        \"contents\": \"read\",\n        \"issues\": \"read\",\n        \"deployments\": \"write\",\n        \"single_file\": \"read\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/app/installations/:installation_id/access_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations",
										":installation_id",
										"access_tokens"
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositories\": [\n        \"rails\",\n        \"rails\"\n    ],\n    \"repository_ids\": [\n        25563118,\n        -85341167\n    ],\n    \"permissions\": {\n        \"contents\": \"read\",\n        \"issues\": \"read\",\n        \"deployments\": \"write\",\n        \"single_file\": \"read\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/app/installations/:installation_id/access_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations",
										":installation_id",
										"access_tokens"
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositories\": [\n        \"rails\",\n        \"rails\"\n    ],\n    \"repository_ids\": [\n        25563118,\n        -85341167\n    ],\n    \"permissions\": {\n        \"contents\": \"read\",\n        \"issues\": \"read\",\n        \"deployments\": \"write\",\n        \"single_file\": \"read\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/app/installations/:installation_id/access_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations",
										":installation_id",
										"access_tokens"
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"token\": \"v1.1f699f1069f60xxx\",\n \"expires_at\": \"2016-07-11T22:14:10Z\",\n \"permissions\": {\n  \"issues\": \"write\",\n  \"contents\": \"read\"\n },\n \"repository_selection\": \"selected\",\n \"repositories\": [\n  {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"is_template\": true,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"visibility\": \"public\",\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"template_repository\": null,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"delete_branch_on_merge\": true,\n   \"allow_merge_commit\": true,\n   \"subscribers_count\": 42,\n   \"network_count\": 0,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n    \"html_url\": \"https://github.com/licenses/mit\"\n   },\n   \"forks\": 1,\n   \"open_issues\": 1,\n   \"watchers\": 1\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositories\": [\n        \"rails\",\n        \"rails\"\n    ],\n    \"repository_ids\": [\n        25563118,\n        -85341167\n    ],\n    \"permissions\": {\n        \"contents\": \"read\",\n        \"issues\": \"read\",\n        \"deployments\": \"write\",\n        \"single_file\": \"read\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/app/installations/:installation_id/access_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations",
										":installation_id",
										"access_tokens"
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositories\": [\n        \"rails\",\n        \"rails\"\n    ],\n    \"repository_ids\": [\n        25563118,\n        -85341167\n    ],\n    \"permissions\": {\n        \"contents\": \"read\",\n        \"issues\": \"read\",\n        \"deployments\": \"write\",\n        \"single_file\": \"read\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/app/installations/:installation_id/access_tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations",
										":installation_id",
										"access_tokens"
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Revoke an installation access token",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/installation/token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"installation",
								"token"
							]
						},
						"description": "Revokes the installation token you're using to authenticate as an installation and access this endpoint.\n\nOnce an installation token is revoked, the token is invalidated and cannot be used. Other endpoints that require the revoked installation token must have a new installation token to work. You can create a new token using the \"[Create an installation access token for an app](https://developer.github.com/v3/apps/#create-an-installation-access-token-for-an-app)\" endpoint.\n\nYou must use an [installation access token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/installation/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"installation",
										"token"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List plans (stubbed)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/marketplace_listing/stubbed/plans?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"marketplace_listing",
								"stubbed",
								"plans"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Lists all plans that are part of your GitHub Marketplace listing.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/stubbed/plans?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"stubbed",
										"plans"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/marketplace_listing/plans/1313\",\n  \"accounts_url\": \"https://api.github.com/marketplace_listing/plans/1313/accounts\",\n  \"id\": 1313,\n  \"number\": 3,\n  \"name\": \"Pro\",\n  \"description\": \"A professional-grade CI solution\",\n  \"monthly_price_in_cents\": 1099,\n  \"yearly_price_in_cents\": 11870,\n  \"price_model\": \"flat-rate\",\n  \"has_free_trial\": true,\n  \"unit_name\": null,\n  \"state\": \"published\",\n  \"bullets\": [\n   \"Up to 25 private repositories\",\n   \"11 concurrent builds\"\n  ]\n }\n]"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/stubbed/plans?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"stubbed",
										"plans"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Reset an authorization",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/applications/:client_id/tokens/:access_token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications",
								":client_id",
								"tokens",
								":access_token"
							],
							"variable": [
								{
									"key": "client_id",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "access_token",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** GitHub will replace and discontinue OAuth endpoints containing `access_token` in the path parameter. We are introducing new endpoints that allow you to securely manage tokens for OAuth Apps by using `access_token` as an input parameter. The OAuth Application API will be removed on May 5, 2021. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use this API method to reset a valid OAuth token without end-user involvement. Applications must save the \"token\" property in the response because changes take effect immediately. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/:client_id/tokens/:access_token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										":client_id",
										"tokens",
										":access_token"
									],
									"variable": [
										{
											"key": "client_id"
										},
										{
											"key": "access_token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"url\": \"https://api.github.com/authorizations/1\",\n \"scopes\": [\n  \"public_repo\"\n ],\n \"token\": \"abcdefgh12345678\",\n \"token_last_eight\": \"12345678\",\n \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\n \"app\": {\n  \"url\": \"http://my-github-app.com\",\n  \"name\": \"my github app\",\n  \"client_id\": \"abcde12345fghij67890\"\n },\n \"note\": \"optional note\",\n \"note_url\": \"http://optional/note/url\",\n \"updated_at\": \"2011-09-06T20:39:23Z\",\n \"created_at\": \"2011-09-06T17:26:27Z\",\n \"fingerprint\": \"jklmnop12345678\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n}"
						}
					]
				},
				{
					"name": "Check an authorization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/applications/:client_id/tokens/:access_token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications",
								":client_id",
								"tokens",
								":access_token"
							],
							"variable": [
								{
									"key": "client_id",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "access_token",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** GitHub will replace and discontinue OAuth endpoints containing `access_token` in the path parameter. We are introducing new endpoints that allow you to securely manage tokens for OAuth Apps by using `access_token` as an input parameter. The OAuth Application API will be removed on May 5, 2021. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth applications can use a special API method for checking OAuth token validity without exceeding the normal rate limits for failed login attempts. Authentication works differently with this particular endpoint. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. Invalid tokens will return `404 NOT FOUND`."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/:client_id/tokens/:access_token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										":client_id",
										"tokens",
										":access_token"
									],
									"variable": [
										{
											"key": "client_id"
										},
										{
											"key": "access_token"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/:client_id/tokens/:access_token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										":client_id",
										"tokens",
										":access_token"
									],
									"variable": [
										{
											"key": "client_id"
										},
										{
											"key": "access_token"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"url\": \"https://api.github.com/authorizations/1\",\n \"scopes\": [\n  \"public_repo\"\n ],\n \"token\": \"abcdefgh12345678\",\n \"token_last_eight\": \"12345678\",\n \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\n \"app\": {\n  \"url\": \"http://my-github-app.com\",\n  \"name\": \"my github app\",\n  \"client_id\": \"abcde12345fghij67890\"\n },\n \"note\": \"optional note\",\n \"note_url\": \"http://optional/note/url\",\n \"updated_at\": \"2011-09-06T20:39:23Z\",\n \"created_at\": \"2011-09-06T17:26:27Z\",\n \"fingerprint\": \"jklmnop12345678\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n}"
						}
					]
				},
				{
					"name": "Revoke an authorization for an application",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/applications/:client_id/tokens/:access_token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications",
								":client_id",
								"tokens",
								":access_token"
							],
							"variable": [
								{
									"key": "client_id",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "access_token",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** GitHub will replace and discontinue OAuth endpoints containing `access_token` in the path parameter. We are introducing new endpoints that allow you to securely manage tokens for OAuth Apps by using `access_token` as an input parameter. The OAuth Application API will be removed on May 5, 2021. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-app-endpoint/).\n\nOAuth application owners can revoke a single token for an OAuth application. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/:client_id/tokens/:access_token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										":client_id",
										"tokens",
										":access_token"
									],
									"variable": [
										{
											"key": "client_id"
										},
										{
											"key": "access_token"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List installations for the authenticated app",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/app/installations?per_page=-27113311&page=-70394044&since=aliquip sint&outdated=aliquip sint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app",
								"installations"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								},
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "outdated",
									"value": "aliquip sint"
								}
							]
						},
						"description": "You must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint.\n\nThe permissions the installation has are included under the `permissions` key."
					},
					"response": [
						{
							"name": "The permissions the installation has are included under the `permissions` key.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app/installations?per_page=-27113311&page=-70394044&since=nisi reprehenderit&outdated=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "outdated",
											"value": "nisi reprehenderit"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"account\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"access_tokens_url\": \"https://api.github.com/installations/1/access_tokens\",\n  \"repositories_url\": \"https://api.github.com/installation/repositories\",\n  \"html_url\": \"https://github.com/organizations/github/settings/installations/1\",\n  \"app_id\": 1,\n  \"target_id\": 1,\n  \"target_type\": \"Organization\",\n  \"permissions\": {\n   \"checks\": \"write\",\n   \"metadata\": \"read\",\n   \"contents\": \"read\"\n  },\n  \"events\": [\n   \"push\",\n   \"pull_request\"\n  ],\n  \"single_file_name\": \"config.yml\",\n  \"repository_selection\": \"selected\",\n  \"created_at\": \"2017-07-08T16:18:44-04:00\",\n  \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n  \"app_slug\": \"github-actions\"\n }\n]"
						}
					]
				},
				{
					"name": "Create a GitHub App from a manifest",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/app-manifests/:code/conversions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app-manifests",
								":code",
								"conversions"
							],
							"variable": [
								{
									"key": "code",
									"value": "aliquip sint",
									"description": "(Required) code parameter"
								}
							]
						},
						"description": "Use this endpoint to complete the handshake necessary when implementing the [GitHub App Manifest flow](https://developer.github.com/apps/building-github-apps/creating-github-apps-from-a-manifest/). When you create a GitHub App with the manifest flow, you receive a temporary `code` used to retrieve the GitHub App's `id`, `pem` (private key), and `webhook_secret`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app-manifests/:code/conversions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-manifests",
										":code",
										"conversions"
									],
									"variable": [
										{
											"key": "code"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"slug\": \"octoapp\",\n \"node_id\": \"MDxOkludGVncmF0aW9uMQ==\",\n \"owner\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": true\n },\n \"name\": \"Octocat App\",\n \"description\": \"\",\n \"external_url\": \"https://example.com\",\n \"html_url\": \"https://github.com/apps/octoapp\",\n \"created_at\": \"2017-07-08T16:18:44-04:00\",\n \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n \"permissions\": {\n  \"metadata\": \"read\",\n  \"contents\": \"read\",\n  \"issues\": \"write\",\n  \"single_file\": \"write\"\n },\n \"events\": [\n  \"push\",\n  \"pull_request\"\n ],\n \"client_id\": \"Iv1.8a61f9b3a7aba766\",\n \"client_secret\": \"1726be1638095a19edd134c77bde3aa2ece1e5d8\",\n \"webhook_secret\": \"e340154128314309424b7c8e90325147d99fdafa\",\n \"pem\": \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEowIBAAKCAQEAuEPzOUE+kiEH1WLiMeBytTEF856j0hOVcSUSUkZxKvqczkWM\\n9vo1gDyC7ZXhdH9fKh32aapba3RSsp4ke+giSmYTk2mGR538ShSDxh0OgpJmjiKP\\nX0Bj4j5sFqfXuCtl9SkH4iueivv4R53ktqM+n6hk98l6hRwC39GVIblAh2lEM4L/\\n6WvYwuQXPMM5OG2Ryh2tDZ1WS5RKfgq+9ksNJ5Q9UtqtqHkO+E63N5OK9sbzpUUm\\noNaOl3udTlZD3A8iqwMPVxH4SxgATBPAc+bmjk6BMJ0qIzDcVGTrqrzUiywCTLma\\nszdk8GjzXtPDmuBgNn+o6s02qVGpyydgEuqmTQIDAQABAoIBACL6AvkjQVVLn8kJ\\ndBYznJJ4M8ECo+YEgaFwgAHODT0zRQCCgzd+Vxl4YwHmKV2Lr+y2s0drZt8GvYva\\nKOK8NYYZyi15IlwFyRXmvvykF1UBpSXluYFDH7KaVroWMgRreHcIys5LqVSIb6Bo\\ngDmK0yBLPp8qR29s2b7ScZRtLaqGJiX+j55rNzrZwxHkxFHyG9OG+u9IsBElcKCP\\nkYCVE8ZdYexfnKOZbgn2kZB9qu0T/Mdvki8yk3I2bI6xYO24oQmhnT36qnqWoCBX\\nNuCNsBQgpYZeZET8mEAUmo9d+ABmIHIvSs005agK8xRaP4+6jYgy6WwoejJRF5yd\\nNBuF7aECgYEA50nZ4FiZYV0vcJDxFYeY3kYOvVuKn8OyW+2rg7JIQTremIjv8FkE\\nZnwuF9ZRxgqLxUIfKKfzp/5l5LrycNoj2YKfHKnRejxRWXqG+ZETfxxlmlRns0QG\\nJ4+BYL0CoanDSeA4fuyn4Bv7cy/03TDhfg/Uq0Aeg+hhcPE/vx3ebPsCgYEAy/Pv\\neDLssOSdeyIxf0Brtocg6aPXIVaLdus+bXmLg77rJIFytAZmTTW8SkkSczWtucI3\\nFI1I6sei/8FdPzAl62/JDdlf7Wd9K7JIotY4TzT7Tm7QU7xpfLLYIP1bOFjN81rk\\n77oOD4LsXcosB/U6s1blPJMZ6AlO2EKs10UuR1cCgYBipzuJ2ADEaOz9RLWwi0AH\\nPza2Sj+c2epQD9ZivD7Zo/Sid3ZwvGeGF13JyR7kLEdmAkgsHUdu1rI7mAolXMaB\\n1pdrsHureeLxGbRM6za3tzMXWv1Il7FQWoPC8ZwXvMOR1VQDv4nzq7vbbA8z8c+c\\n57+8tALQHOTDOgQIzwK61QKBgERGVc0EJy4Uag+VY8J4m1ZQKBluqo7TfP6DQ7O8\\nM5MX73maB/7yAX8pVO39RjrhJlYACRZNMbK+v/ckEQYdJSSKmGCVe0JrGYDuPtic\\nI9+IGfSorf7KHPoMmMN6bPYQ7Gjh7a++tgRFTMEc8956Hnt4xGahy9NcglNtBpVN\\n6G8jAoGBAMCh028pdzJa/xeBHLLaVB2sc0Fe7993WlsPmnVE779dAz7qMscOtXJK\\nfgtriltLSSD6rTA9hUAsL/X62rY0wdXuNdijjBb/qvrx7CAV6i37NK1CjABNjsfG\\nZM372Ac6zc1EqSrid2IjET1YqyIW2KGLI1R2xbQc98UGlt48OdWu\\n-----END RSA PRIVATE KEY-----\\n\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app-manifests/:code/conversions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-manifests",
										":code",
										"conversions"
									],
									"variable": [
										{
											"key": "code"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app-manifests/:code/conversions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app-manifests",
										":code",
										"conversions"
									],
									"variable": [
										{
											"key": "code"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Delete an app authorization",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access_token\": \"e72e16c7e42f292c6912e7710c838347ae178b4a\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/applications/:client_id/grant",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications",
								":client_id",
								"grant"
							],
							"variable": [
								{
									"key": "client_id",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "OAuth application owners can revoke a grant for their OAuth application and a specific user. You must use [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication) when accessing this endpoint, using the OAuth application's `client_id` and `client_secret` as the username and password. You must also provide a valid OAuth `access_token` as an input parameter and the grant for the token's owner will be deleted.\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for the user. Once deleted, the application will have no access to the user's account and will no longer be listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized)."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": \"e72e16c7e42f292c6912e7710c838347ae178b4a\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/applications/:client_id/grant",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										":client_id",
										"grant"
									],
									"variable": [
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"access_token\": \"e72e16c7e42f292c6912e7710c838347ae178b4a\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/applications/:client_id/grant",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										":client_id",
										"grant"
									],
									"variable": [
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an organization installation for the authenticated app",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/installation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"installation"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Enables an authenticated GitHub App to find the organization's installation information.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/installation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"installation"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"account\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"avatar_url\": \"https://github.com/images/error/hubot_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"html_url\": \"https://github.com/github\",\n  \"followers_url\": \"https://api.github.com/users/github/followers\",\n  \"following_url\": \"https://api.github.com/users/github/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/github/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/github/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/github/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/github/orgs\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"received_events_url\": \"https://api.github.com/users/github/received_events\",\n  \"type\": \"Organization\",\n  \"site_admin\": false\n },\n \"repository_selection\": \"all\",\n \"access_tokens_url\": \"https://api.github.com/installations/1/access_tokens\",\n \"repositories_url\": \"https://api.github.com/installation/repositories\",\n \"html_url\": \"https://github.com/organizations/github/settings/installations/1\",\n \"app_id\": 1,\n \"target_id\": 1,\n \"target_type\": \"Organization\",\n \"permissions\": {\n  \"checks\": \"write\",\n  \"metadata\": \"read\",\n  \"contents\": \"read\"\n },\n \"events\": [\n  \"push\",\n  \"pull_request\"\n ],\n \"created_at\": \"2018-02-09T20:51:14Z\",\n \"updated_at\": \"2018-02-09T20:51:14Z\",\n \"single_file_name\": null,\n \"app_slug\": \"github-actions\"\n}"
						}
					]
				},
				{
					"name": "Get the authenticated app",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/app",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app"
							]
						},
						"description": "Returns the GitHub App associated with the authentication credentials used. To see how many app installations are associated with this GitHub App, see the `installations_count` in the response. For more details about your app's installations, see the \"[List installations for the authenticated app](https://developer.github.com/v3/apps/#list-installations-for-the-authenticated-app)\" endpoint.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"slug\": \"octoapp\",\n \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n \"owner\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": true\n },\n \"name\": \"Octocat App\",\n \"description\": \"\",\n \"external_url\": \"https://example.com\",\n \"html_url\": \"https://github.com/apps/octoapp\",\n \"created_at\": \"2017-07-08T16:18:44-04:00\",\n \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n \"permissions\": {\n  \"metadata\": \"read\",\n  \"contents\": \"read\",\n  \"issues\": \"write\",\n  \"single_file\": \"write\"\n },\n \"events\": [\n  \"push\",\n  \"pull_request\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get an installation for the authenticated app",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/app/installations/:installation_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app",
								"installations",
								":installation_id"
							],
							"variable": [
								{
									"key": "installation_id",
									"value": "41891364",
									"description": "(Required) installation_id parameter"
								}
							]
						},
						"description": "Enables an authenticated GitHub App to find an installation's information using the installation id. The installation's account type (`target_type`) will be either an organization or a user account, depending which account the repository belongs to.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app/installations/:installation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations",
										":installation_id"
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"account\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"access_tokens_url\": \"https://api.github.com/installations/1/access_tokens\",\n \"repositories_url\": \"https://api.github.com/installation/repositories\",\n \"html_url\": \"https://github.com/organizations/github/settings/installations/1\",\n \"app_id\": 1,\n \"target_id\": 1,\n \"target_type\": \"Organization\",\n \"permissions\": {\n  \"checks\": \"write\",\n  \"metadata\": \"read\",\n  \"contents\": \"read\"\n },\n \"events\": [\n  \"push\",\n  \"pull_request\"\n ],\n \"single_file_name\": \"config.yml\",\n \"repository_selection\": \"selected\",\n \"created_at\": \"2017-07-08T16:18:44-04:00\",\n \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n \"app_slug\": \"github-actions\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app/installations/:installation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations",
										":installation_id"
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app/installations/:installation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations",
										":installation_id"
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						}
					]
				},
				{
					"name": "Delete an installation for the authenticated app",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/app/installations/:installation_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"app",
								"installations",
								":installation_id"
							],
							"variable": [
								{
									"key": "installation_id",
									"value": "41891364",
									"description": "(Required) installation_id parameter"
								}
							]
						},
						"description": "Uninstalls a GitHub App on a user, organization, or business account. If you prefer to temporarily suspend an app's access to your account's resources, then we recommend the \"[Suspend an app installation](https://developer.github.com/v3/apps/#suspend-an-app-installation)\" endpoint.\n\nYou must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app/installations/:installation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations",
										":installation_id"
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/app/installations/:installation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"app",
										"installations",
										":installation_id"
									],
									"variable": [
										{
											"key": "installation_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List subscriptions for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/marketplace_purchases?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"marketplace_purchases"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Lists the active subscriptions for the authenticated user. You must use a [user-to-server OAuth access token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an [OAuth token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/marketplace_purchases?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"marketplace_purchases"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"billing_cycle\": \"monthly\",\n  \"next_billing_date\": \"2017-11-11T00:00:00Z\",\n  \"unit_count\": null,\n  \"on_free_trial\": true,\n  \"free_trial_ends_on\": \"2017-11-11T00:00:00Z\",\n  \"updated_at\": \"2017-11-02T01:12:12Z\",\n  \"account\": {\n   \"login\": \"github\",\n   \"id\": 4,\n   \"url\": \"https://api.github.com/orgs/github\",\n   \"email\": null,\n   \"organization_billing_email\": \"billing@github.com\",\n   \"type\": \"Organization\"\n  },\n  \"plan\": {\n   \"url\": \"https://api.github.com/marketplace_listing/plans/1313\",\n   \"accounts_url\": \"https://api.github.com/marketplace_listing/plans/1313/accounts\",\n   \"id\": 1313,\n   \"number\": 3,\n   \"name\": \"Pro\",\n   \"description\": \"A professional-grade CI solution\",\n   \"monthly_price_in_cents\": 1099,\n   \"yearly_price_in_cents\": 11870,\n   \"price_model\": \"flat-rate\",\n   \"has_free_trial\": true,\n   \"unit_name\": null,\n   \"state\": \"published\",\n   \"bullets\": [\n    \"Up to 25 private repositories\",\n    \"11 concurrent builds\"\n   ]\n  }\n }\n]"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/marketplace_purchases?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"marketplace_purchases"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/marketplace_purchases?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"marketplace_purchases"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/marketplace_purchases?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"marketplace_purchases"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a repository to an app installation",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/installations/:installation_id/repositories/:repository_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"installations",
								":installation_id",
								"repositories",
								":repository_id"
							],
							"variable": [
								{
									"key": "installation_id",
									"value": "41891364",
									"description": "(Required) installation_id parameter"
								},
								{
									"key": "repository_id",
									"value": "41891364",
									"description": "(Required) repository_id parameter"
								}
							]
						},
						"description": "Add a single repository to an installation. The authenticated user must have admin access to the repository.\n\nYou must use a personal access token (which you can create via the [command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization)) or [Basic Authentication](https://developer.github.com/v3/auth/#basic-authentication) to access this endpoint."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations/:installation_id/repositories/:repository_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations",
										":installation_id",
										"repositories",
										":repository_id"
									],
									"variable": [
										{
											"key": "installation_id"
										},
										{
											"key": "repository_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations/:installation_id/repositories/:repository_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations",
										":installation_id",
										"repositories",
										":repository_id"
									],
									"variable": [
										{
											"key": "installation_id"
										},
										{
											"key": "repository_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations/:installation_id/repositories/:repository_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations",
										":installation_id",
										"repositories",
										":repository_id"
									],
									"variable": [
										{
											"key": "installation_id"
										},
										{
											"key": "repository_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations/:installation_id/repositories/:repository_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations",
										":installation_id",
										"repositories",
										":repository_id"
									],
									"variable": [
										{
											"key": "installation_id"
										},
										{
											"key": "repository_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove a repository from an app installation",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/installations/:installation_id/repositories/:repository_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"installations",
								":installation_id",
								"repositories",
								":repository_id"
							],
							"variable": [
								{
									"key": "installation_id",
									"value": "41891364",
									"description": "(Required) installation_id parameter"
								},
								{
									"key": "repository_id",
									"value": "41891364",
									"description": "(Required) repository_id parameter"
								}
							]
						},
						"description": "Remove a single repository from an installation. The authenticated user must have admin access to the repository.\n\nYou must use a personal access token (which you can create via the [command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization)) or [Basic Authentication](https://developer.github.com/v3/auth/#basic-authentication) to access this endpoint."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations/:installation_id/repositories/:repository_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations",
										":installation_id",
										"repositories",
										":repository_id"
									],
									"variable": [
										{
											"key": "installation_id"
										},
										{
											"key": "repository_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations/:installation_id/repositories/:repository_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations",
										":installation_id",
										"repositories",
										":repository_id"
									],
									"variable": [
										{
											"key": "installation_id"
										},
										{
											"key": "repository_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations/:installation_id/repositories/:repository_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations",
										":installation_id",
										"repositories",
										":repository_id"
									],
									"variable": [
										{
											"key": "installation_id"
										},
										{
											"key": "repository_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/installations/:installation_id/repositories/:repository_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"installations",
										":installation_id",
										"repositories",
										":repository_id"
									],
									"variable": [
										{
											"key": "installation_id"
										},
										{
											"key": "repository_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an app",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/apps/:app_slug",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"apps",
								":app_slug"
							],
							"variable": [
								{
									"key": "app_slug",
									"value": "aliquip sint",
									"description": "(Required) app_slug parameter"
								}
							]
						},
						"description": "**Note**: The `:app_slug` is just the URL-friendly name of your GitHub App. You can find this on the settings page for your GitHub App (e.g., `https://github.com/settings/apps/:app_slug`).\n\nIf the GitHub App you specify is public, you can access this endpoint without authenticating. If the GitHub App you specify is private, you must authenticate with a [personal access token](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/) or an [installation access token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-an-installation) to access this endpoint."
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/apps/:app_slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apps",
										":app_slug"
									],
									"variable": [
										{
											"key": "app_slug"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/apps/:app_slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apps",
										":app_slug"
									],
									"variable": [
										{
											"key": "app_slug"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/apps/:app_slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apps",
										":app_slug"
									],
									"variable": [
										{
											"key": "app_slug"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/apps/:app_slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"apps",
										":app_slug"
									],
									"variable": [
										{
											"key": "app_slug"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"slug\": \"octoapp\",\n \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n \"owner\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": true\n },\n \"name\": \"Octocat App\",\n \"description\": \"\",\n \"external_url\": \"https://example.com\",\n \"html_url\": \"https://github.com/apps/octoapp\",\n \"created_at\": \"2017-07-08T16:18:44-04:00\",\n \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n \"permissions\": {\n  \"metadata\": \"read\",\n  \"contents\": \"read\",\n  \"issues\": \"write\",\n  \"single_file\": \"write\"\n },\n \"events\": [\n  \"push\",\n  \"pull_request\"\n ]\n}"
						}
					]
				},
				{
					"name": "List subscriptions for the authenticated user (stubbed)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/marketplace_purchases/stubbed?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"marketplace_purchases",
								"stubbed"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Lists the active subscriptions for the authenticated user. You must use a [user-to-server OAuth access token](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/#identifying-users-on-your-site), created for a user who has authorized your GitHub App, to access this endpoint. . OAuth Apps must authenticate using an [OAuth token](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/marketplace_purchases/stubbed?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"marketplace_purchases",
										"stubbed"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"billing_cycle\": \"monthly\",\n  \"next_billing_date\": \"2017-11-11T00:00:00Z\",\n  \"unit_count\": null,\n  \"on_free_trial\": true,\n  \"free_trial_ends_on\": \"2017-11-11T00:00:00Z\",\n  \"updated_at\": \"2017-11-02T01:12:12Z\",\n  \"account\": {\n   \"login\": \"github\",\n   \"id\": 4,\n   \"url\": \"https://api.github.com/orgs/github\",\n   \"email\": null,\n   \"organization_billing_email\": \"billing@github.com\",\n   \"type\": \"Organization\"\n  },\n  \"plan\": {\n   \"url\": \"https://api.github.com/marketplace_listing/plans/1313\",\n   \"accounts_url\": \"https://api.github.com/marketplace_listing/plans/1313/accounts\",\n   \"id\": 1313,\n   \"number\": 3,\n   \"name\": \"Pro\",\n   \"description\": \"A professional-grade CI solution\",\n   \"monthly_price_in_cents\": 1099,\n   \"yearly_price_in_cents\": 11870,\n   \"price_model\": \"flat-rate\",\n   \"has_free_trial\": true,\n   \"unit_name\": null,\n   \"state\": \"published\",\n   \"bullets\": [\n    \"Up to 25 private repositories\",\n    \"11 concurrent builds\"\n   ]\n  }\n }\n]"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/marketplace_purchases/stubbed?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"marketplace_purchases",
										"stubbed"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/marketplace_purchases/stubbed?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"marketplace_purchases",
										"stubbed"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List plans",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/marketplace_listing/plans?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"marketplace_listing",
								"plans"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Lists all plans that are part of your GitHub Marketplace listing.\n\nGitHub Apps must use a [JWT](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/#authenticating-as-a-github-app) to access this endpoint. OAuth Apps must use [basic authentication](https://developer.github.com/v3/auth/#basic-authentication) with their client ID and client secret to access this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/plans?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"plans"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/marketplace_listing/plans/1313\",\n  \"accounts_url\": \"https://api.github.com/marketplace_listing/plans/1313/accounts\",\n  \"id\": 1313,\n  \"number\": 3,\n  \"name\": \"Pro\",\n  \"description\": \"A professional-grade CI solution\",\n  \"monthly_price_in_cents\": 1099,\n  \"yearly_price_in_cents\": 11870,\n  \"price_model\": \"flat-rate\",\n  \"has_free_trial\": true,\n  \"unit_name\": null,\n  \"state\": \"published\",\n  \"bullets\": [\n   \"Up to 25 private repositories\",\n   \"11 concurrent builds\"\n  ]\n }\n]"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/plans?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"plans"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/marketplace_listing/plans?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"marketplace_listing",
										"plans"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				}
			],
			"description": "Information for integrations and installations.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "billing",
			"item": [
				{
					"name": "Get shared storage billing for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/settings/billing/shared-storage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"settings",
								"billing",
								"shared-storage"
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Warning:** The Billing API is currently in public beta and subject to change.\n\nGets the estimated paid and estimated total storage used for GitHub Actions and Github Packages.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nAccess tokens must have the `user` scope."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/settings/billing/shared-storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"settings",
										"billing",
										"shared-storage"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"days_left_in_billing_cycle\": 20,\n \"estimated_paid_storage_for_month\": 15,\n \"estimated_storage_for_month\": 40\n}"
						}
					]
				},
				{
					"name": "Get GitHub Packages billing for an organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/settings/billing/packages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"settings",
								"billing",
								"packages"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Warning:** The Billing API is currently in public beta and subject to change.\n\nGets the free and paid storage usued for GitHub Packages in gigabytes.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nAccess tokens must have the `read:org` scope."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/settings/billing/packages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"settings",
										"billing",
										"packages"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_gigabytes_bandwidth_used\": 50,\n \"total_paid_gigabytes_bandwidth_used\": 40,\n \"included_gigabytes_bandwidth\": 10\n}"
						}
					]
				},
				{
					"name": "Get GitHub Actions billing for an enterprise",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/enterprises/:enterprise_id/settings/billing/actions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"enterprises",
								":enterprise_id",
								"settings",
								"billing",
								"actions"
							],
							"variable": [
								{
									"key": "enterprise_id",
									"value": "aliquip sint",
									"description": "(Required) Unique identifier of the GitHub Enterprise Cloud instance."
								}
							]
						},
						"description": "**Warning:** The Billing API is currently in public beta and subject to change.\n\nGets the summary of the free and paid GitHub Actions minutes used.\n\nPaid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nThe authenticated user must be an enterprise admin."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/enterprises/:enterprise_id/settings/billing/actions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"enterprises",
										":enterprise_id",
										"settings",
										"billing",
										"actions"
									],
									"variable": [
										{
											"key": "enterprise_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_minutes_used\": 305,\n \"total_paid_minutes_used\": 0,\n \"included_minutes\": 3000,\n \"minutes_used_breakdown\": {\n  \"UBUNTU\": 205,\n  \"MACOS\": 10,\n  \"WINDOWS\": 90\n }\n}"
						}
					]
				},
				{
					"name": "Get shared storage billing for an organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/settings/billing/shared-storage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"settings",
								"billing",
								"shared-storage"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Warning:** The Billing API is currently in public beta and subject to change.\n\nGets the estimated paid and estimated total storage used for GitHub Actions and Github Packages.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nAccess tokens must have the `read:org` scope."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/settings/billing/shared-storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"settings",
										"billing",
										"shared-storage"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"days_left_in_billing_cycle\": 20,\n \"estimated_paid_storage_for_month\": 15,\n \"estimated_storage_for_month\": 40\n}"
						}
					]
				},
				{
					"name": "Get shared storage billing for an enterprise",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/enterprises/:enterprise_id/settings/billing/shared-storage",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"enterprises",
								":enterprise_id",
								"settings",
								"billing",
								"shared-storage"
							],
							"variable": [
								{
									"key": "enterprise_id",
									"value": "aliquip sint",
									"description": "(Required) Unique identifier of the GitHub Enterprise Cloud instance."
								}
							]
						},
						"description": "**Warning:** The Billing API is currently in public beta and subject to change.\n\nGets the estimated paid and estimated total storage used for GitHub Actions and Github Packages.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nThe authenticated user must be an enterprise admin."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/enterprises/:enterprise_id/settings/billing/shared-storage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"enterprises",
										":enterprise_id",
										"settings",
										"billing",
										"shared-storage"
									],
									"variable": [
										{
											"key": "enterprise_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"days_left_in_billing_cycle\": 20,\n \"estimated_paid_storage_for_month\": 15,\n \"estimated_storage_for_month\": 40\n}"
						}
					]
				},
				{
					"name": "Get GitHub Actions billing for an organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/settings/billing/actions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"settings",
								"billing",
								"actions"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Warning:** The Billing API is currently in public beta and subject to change.\n\nGets the summary of the free and paid GitHub Actions minutes used.\n\nPaid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nAccess tokens must have the `read:org` scope."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/settings/billing/actions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"settings",
										"billing",
										"actions"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_minutes_used\": 305,\n \"total_paid_minutes_used\": 0,\n \"included_minutes\": 3000,\n \"minutes_used_breakdown\": {\n  \"UBUNTU\": 205,\n  \"MACOS\": 10,\n  \"WINDOWS\": 90\n }\n}"
						}
					]
				},
				{
					"name": "Get GitHub Packages billing for an enterprise",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/enterprises/:enterprise_id/settings/billing/packages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"enterprises",
								":enterprise_id",
								"settings",
								"billing",
								"packages"
							],
							"variable": [
								{
									"key": "enterprise_id",
									"value": "aliquip sint",
									"description": "(Required) Unique identifier of the GitHub Enterprise Cloud instance."
								}
							]
						},
						"description": "**Warning:** The Billing API is currently in public beta and subject to change.\n\nGets the free and paid storage used for GitHub Packages in gigabytes.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nThe authenticated user must be an enterprise admin."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/enterprises/:enterprise_id/settings/billing/packages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"enterprises",
										":enterprise_id",
										"settings",
										"billing",
										"packages"
									],
									"variable": [
										{
											"key": "enterprise_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_gigabytes_bandwidth_used\": 50,\n \"total_paid_gigabytes_bandwidth_used\": 40,\n \"included_gigabytes_bandwidth\": 10\n}"
						}
					]
				},
				{
					"name": "Get GitHub Packages billing for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/settings/billing/packages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"settings",
								"billing",
								"packages"
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Warning:** The Billing API is currently in public beta and subject to change.\n\nGets the free and paid storage used for GitHub Packages in gigabytes.\n\nPaid minutes only apply to packages stored for private repositories. For more information, see \"[Managing billing for GitHub Packages](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-packages).\"\n\nAccess tokens must have the `user` scope."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/settings/billing/packages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"settings",
										"billing",
										"packages"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_gigabytes_bandwidth_used\": 50,\n \"total_paid_gigabytes_bandwidth_used\": 40,\n \"included_gigabytes_bandwidth\": 10\n}"
						}
					]
				},
				{
					"name": "Get GitHub Actions billing for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/settings/billing/actions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"settings",
								"billing",
								"actions"
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Warning:** The Billing API is currently in public beta and subject to change.\n\nGets the summary of the free and paid GitHub Actions minutes used.\n\nPaid minutes only apply to workflows in private repositories that use GitHub-hosted runners. Minutes used is listed for each GitHub-hosted runner operating system. Any job re-runs are also included in the usage. The usage does not include the multiplier for macOS and Windows runners and is not rounded up to the nearest whole minute. For more information, see \"[Managing billing for GitHub Actions](https://help.github.com/github/setting-up-and-managing-billing-and-payments-on-github/managing-billing-for-github-actions)\".\n\nAccess tokens must have the `user` scope."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/settings/billing/actions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"settings",
										"billing",
										"actions"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_minutes_used\": 305,\n \"total_paid_minutes_used\": 0,\n \"included_minutes\": 3000,\n \"minutes_used_breakdown\": {\n  \"UBUNTU\": 205,\n  \"MACOS\": 10,\n  \"WINDOWS\": 90\n }\n}"
						}
					]
				}
			],
			"description": "Monitor charges and usage from Actions and Packages.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "checks",
			"item": [
				{
					"name": "List check run annotations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/check-runs/:check_run_id/annotations?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"check-runs",
								":check_run_id",
								"annotations"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "check_run_id",
									"value": "41891364",
									"description": "(Required) check_run_id parameter"
								}
							]
						},
						"description": "Lists annotations for a check run using the annotation `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get annotations for a check run. OAuth Apps and authenticated users must have the `repo` scope to get annotations for a check run in a private repository."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/check-runs/:check_run_id/annotations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"check-runs",
										":check_run_id",
										"annotations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "check_run_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"path\": \"README.md\",\n  \"start_line\": 2,\n  \"end_line\": 2,\n  \"start_column\": 5,\n  \"end_column\": 10,\n  \"annotation_level\": \"warning\",\n  \"title\": \"Spell Checker\",\n  \"message\": \"Check your spelling for 'banaas'.\",\n  \"raw_details\": \"Do you mean 'bananas' or 'banana'?\",\n  \"blob_href\": \"https://api.github.com/repos/github/rest-api-description/git/blobs/abc\"\n }\n]"
						}
					]
				},
				{
					"name": "List check suites for a Git reference",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:ref/check-suites?app_id=41891364&check_name=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"commits",
								":ref",
								"check-suites"
							],
							"query": [
								{
									"key": "app_id",
									"value": "41891364",
									"description": "Filters check suites by GitHub App `id`."
								},
								{
									"key": "check_name",
									"value": "aliquip sint",
									"description": "Returns check runs with the specified `name`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "ref",
									"value": "aliquip sint",
									"description": "(Required) ref+ parameter"
								}
							]
						},
						"description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nLists check suites for a commit `ref`. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to list check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:ref/check-suites?app_id=-28117428&check_name=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":ref",
										"check-suites"
									],
									"query": [
										{
											"key": "app_id",
											"value": "-28117428"
										},
										{
											"key": "check_name",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 1,\n \"check_suites\": [\n  {\n   \"id\": 5,\n   \"node_id\": \"MDEwOkNoZWNrU3VpdGU1\",\n   \"head_branch\": \"master\",\n   \"head_sha\": \"d6fde92930d4715a2b49857d24b940956b26d2d3\",\n   \"status\": \"completed\",\n   \"conclusion\": \"neutral\",\n   \"url\": \"https://api.github.com/repos/github/hello-world/check-suites/5\",\n   \"before\": \"146e867f55c26428e5f9fade55a9bbf5e95a7912\",\n   \"after\": \"d6fde92930d4715a2b49857d24b940956b26d2d3\",\n   \"pull_requests\": [],\n   \"app\": {\n    \"id\": 1,\n    \"slug\": \"octoapp\",\n    \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n    \"owner\": {\n     \"login\": \"github\",\n     \"id\": 1,\n     \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n     \"url\": \"https://api.github.com/orgs/github\",\n     \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n     \"events_url\": \"https://api.github.com/orgs/github/events\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": true\n    },\n    \"name\": \"Octocat App\",\n    \"description\": \"\",\n    \"external_url\": \"https://example.com\",\n    \"html_url\": \"https://github.com/apps/octoapp\",\n    \"created_at\": \"2017-07-08T16:18:44-04:00\",\n    \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n    \"permissions\": {\n     \"metadata\": \"read\",\n     \"contents\": \"read\",\n     \"issues\": \"write\",\n     \"single_file\": \"write\"\n    },\n    \"events\": [\n     \"push\",\n     \"pull_request\"\n    ]\n   },\n   \"repository\": {\n    \"id\": 1296269,\n    \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n    \"name\": \"Hello-World\",\n    \"full_name\": \"octocat/Hello-World\",\n    \"owner\": {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    },\n    \"private\": false,\n    \"html_url\": \"https://github.com/octocat/Hello-World\",\n    \"description\": \"This your first repo!\",\n    \"fork\": false,\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n    \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n    \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n    \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n    \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n    \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n    \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n    \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n    \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n    \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n    \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n    \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n    \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n    \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n    \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n    \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n    \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n    \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n    \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n    \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n    \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n    \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n    \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n    \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n    \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n    \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n    \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n    \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n    \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n    \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n    \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n    \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n    \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n    \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n    \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n    \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n    \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n    \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n    \"homepage\": \"https://github.com\",\n    \"language\": null,\n    \"forks_count\": 9,\n    \"stargazers_count\": 80,\n    \"watchers_count\": 80,\n    \"size\": 108,\n    \"default_branch\": \"master\",\n    \"open_issues_count\": 0,\n    \"is_template\": true,\n    \"topics\": [\n     \"octocat\",\n     \"atom\",\n     \"electron\",\n     \"api\"\n    ],\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n    \"has_pages\": false,\n    \"has_downloads\": true,\n    \"archived\": false,\n    \"disabled\": false,\n    \"visibility\": \"public\",\n    \"pushed_at\": \"2011-01-26T19:06:43Z\",\n    \"created_at\": \"2011-01-26T19:01:12Z\",\n    \"updated_at\": \"2011-01-26T19:14:43Z\",\n    \"permissions\": {\n     \"admin\": false,\n     \"push\": false,\n     \"pull\": true\n    },\n    \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n    \"delete_branch_on_merge\": true,\n    \"subscribers_count\": 42,\n    \"network_count\": 0\n   },\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"head_commit\": {\n    \"id\": \"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\n    \"tree_id\": \"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\n    \"message\": \"Merge pull request #6 from Spaceghost/patch-1\\n\\nNew line at end of file.\",\n    \"timestamp\": \"2016-10-10T00:00:00Z\",\n    \"author\": {\n     \"name\": \"The Octocat\",\n     \"email\": \"octocat@nowhere.com\"\n    },\n    \"committer\": {\n     \"name\": \"The Octocat\",\n     \"email\": \"octocat@nowhere.com\"\n    }\n   },\n   \"latest_check_runs_count\": 1,\n   \"check_runs_url\": \"https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List check runs for a Git reference",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:ref/check-runs?check_name=aliquip sint&status=queued&filter=all&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"commits",
								":ref",
								"check-runs"
							],
							"query": [
								{
									"key": "check_name",
									"value": "aliquip sint",
									"description": "Returns check runs with the specified `name`."
								},
								{
									"key": "status",
									"value": "queued",
									"description": "Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`."
								},
								{
									"key": "filter",
									"value": "all",
									"description": "Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "ref",
									"value": "aliquip sint",
									"description": "(Required) ref+ parameter"
								}
							]
						},
						"description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a commit ref. The `ref` can be a SHA, branch name, or a tag name. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:ref/check-runs?check_name=nisi reprehenderit&status=in_progress&filter=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":ref",
										"check-runs"
									],
									"query": [
										{
											"key": "check_name",
											"value": "nisi reprehenderit"
										},
										{
											"key": "status",
											"value": "in_progress"
										},
										{
											"key": "filter",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 1,\n \"check_runs\": [\n  {\n   \"id\": 4,\n   \"head_sha\": \"ce587453ced02b1526dfb4cb910479d431683101\",\n   \"node_id\": \"MDg6Q2hlY2tSdW40\",\n   \"external_id\": \"\",\n   \"url\": \"https://api.github.com/repos/github/hello-world/check-runs/4\",\n   \"html_url\": \"https://github.com/github/hello-world/runs/4\",\n   \"details_url\": \"https://example.com\",\n   \"status\": \"completed\",\n   \"conclusion\": \"neutral\",\n   \"started_at\": \"2018-05-04T01:14:52Z\",\n   \"completed_at\": \"2018-05-04T01:14:52Z\",\n   \"output\": {\n    \"title\": \"Mighty Readme report\",\n    \"summary\": \"There are 0 failures, 2 warnings, and 1 notice.\",\n    \"text\": \"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\n    \"annotations_count\": 2,\n    \"annotations_url\": \"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"\n   },\n   \"name\": \"mighty_readme\",\n   \"check_suite\": {\n    \"id\": 5\n   },\n   \"app\": {\n    \"id\": 1,\n    \"slug\": \"octoapp\",\n    \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n    \"owner\": {\n     \"login\": \"github\",\n     \"id\": 1,\n     \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n     \"url\": \"https://api.github.com/orgs/github\",\n     \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n     \"events_url\": \"https://api.github.com/orgs/github/events\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": true\n    },\n    \"name\": \"Octocat App\",\n    \"description\": \"\",\n    \"external_url\": \"https://example.com\",\n    \"html_url\": \"https://github.com/apps/octoapp\",\n    \"created_at\": \"2017-07-08T16:18:44-04:00\",\n    \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n    \"permissions\": {\n     \"metadata\": \"read\",\n     \"contents\": \"read\",\n     \"issues\": \"write\",\n     \"single_file\": \"write\"\n    },\n    \"events\": [\n     \"push\",\n     \"pull_request\"\n    ]\n   },\n   \"pull_requests\": [\n    {\n     \"url\": \"https://api.github.com/repos/github/hello-world/pulls/1\",\n     \"id\": 1934,\n     \"number\": 3956,\n     \"head\": {\n      \"ref\": \"say-hello\",\n      \"sha\": \"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\n      \"repo\": {\n       \"id\": 526,\n       \"url\": \"https://api.github.com/repos/github/hello-world\",\n       \"name\": \"hello-world\"\n      }\n     },\n     \"base\": {\n      \"ref\": \"master\",\n      \"sha\": \"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\n      \"repo\": {\n       \"id\": 526,\n       \"url\": \"https://api.github.com/repos/github/hello-world\",\n       \"name\": \"hello-world\"\n      }\n     }\n    }\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List check runs in a check suite",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/check-suites/:check_suite_id/check-runs?check_name=aliquip sint&status=queued&filter=all&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"check-suites",
								":check_suite_id",
								"check-runs"
							],
							"query": [
								{
									"key": "check_name",
									"value": "aliquip sint",
									"description": "Returns check runs with the specified `name`."
								},
								{
									"key": "status",
									"value": "queued",
									"description": "Returns check runs with the specified `status`. Can be one of `queued`, `in_progress`, or `completed`."
								},
								{
									"key": "filter",
									"value": "all",
									"description": "Filters check runs by their `completed_at` timestamp. Can be one of `latest` (returning the most recent check runs) or `all`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "check_suite_id",
									"value": "41891364",
									"description": "(Required) check_suite_id parameter"
								}
							]
						},
						"description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nLists check runs for a check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/check-suites/:check_suite_id/check-runs?check_name=nisi reprehenderit&status=in_progress&filter=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"check-suites",
										":check_suite_id",
										"check-runs"
									],
									"query": [
										{
											"key": "check_name",
											"value": "nisi reprehenderit"
										},
										{
											"key": "status",
											"value": "in_progress"
										},
										{
											"key": "filter",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "check_suite_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 1,\n \"check_runs\": [\n  {\n   \"id\": 4,\n   \"head_sha\": \"ce587453ced02b1526dfb4cb910479d431683101\",\n   \"node_id\": \"MDg6Q2hlY2tSdW40\",\n   \"external_id\": \"\",\n   \"url\": \"https://api.github.com/repos/github/hello-world/check-runs/4\",\n   \"html_url\": \"https://github.com/github/hello-world/runs/4\",\n   \"details_url\": \"https://example.com\",\n   \"status\": \"completed\",\n   \"conclusion\": \"neutral\",\n   \"started_at\": \"2018-05-04T01:14:52Z\",\n   \"completed_at\": \"2018-05-04T01:14:52Z\",\n   \"output\": {\n    \"title\": \"Mighty Readme report\",\n    \"summary\": \"There are 0 failures, 2 warnings, and 1 notice.\",\n    \"text\": \"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\n    \"annotations_count\": 2,\n    \"annotations_url\": \"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"\n   },\n   \"name\": \"mighty_readme\",\n   \"check_suite\": {\n    \"id\": 5\n   },\n   \"app\": {\n    \"id\": 1,\n    \"slug\": \"octoapp\",\n    \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n    \"owner\": {\n     \"login\": \"github\",\n     \"id\": 1,\n     \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n     \"url\": \"https://api.github.com/orgs/github\",\n     \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n     \"events_url\": \"https://api.github.com/orgs/github/events\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": true\n    },\n    \"name\": \"Octocat App\",\n    \"description\": \"\",\n    \"external_url\": \"https://example.com\",\n    \"html_url\": \"https://github.com/apps/octoapp\",\n    \"created_at\": \"2017-07-08T16:18:44-04:00\",\n    \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n    \"permissions\": {\n     \"metadata\": \"read\",\n     \"contents\": \"read\",\n     \"issues\": \"write\",\n     \"single_file\": \"write\"\n    },\n    \"events\": [\n     \"push\",\n     \"pull_request\"\n    ]\n   },\n   \"pull_requests\": [\n    {\n     \"url\": \"https://api.github.com/repos/github/hello-world/pulls/1\",\n     \"id\": 1934,\n     \"number\": 3956,\n     \"head\": {\n      \"ref\": \"say-hello\",\n      \"sha\": \"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\n      \"repo\": {\n       \"id\": 526,\n       \"url\": \"https://api.github.com/repos/github/hello-world\",\n       \"name\": \"hello-world\"\n      }\n     },\n     \"base\": {\n      \"ref\": \"master\",\n      \"sha\": \"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\n      \"repo\": {\n       \"id\": 526,\n       \"url\": \"https://api.github.com/repos/github/hello-world\",\n       \"name\": \"hello-world\"\n      }\n     }\n    }\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get a check run",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/check-runs/:check_run_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"check-runs",
								":check_run_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "check_run_id",
									"value": "41891364",
									"description": "(Required) check_run_id parameter"
								}
							]
						},
						"description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nGets a single check run using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check runs. OAuth Apps and authenticated users must have the `repo` scope to get check runs in a private repository."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/check-runs/:check_run_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"check-runs",
										":check_run_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "check_run_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 4,\n \"head_sha\": \"ce587453ced02b1526dfb4cb910479d431683101\",\n \"node_id\": \"MDg6Q2hlY2tSdW40\",\n \"external_id\": \"\",\n \"url\": \"https://api.github.com/repos/github/hello-world/check-runs/4\",\n \"html_url\": \"https://github.com/github/hello-world/runs/4\",\n \"details_url\": \"https://example.com\",\n \"status\": \"completed\",\n \"conclusion\": \"neutral\",\n \"started_at\": \"2018-05-04T01:14:52Z\",\n \"completed_at\": \"2018-05-04T01:14:52Z\",\n \"output\": {\n  \"title\": \"Mighty Readme report\",\n  \"summary\": \"There are 0 failures, 2 warnings, and 1 notice.\",\n  \"text\": \"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\n  \"annotations_count\": 2,\n  \"annotations_url\": \"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"\n },\n \"name\": \"mighty_readme\",\n \"check_suite\": {\n  \"id\": 5\n },\n \"app\": {\n  \"id\": 1,\n  \"slug\": \"octoapp\",\n  \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n  \"owner\": {\n   \"login\": \"github\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n   \"url\": \"https://api.github.com/orgs/github\",\n   \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n   \"events_url\": \"https://api.github.com/orgs/github/events\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  },\n  \"name\": \"Octocat App\",\n  \"description\": \"\",\n  \"external_url\": \"https://example.com\",\n  \"html_url\": \"https://github.com/apps/octoapp\",\n  \"created_at\": \"2017-07-08T16:18:44-04:00\",\n  \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n  \"permissions\": {\n   \"metadata\": \"read\",\n   \"contents\": \"read\",\n   \"issues\": \"write\",\n   \"single_file\": \"write\"\n  },\n  \"events\": [\n   \"push\",\n   \"pull_request\"\n  ]\n },\n \"pull_requests\": [\n  {\n   \"url\": \"https://api.github.com/repos/github/hello-world/pulls/1\",\n   \"id\": 1934,\n   \"number\": 3956,\n   \"head\": {\n    \"ref\": \"say-hello\",\n    \"sha\": \"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\n    \"repo\": {\n     \"id\": 526,\n     \"url\": \"https://api.github.com/repos/github/hello-world\",\n     \"name\": \"hello-world\"\n    }\n   },\n   \"base\": {\n    \"ref\": \"master\",\n    \"sha\": \"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\n    \"repo\": {\n     \"id\": 526,\n     \"url\": \"https://api.github.com/repos/github/hello-world\",\n     \"name\": \"hello-world\"\n    }\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Update a check run",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"mighty_readme\",\n    \"started_at\": \"2018-05-04T01:14:52Z\",\n    \"status\": \"completed\",\n    \"conclusion\": \"success\",\n    \"completed_at\": \"2018-05-04T01:14:52Z\",\n    \"output\": {\n        \"title\": \"Mighty Readme report\",\n        \"summary\": \"There are 0 failures, 2 warnings, and 1 notices.\",\n        \"text\": \"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\n        \"annotations\": [\n            {\n                \"path\": \"README.md\",\n                \"annotation_level\": \"warning\",\n                \"title\": \"Spell Checker\",\n                \"message\": \"Check your spelling for 'banaas'.\",\n                \"raw_details\": \"Do you mean 'bananas' or 'banana'?\",\n                \"start_line\": 2,\n                \"end_line\": 2\n            },\n            {\n                \"path\": \"README.md\",\n                \"annotation_level\": \"warning\",\n                \"title\": \"Spell Checker\",\n                \"message\": \"Check your spelling for 'aples'\",\n                \"raw_details\": \"Do you mean 'apples' or 'Naples'\",\n                \"start_line\": 4,\n                \"end_line\": 4\n            }\n        ],\n        \"images\": [\n            {\n                \"alt\": \"Super bananas\",\n                \"image_url\": \"http://example.com/images/42\"\n            }\n        ]\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/check-runs/:check_run_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"check-runs",
								":check_run_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "check_run_id",
									"value": "41891364",
									"description": "(Required) check_run_id parameter"
								}
							]
						},
						"description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nUpdates a check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to edit check runs."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"mighty_readme\",\n    \"started_at\": \"2018-05-04T01:14:52Z\",\n    \"status\": \"completed\",\n    \"conclusion\": \"success\",\n    \"completed_at\": \"2018-05-04T01:14:52Z\",\n    \"output\": {\n        \"title\": \"Mighty Readme report\",\n        \"summary\": \"There are 0 failures, 2 warnings, and 1 notices.\",\n        \"text\": \"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\n        \"annotations\": [\n            {\n                \"path\": \"README.md\",\n                \"annotation_level\": \"warning\",\n                \"title\": \"Spell Checker\",\n                \"message\": \"Check your spelling for 'banaas'.\",\n                \"raw_details\": \"Do you mean 'bananas' or 'banana'?\",\n                \"start_line\": 2,\n                \"end_line\": 2\n            },\n            {\n                \"path\": \"README.md\",\n                \"annotation_level\": \"warning\",\n                \"title\": \"Spell Checker\",\n                \"message\": \"Check your spelling for 'aples'\",\n                \"raw_details\": \"Do you mean 'apples' or 'Naples'\",\n                \"start_line\": 4,\n                \"end_line\": 4\n            }\n        ],\n        \"images\": [\n            {\n                \"alt\": \"Super bananas\",\n                \"image_url\": \"http://example.com/images/42\"\n            }\n        ]\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/check-runs/:check_run_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"check-runs",
										":check_run_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "check_run_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 4,\n \"head_sha\": \"ce587453ced02b1526dfb4cb910479d431683101\",\n \"node_id\": \"MDg6Q2hlY2tSdW40\",\n \"external_id\": \"\",\n \"url\": \"https://api.github.com/repos/github/hello-world/check-runs/4\",\n \"html_url\": \"https://github.com/github/hello-world/runs/4\",\n \"details_url\": \"https://example.com\",\n \"status\": \"completed\",\n \"conclusion\": \"neutral\",\n \"started_at\": \"2018-05-04T01:14:52Z\",\n \"completed_at\": \"2018-05-04T01:14:52Z\",\n \"output\": {\n  \"title\": \"Mighty Readme report\",\n  \"summary\": \"There are 0 failures, 2 warnings, and 1 notice.\",\n  \"text\": \"You may have some misspelled words on lines 2 and 4. You also may want to add a section in your README about how to install your app.\",\n  \"annotations_count\": 2,\n  \"annotations_url\": \"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"\n },\n \"name\": \"mighty_readme\",\n \"check_suite\": {\n  \"id\": 5\n },\n \"app\": {\n  \"id\": 1,\n  \"slug\": \"octoapp\",\n  \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n  \"owner\": {\n   \"login\": \"github\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n   \"url\": \"https://api.github.com/orgs/github\",\n   \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n   \"events_url\": \"https://api.github.com/orgs/github/events\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  },\n  \"name\": \"Octocat App\",\n  \"description\": \"\",\n  \"external_url\": \"https://example.com\",\n  \"html_url\": \"https://github.com/apps/octoapp\",\n  \"created_at\": \"2017-07-08T16:18:44-04:00\",\n  \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n  \"permissions\": {\n   \"metadata\": \"read\",\n   \"contents\": \"read\",\n   \"issues\": \"write\",\n   \"single_file\": \"write\"\n  },\n  \"events\": [\n   \"push\",\n   \"pull_request\"\n  ]\n },\n \"pull_requests\": [\n  {\n   \"url\": \"https://api.github.com/repos/github/hello-world/pulls/1\",\n   \"id\": 1934,\n   \"number\": 3956,\n   \"head\": {\n    \"ref\": \"say-hello\",\n    \"sha\": \"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\n    \"repo\": {\n     \"id\": 526,\n     \"url\": \"https://api.github.com/repos/github/hello-world\",\n     \"name\": \"hello-world\"\n    }\n   },\n   \"base\": {\n    \"ref\": \"master\",\n    \"sha\": \"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\n    \"repo\": {\n     \"id\": 526,\n     \"url\": \"https://api.github.com/repos/github/hello-world\",\n     \"name\": \"hello-world\"\n    }\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a check suite",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"head_sha\": \"d6fde92930d4715a2b49857d24b940956b26d2d3\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/check-suites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"check-suites"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nBy default, check suites are automatically created when you create a [check run](https://developer.github.com/v3/checks/runs/). You only need to use this endpoint for manually creating check suites when you've disabled automatic creation using \"[Update repository preferences for check suites](https://developer.github.com/v3/checks/suites/#update-repository-preferences-for-check-suites)\". Your GitHub App must have the `checks:write` permission to create check suites."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"head_sha\": \"d6fde92930d4715a2b49857d24b940956b26d2d3\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/check-suites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"check-suites"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 5,\n \"node_id\": \"MDEwOkNoZWNrU3VpdGU1\",\n \"head_branch\": \"master\",\n \"head_sha\": \"d6fde92930d4715a2b49857d24b940956b26d2d3\",\n \"status\": \"completed\",\n \"conclusion\": \"neutral\",\n \"url\": \"https://api.github.com/repos/github/hello-world/check-suites/5\",\n \"before\": \"146e867f55c26428e5f9fade55a9bbf5e95a7912\",\n \"after\": \"d6fde92930d4715a2b49857d24b940956b26d2d3\",\n \"pull_requests\": [],\n \"created_at\": \"2017-07-08T16:18:44-04:00\",\n \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n \"app\": {\n  \"id\": 1,\n  \"slug\": \"octoapp\",\n  \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n  \"owner\": {\n   \"login\": \"github\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n   \"url\": \"https://api.github.com/orgs/github\",\n   \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n   \"events_url\": \"https://api.github.com/orgs/github/events\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  },\n  \"name\": \"Octocat App\",\n  \"description\": \"\",\n  \"external_url\": \"https://example.com\",\n  \"html_url\": \"https://github.com/apps/octoapp\",\n  \"created_at\": \"2017-07-08T16:18:44-04:00\",\n  \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n  \"permissions\": {\n   \"metadata\": \"read\",\n   \"contents\": \"read\",\n   \"issues\": \"write\",\n   \"single_file\": \"write\"\n  },\n  \"events\": [\n   \"push\",\n   \"pull_request\"\n  ]\n },\n \"repository\": {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"template_repository\": \"octocat/template-repo\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"delete_branch_on_merge\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0\n },\n \"head_commit\": {\n  \"id\": \"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\n  \"tree_id\": \"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\n  \"message\": \"Merge pull request #6 from Spaceghost/patch-1\\n\\nNew line at end of file.\",\n  \"timestamp\": \"2016-10-10T00:00:00Z\",\n  \"author\": {\n   \"name\": \"The Octocat\",\n   \"email\": \"octocat@nowhere.com\"\n  },\n  \"committer\": {\n   \"name\": \"The Octocat\",\n   \"email\": \"octocat@nowhere.com\"\n  }\n },\n \"latest_check_runs_count\": 1,\n \"check_runs_url\": \"https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs\"\n}"
						}
					]
				},
				{
					"name": "Rerequest a check suite",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/check-suites/:check_suite_id/rerequest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"check-suites",
								":check_suite_id",
								"rerequest"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "check_suite_id",
									"value": "41891364",
									"description": "(Required) check_suite_id parameter"
								}
							]
						},
						"description": "Triggers GitHub to rerequest an existing check suite, without pushing new code to a repository. This endpoint will trigger the [`check_suite` webhook](https://developer.github.com/webhooks/event-payloads/#check_suite) event with the action `rerequested`. When a check suite is `rerequested`, its `status` is reset to `queued` and the `conclusion` is cleared.\n\nTo rerequest a check suite, your GitHub App must have the `checks:read` permission on a private repository or pull access to a public repository."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/check-suites/:check_suite_id/rerequest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"check-suites",
										":check_suite_id",
										"rerequest"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "check_suite_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update repository preferences for check suites",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"auto_trigger_checks\": [\n        {\n            \"app_id\": 4,\n            \"setting\": false\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/check-suites/preferences",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"check-suites",
								"preferences"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Changes the default automatic flow when creating check suites. By default, a check suite is automatically created each time code is pushed to a repository. When you disable the automatic creation of check suites, you can manually [Create a check suite](https://developer.github.com/v3/checks/suites/#create-a-check-suite). You must have admin permissions in the repository to set preferences for check suites."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"auto_trigger_checks\": [\n        {\n            \"app_id\": 4,\n            \"setting\": false\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/check-suites/preferences",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"check-suites",
										"preferences"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"preferences\": {\n  \"auto_trigger_checks\": [\n   {\n    \"app_id\": 2,\n    \"setting\": true\n   },\n   {\n    \"app_id\": 4,\n    \"setting\": false\n   }\n  ]\n },\n \"repository\": {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"allow_rebase_merge\": true,\n  \"template_repository\": null,\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"allow_squash_merge\": true,\n  \"delete_branch_on_merge\": true,\n  \"allow_merge_commit\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"spdx_id\": \"MIT\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n   \"html_url\": \"http://choosealicense.com/licenses/mit/\"\n  },\n  \"forks\": 1,\n  \"open_issues\": 1,\n  \"watchers\": 1\n }\n}"
						}
					]
				},
				{
					"name": "Create a check run",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"mighty_readme\",\n    \"head_sha\": \"ce587453ced02b1526dfb4cb910479d431683101\",\n    \"status\": \"in_progress\",\n    \"external_id\": \"42\",\n    \"started_at\": \"2018-05-04T01:14:52Z\",\n    \"output\": {\n        \"title\": \"Mighty Readme report\",\n        \"summary\": \"\",\n        \"text\": \"\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/check-runs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"check-runs"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array.\n\nCreates a new check run for a specific commit in a repository. Your GitHub App must have the `checks:write` permission to create check runs."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"mighty_readme\",\n    \"head_sha\": \"ce587453ced02b1526dfb4cb910479d431683101\",\n    \"status\": \"in_progress\",\n    \"external_id\": \"42\",\n    \"started_at\": \"2018-05-04T01:14:52Z\",\n    \"output\": {\n        \"title\": \"Mighty Readme report\",\n        \"summary\": \"\",\n        \"text\": \"\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/check-runs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"check-runs"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 4,\n \"head_sha\": \"ce587453ced02b1526dfb4cb910479d431683101\",\n \"node_id\": \"MDg6Q2hlY2tSdW40\",\n \"external_id\": \"42\",\n \"url\": \"https://api.github.com/repos/github/hello-world/check-runs/4\",\n \"html_url\": \"https://github.com/github/hello-world/runs/4\",\n \"details_url\": \"https://example.com\",\n \"status\": \"in_progress\",\n \"conclusion\": null,\n \"started_at\": \"2018-05-04T01:14:52Z\",\n \"completed_at\": null,\n \"output\": {\n  \"title\": \"Mighty Readme Report\",\n  \"summary\": \"\",\n  \"text\": \"\",\n  \"annotations_count\": 1,\n  \"annotations_url\": \"https://api.github.com/repos/github/hello-world/check-runs/4/annotations\"\n },\n \"name\": \"mighty_readme\",\n \"check_suite\": {\n  \"id\": 5\n },\n \"app\": {\n  \"id\": 1,\n  \"slug\": \"octoapp\",\n  \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n  \"owner\": {\n   \"login\": \"github\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n   \"url\": \"https://api.github.com/orgs/github\",\n   \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n   \"events_url\": \"https://api.github.com/orgs/github/events\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  },\n  \"name\": \"Octocat App\",\n  \"description\": \"\",\n  \"external_url\": \"https://example.com\",\n  \"html_url\": \"https://github.com/apps/octoapp\",\n  \"created_at\": \"2017-07-08T16:18:44-04:00\",\n  \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n  \"permissions\": {\n   \"metadata\": \"read\",\n   \"contents\": \"read\",\n   \"issues\": \"write\",\n   \"single_file\": \"write\"\n  },\n  \"events\": [\n   \"push\",\n   \"pull_request\"\n  ]\n },\n \"pull_requests\": [\n  {\n   \"url\": \"https://api.github.com/repos/github/hello-world/pulls/1\",\n   \"id\": 1934,\n   \"number\": 3956,\n   \"head\": {\n    \"ref\": \"say-hello\",\n    \"sha\": \"3dca65fa3e8d4b3da3f3d056c59aee1c50f41390\",\n    \"repo\": {\n     \"id\": 526,\n     \"url\": \"https://api.github.com/repos/github/hello-world\",\n     \"name\": \"hello-world\"\n    }\n   },\n   \"base\": {\n    \"ref\": \"master\",\n    \"sha\": \"e7fdf7640066d71ad16a86fbcbb9c6a10a18af4f\",\n    \"repo\": {\n     \"id\": 526,\n     \"url\": \"https://api.github.com/repos/github/hello-world\",\n     \"name\": \"hello-world\"\n    }\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get a check suite",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/check-suites/:check_suite_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"check-suites",
								":check_suite_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "check_suite_id",
									"value": "41891364",
									"description": "(Required) check_suite_id parameter"
								}
							]
						},
						"description": "**Note:** The Checks API only looks for pushes in the repository where the check suite or check run were created. Pushes to a branch in a forked repository are not detected and return an empty `pull_requests` array and a `null` value for `head_branch`.\n\nGets a single check suite using its `id`. GitHub Apps must have the `checks:read` permission on a private repository or pull access to a public repository to get check suites. OAuth Apps and authenticated users must have the `repo` scope to get check suites in a private repository."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/check-suites/:check_suite_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"check-suites",
										":check_suite_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "check_suite_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 5,\n \"node_id\": \"MDEwOkNoZWNrU3VpdGU1\",\n \"head_branch\": \"master\",\n \"head_sha\": \"d6fde92930d4715a2b49857d24b940956b26d2d3\",\n \"status\": \"completed\",\n \"conclusion\": \"neutral\",\n \"url\": \"https://api.github.com/repos/github/hello-world/check-suites/5\",\n \"before\": \"146e867f55c26428e5f9fade55a9bbf5e95a7912\",\n \"after\": \"d6fde92930d4715a2b49857d24b940956b26d2d3\",\n \"pull_requests\": [],\n \"created_at\": \"2017-07-08T16:18:44-04:00\",\n \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n \"app\": {\n  \"id\": 1,\n  \"slug\": \"octoapp\",\n  \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n  \"owner\": {\n   \"login\": \"github\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n   \"url\": \"https://api.github.com/orgs/github\",\n   \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n   \"events_url\": \"https://api.github.com/orgs/github/events\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  },\n  \"name\": \"Octocat App\",\n  \"description\": \"\",\n  \"external_url\": \"https://example.com\",\n  \"html_url\": \"https://github.com/apps/octoapp\",\n  \"created_at\": \"2017-07-08T16:18:44-04:00\",\n  \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n  \"permissions\": {\n   \"metadata\": \"read\",\n   \"contents\": \"read\",\n   \"issues\": \"write\",\n   \"single_file\": \"write\"\n  },\n  \"events\": [\n   \"push\",\n   \"pull_request\"\n  ]\n },\n \"repository\": {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"template_repository\": \"octocat/template-repo\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"delete_branch_on_merge\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0\n },\n \"head_commit\": {\n  \"id\": \"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\n  \"tree_id\": \"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\n  \"message\": \"Merge pull request #6 from Spaceghost/patch-1\\n\\nNew line at end of file.\",\n  \"timestamp\": \"2016-10-10T00:00:00Z\",\n  \"author\": {\n   \"name\": \"The Octocat\",\n   \"email\": \"octocat@nowhere.com\"\n  },\n  \"committer\": {\n   \"name\": \"The Octocat\",\n   \"email\": \"octocat@nowhere.com\"\n  }\n },\n \"latest_check_runs_count\": 1,\n \"check_runs_url\": \"https://api.github.com/repos/octocat/Hello-World/check-suites/5/check-runs\"\n}"
						}
					]
				}
			],
			"description": "Rich interactions with checks run by your integrations.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "code-scanning",
			"item": [
				{
					"name": "List code scanning alerts for a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/code-scanning/alerts?state=in voluptate&ref=aliquip sint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"code-scanning",
								"alerts"
							],
							"query": [
								{
									"key": "state",
									"value": "in voluptate",
									"description": "Set to `closed` to list only closed code scanning alerts."
								},
								{
									"key": "ref",
									"value": "aliquip sint",
									"description": "Returns a list of code scanning alerts for a specific brach reference. The `ref` must be formatted as `heads/<branch name>`."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists all open code scanning alerts for the default branch (usually `master`) and protected branches in a repository. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` read permission to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/code-scanning/alerts?state=in voluptate&ref=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"code-scanning",
										"alerts"
									],
									"query": [
										{
											"key": "state",
											"value": "in voluptate"
										},
										{
											"key": "ref",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"number\": 42,\n  \"rule_id\": \"js/trivial-conditional\",\n  \"rule_severity\": \"warning\",\n  \"rule_description\": \"Useless conditional\",\n  \"tool\": \"CodeQL\",\n  \"created_at\": \"2020-05-06T12:00:00Z\",\n  \"open\": true,\n  \"closed_by\": null,\n  \"closed_at\": null,\n  \"url\": \"https://api.github.com/repos/Octo-org/octo-repo/code-scanning/alerts/25\",\n  \"html_url\": \"https://github.com/Octo-org/octo-repo/security/code-scanning/25\"\n },\n {\n  \"number\": 43,\n  \"rule_id\": \"js/useless-expression\",\n  \"rule_severity\": \"warning\",\n  \"rule_description\": \"Expression has no effect\",\n  \"tool\": \"CodeQL\",\n  \"created_at\": \"2020-05-06T12:00:00Z\",\n  \"open\": true,\n  \"closed_by\": null,\n  \"closed_at\": null,\n  \"url\": \"https://api.github.com/repos/Octo-org/octo-repo/code-scanning/alerts/88\",\n  \"html_url\": \"https://github.com/Octo-org/octo-repo/security/code-scanning/88\"\n }\n]"
						},
						{
							"name": "Response if the ref doesn't match an existing ref",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/code-scanning/alerts?state=in voluptate&ref=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"code-scanning",
										"alerts"
									],
									"query": [
										{
											"key": "state",
											"value": "in voluptate"
										},
										{
											"key": "ref",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/code-scanning/alerts?state=in voluptate&ref=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"code-scanning",
										"alerts"
									],
									"query": [
										{
											"key": "state",
											"value": "in voluptate"
										},
										{
											"key": "ref",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sint exercitation velit\",\n \"message\": \"cupidatat do velit ut\",\n \"documentation_url\": \"elit non dolore et eiusmod\"\n}"
						}
					]
				},
				{
					"name": "Get a code scanning alert",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/code-scanning/alerts/:alert_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"code-scanning",
								"alerts",
								":alert_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "alert_id",
									"value": "41891364",
									"description": "(Required) alert_id parameter"
								}
							]
						},
						"description": "Gets a single code scanning alert. You must use an access token with the `security_events` scope to use this endpoint. GitHub Apps must have the `security_events` read permission to use this endpoint.\n\nThe security `alert_id` is found at the end of the security alert's URL. For example, the security alert ID for `https://github.com/Octo-org/octo-repo/security/code-scanning/88` is `88`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/code-scanning/alerts/:alert_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"code-scanning",
										"alerts",
										":alert_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "alert_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"rule_id\": \"js/useless-expression\",\n \"rule_severity\": \"warning\",\n \"rule_description\": \"Expression has no effect\",\n \"tool\": \"CodeQL\",\n \"created_at\": \"2020-05-06T12:00:00Z\",\n \"open\": true,\n \"closed_by\": null,\n \"closed_at\": null,\n \"url\": \"https://api.github.com/repos/Octo-org/octo-repo/code-scanning/alerts/88\",\n \"html_url\": \"https://github.com/Octo-org/octo-repo/security/code-scanning/88\"\n}"
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/code-scanning/alerts/:alert_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"code-scanning",
										"alerts",
										":alert_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "alert_id"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sint exercitation velit\",\n \"message\": \"cupidatat do velit ut\",\n \"documentation_url\": \"elit non dolore et eiusmod\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/code-scanning/alerts/:alert_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"code-scanning",
										"alerts",
										":alert_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "alert_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				}
			],
			"description": "Retrieve code scanning alerts from a repository.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "codes-of-conduct",
			"item": [
				{
					"name": "Get the code of conduct for a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/community/code_of_conduct",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"community",
								"code_of_conduct"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "This method returns the contents of the repository's code of conduct file, if one is detected."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/community/code_of_conduct",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"community",
										"code_of_conduct"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"key\": \"contributor_covenant\",\n \"name\": \"Contributor Covenant\",\n \"url\": \"https://github.com/LindseyB/cosee/blob/master/CODE_OF_CONDUCT.md\",\n \"body\": \"# Contributor Covenant Code of Conduct\\n\\n## Our Pledge\\n\\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\\n\\n## Our Standards\\n\\nExamples of behavior that contributes to creating a positive environment include=>\\n\\n* Using welcoming and inclusive language\\n* Being respectful of differing viewpoints and experiences\\n* Gracefully accepting constructive criticism\\n* Focusing on what is best for the community\\n* Showing empathy towards other community members\\n\\nExamples of unacceptable behavior by participants include=>\\n\\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\\n* Trolling, insulting/derogatory comments, and personal or political attacks\\n* Public or private harassment\\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\\n* Other conduct which could reasonably be considered inappropriate in a professional setting\\n\\n## Our Responsibilities\\n\\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\\nto any instances of unacceptable behavior.\\n\\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\\n\\n## Scope\\n\\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\\nposting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\\n\\n## Enforcement\\n\\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at lindseyb@github.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\\n\\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\\n\\n## Attribution\\n\\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\\n\\n[homepage]: http://contributor-covenant.org\\n[version]: http://contributor-covenant.org/version/1/4/\\n\",\n \"html_url\": \"https://github.com/LindseyB/cosee/blob/master/CODE_OF_CONDUCT.md\"\n}"
						}
					]
				},
				{
					"name": "Get a code of conduct",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/codes_of_conduct/:key",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"codes_of_conduct",
								":key"
							],
							"variable": [
								{
									"key": "key",
									"value": "aliquip sint",
									"description": "(Required) key parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/codes_of_conduct/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"codes_of_conduct",
										":key"
									],
									"variable": [
										{
											"key": "key"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/codes_of_conduct/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"codes_of_conduct",
										":key"
									],
									"variable": [
										{
											"key": "key"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/codes_of_conduct/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"codes_of_conduct",
										":key"
									],
									"variable": [
										{
											"key": "key"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"key\": \"contributor_covenant\",\n \"name\": \"Contributor Covenant\",\n \"url\": \"https://api.github.com/codes_of_conduct/contributor_covenant\",\n \"body\": \"# Contributor Covenant Code of Conduct\\n\\n## Our Pledge\\n\\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\\n\\n## Our Standards\\n\\nExamples of behavior that contributes to creating a positive environment include:\\n\\n* Using welcoming and inclusive language\\n* Being respectful of differing viewpoints and experiences\\n* Gracefully accepting constructive criticism\\n* Focusing on what is best for the community\\n* Showing empathy towards other community members\\n\\nExamples of unacceptable behavior by participants include:\\n\\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\\n* Trolling, insulting/derogatory comments, and personal or political attacks\\n* Public or private harassment\\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\\n* Other conduct which could reasonably be considered inappropriate in a professional setting\\n\\n## Our Responsibilities\\n\\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response\\n                  to any instances of unacceptable behavior.\\n\\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\\n\\n## Scope\\n\\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address,\\n                  posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\\n\\n## Enforcement\\n\\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at [EMAIL]. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\\n\\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\\n\\n## Attribution\\n\\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\\n\\n[homepage]: http://contributor-covenant.org\\n[version]: http://contributor-covenant.org/version/1/4/\\n\",\n \"html_url\": \"http://contributor-covenant.org/version/1/4/\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/codes_of_conduct/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"codes_of_conduct",
										":key"
									],
									"variable": [
										{
											"key": "key"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get all codes of conduct",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/codes_of_conduct",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"codes_of_conduct"
							]
						}
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/codes_of_conduct",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"codes_of_conduct"
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/codes_of_conduct",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"codes_of_conduct"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/codes_of_conduct",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"codes_of_conduct"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"key\": \"citizen_code_of_conduct\",\n  \"name\": \"Citizen Code of Conduct\",\n  \"url\": \"https://api.github.com/codes_of_conduct/citizen_code_of_conduct\",\n  \"html_url\": \"http://citizencodeofconduct.org/\"\n },\n {\n  \"key\": \"contributor_covenant\",\n  \"name\": \"Contributor Covenant\",\n  \"url\": \"https://api.github.com/codes_of_conduct/contributor_covenant\",\n  \"html_url\": \"https://www.contributor-covenant.org/version/2/0/code_of_conduct/\"\n }\n]"
						}
					]
				}
			],
			"description": "Insight into codes of conduct for your communities.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "emojis",
			"item": [
				{
					"name": "Get emojis",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/emojis",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"emojis"
							]
						},
						"description": "Lists all the emojis available to use on GitHub."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/emojis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emojis"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "\"sunt dolor\""
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/emojis",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emojis"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "List emojis available to use on GitHub.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "gists",
			"item": [
				{
					"name": "Unstar a gist",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists/:gist_id/star",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								":gist_id",
								"star"
							],
							"variable": [
								{
									"key": "gist_id",
									"value": "aliquip sint",
									"description": "(Required) gist_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/star",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"star"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/star",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"star"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/star",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"star"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/star",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"star"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Check if a gist is starred",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists/:gist_id/star",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								":gist_id",
								"star"
							],
							"variable": [
								{
									"key": "gist_id",
									"value": "aliquip sint",
									"description": "(Required) gist_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Response if gist is starred",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/star",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"star"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/star",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"star"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Response if gist is not starred",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/star",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"star"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/star",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"star"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Star a gist",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists/:gist_id/star",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								":gist_id",
								"star"
							],
							"variable": [
								{
									"key": "gist_id",
									"value": "aliquip sint",
									"description": "(Required) gist_id parameter"
								}
							]
						},
						"description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\""
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/star",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"star"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/star",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"star"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/star",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"star"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/star",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"star"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List starred gists",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists/starred?since=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								"starred"
							],
							"query": [
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "List the authenticated user's starred gists:"
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/starred?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										"starred"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/starred?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										"starred"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/starred?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										"starred"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/starred?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										"starred"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d\",\n  \"forks_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\n  \"commits_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\n  \"id\": \"aa5a315d61ae9438b18d\",\n  \"node_id\": \"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\n  \"git_pull_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n  \"git_push_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n  \"html_url\": \"https://gist.github.com/aa5a315d61ae9438b18d\",\n  \"files\": {\n   \"hello_world.rb\": {\n    \"filename\": \"hello_world.rb\",\n    \"type\": \"application/x-ruby\",\n    \"language\": \"Ruby\",\n    \"raw_url\": \"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\n    \"size\": 167\n   }\n  },\n  \"public\": true,\n  \"created_at\": \"2010-04-14T02:15:15Z\",\n  \"updated_at\": \"2011-06-20T11:34:15Z\",\n  \"description\": \"Hello World Examples\",\n  \"comments\": 0,\n  \"user\": null,\n  \"comments_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"truncated\": false\n }\n]"
						}
					]
				},
				{
					"name": "Delete a gist comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists/:gist_id/comments/:comment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								":gist_id",
								"comments",
								":comment_id"
							],
							"variable": [
								{
									"key": "gist_id",
									"value": "aliquip sint",
									"description": "(Required) gist_id parameter"
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "gist_id"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "gist_id"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "gist_id"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "gist_id"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a gist comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists/:gist_id/comments/:comment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								":gist_id",
								"comments",
								":comment_id"
							],
							"variable": [
								{
									"key": "gist_id",
									"value": "aliquip sint",
									"description": "(Required) gist_id parameter"
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Forbidden Gist",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "gist_id"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"block\": {\n  \"reason\": \"incididunt nulla ex quis\",\n  \"created_at\": \"velit in\",\n  \"html_url\": \"deserunt reprehenderit velit ullamco nostrud\"\n },\n \"message\": \"non\",\n \"documentation_url\": \"ex anim est quis esse\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "gist_id"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDExOkdpc3RDb21tZW50MQ==\",\n \"url\": \"https://api.github.com/gists/a6db0bec360bb87e9418/comments/1\",\n \"body\": \"Just commenting for the sake of commenting\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-18T23:23:56Z\",\n \"updated_at\": \"2011-04-18T23:23:56Z\",\n \"author_association\": \"collaborator\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "gist_id"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "gist_id"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a gist comment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"Body of the attachment\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/gists/:gist_id/comments/:comment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								":gist_id",
								"comments",
								":comment_id"
							],
							"variable": [
								{
									"key": "gist_id",
									"value": "aliquip sint",
									"description": "(Required) gist_id parameter"
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Body of the attachment\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "gist_id"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDExOkdpc3RDb21tZW50MQ==\",\n \"url\": \"https://api.github.com/gists/a6db0bec360bb87e9418/comments/1\",\n \"body\": \"Just commenting for the sake of commenting\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-18T23:23:56Z\",\n \"updated_at\": \"2011-04-18T23:23:56Z\",\n \"author_association\": \"collaborator\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Body of the attachment\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "gist_id"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List public gists",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists/public?since=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								"public"
							],
							"query": [
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "List public gists sorted by most recently updated to least recently updated.\n\nNote: With [pagination](https://developer.github.com/v3/#pagination), you can fetch up to 3000 gists. For example, you can fetch 100 pages with 30 gists per page or 30 pages with 100 gists per page."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/public?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										"public"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/public?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										"public"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/public?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										"public"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d\",\n  \"forks_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\n  \"commits_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\n  \"id\": \"aa5a315d61ae9438b18d\",\n  \"node_id\": \"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\n  \"git_pull_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n  \"git_push_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n  \"html_url\": \"https://gist.github.com/aa5a315d61ae9438b18d\",\n  \"files\": {\n   \"hello_world.rb\": {\n    \"filename\": \"hello_world.rb\",\n    \"type\": \"application/x-ruby\",\n    \"language\": \"Ruby\",\n    \"raw_url\": \"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\n    \"size\": 167\n   }\n  },\n  \"public\": true,\n  \"created_at\": \"2010-04-14T02:15:15Z\",\n  \"updated_at\": \"2011-06-20T11:34:15Z\",\n  \"description\": \"Hello World Examples\",\n  \"comments\": 0,\n  \"user\": null,\n  \"comments_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"truncated\": false\n }\n]"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/public?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										"public"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List gists for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/gists?since=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"gists"
							],
							"query": [
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists public gists for the specified user:"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/gists?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"gists"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d\",\n  \"forks_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\n  \"commits_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\n  \"id\": \"aa5a315d61ae9438b18d\",\n  \"node_id\": \"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\n  \"git_pull_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n  \"git_push_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n  \"html_url\": \"https://gist.github.com/aa5a315d61ae9438b18d\",\n  \"files\": {\n   \"hello_world.rb\": {\n    \"filename\": \"hello_world.rb\",\n    \"type\": \"application/x-ruby\",\n    \"language\": \"Ruby\",\n    \"raw_url\": \"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\n    \"size\": 167\n   }\n  },\n  \"public\": true,\n  \"created_at\": \"2010-04-14T02:15:15Z\",\n  \"updated_at\": \"2011-06-20T11:34:15Z\",\n  \"description\": \"Hello World Examples\",\n  \"comments\": 0,\n  \"user\": null,\n  \"comments_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"truncated\": false\n }\n]"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/gists?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"gists"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a gist",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists/:gist_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								":gist_id"
							],
							"variable": [
								{
									"key": "gist_id",
									"value": "aliquip sint",
									"description": "(Required) gist_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a gist",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists/:gist_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								":gist_id"
							],
							"variable": [
								{
									"key": "gist_id",
									"value": "aliquip sint",
									"description": "(Required) gist_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden Gist",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"block\": {\n  \"reason\": \"incididunt nulla ex quis\",\n  \"created_at\": \"velit in\",\n  \"html_url\": \"deserunt reprehenderit velit ullamco nostrud\"\n },\n \"message\": \"non\",\n \"documentation_url\": \"ex anim est quis esse\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d\",\n \"forks_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\n \"commits_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\n \"id\": \"aa5a315d61ae9438b18d\",\n \"node_id\": \"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\n \"git_pull_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n \"git_push_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n \"html_url\": \"https://gist.github.com/aa5a315d61ae9438b18d\",\n \"created_at\": \"2010-04-14T02:15:15Z\",\n \"updated_at\": \"2011-06-20T11:34:15Z\",\n \"description\": \"Hello World Examples\",\n \"comments\": 0,\n \"comments_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update a gist",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"laborum nostrud\""
						},
						"url": {
							"raw": "{{baseUrl}}/gists/:gist_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								":gist_id"
							],
							"variable": [
								{
									"key": "gist_id",
									"value": "aliquip sint",
									"description": "(Required) gist_id parameter"
								}
							]
						},
						"description": "Allows you to update or delete a gist file and rename gist files. Files from the previous version of the gist that aren't explicitly changed during an edit are unchanged."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"laborum nostrud\""
								},
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"laborum nostrud\""
								},
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d\",\n \"forks_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\n \"commits_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\n \"id\": \"aa5a315d61ae9438b18d\",\n \"node_id\": \"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\n \"git_pull_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n \"git_push_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n \"html_url\": \"https://gist.github.com/aa5a315d61ae9438b18d\",\n \"created_at\": \"2010-04-14T02:15:15Z\",\n \"updated_at\": \"2011-06-20T11:34:15Z\",\n \"description\": \"Hello World Examples\",\n \"comments\": 0,\n \"comments_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"laborum nostrud\""
								},
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List gist forks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists/:gist_id/forks?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								":gist_id",
								"forks"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "gist_id",
									"value": "aliquip sint",
									"description": "(Required) gist_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/forks?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"forks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/gists/dee9c42e4998ce2ea439\",\n  \"id\": \"dee9c42e4998ce2ea439\",\n  \"created_at\": \"2011-04-14T16:00:49Z\",\n  \"updated_at\": \"2011-04-14T16:00:49Z\"\n }\n]"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/forks?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"forks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/forks?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"forks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/forks?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"forks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Fork a gist",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists/:gist_id/forks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								":gist_id",
								"forks"
							],
							"variable": [
								{
									"key": "gist_id",
									"value": "aliquip sint",
									"description": "(Required) gist_id parameter"
								}
							]
						},
						"description": "**Note**: This was previously `/gists/:gist_id/fork`."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/forks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"forks"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/forks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"forks"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/forks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"forks"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/forks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"forks"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/forks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"forks"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d\",\n \"forks_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\n \"commits_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\n \"id\": \"aa5a315d61ae9438b18d\",\n \"node_id\": \"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\n \"git_pull_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n \"git_push_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n \"html_url\": \"https://gist.github.com/aa5a315d61ae9438b18d\",\n \"files\": {\n  \"hello_world.rb\": {\n   \"filename\": \"hello_world.rb\",\n   \"type\": \"application/x-ruby\",\n   \"language\": \"Ruby\",\n   \"raw_url\": \"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\n   \"size\": 167\n  }\n },\n \"public\": true,\n \"created_at\": \"2010-04-14T02:15:15Z\",\n \"updated_at\": \"2011-06-20T11:34:15Z\",\n \"description\": \"Hello World Examples\",\n \"comments\": 0,\n \"user\": null,\n \"comments_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\n \"owner\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"truncated\": false\n}"
						}
					]
				},
				{
					"name": "List gists for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists?since=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists"
							],
							"query": [
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Lists the authenticated user's gists or if called anonymously, this endpoint returns all public gists:"
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d\",\n  \"forks_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\n  \"commits_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\n  \"id\": \"aa5a315d61ae9438b18d\",\n  \"node_id\": \"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\n  \"git_pull_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n  \"git_push_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n  \"html_url\": \"https://gist.github.com/aa5a315d61ae9438b18d\",\n  \"files\": {\n   \"hello_world.rb\": {\n    \"filename\": \"hello_world.rb\",\n    \"type\": \"application/x-ruby\",\n    \"language\": \"Ruby\",\n    \"raw_url\": \"https://gist.githubusercontent.com/octocat/6cad326836d38bd3a7ae/raw/db9c55113504e46fa076e7df3a04ce592e2e86d8/hello_world.rb\",\n    \"size\": 167\n   }\n  },\n  \"public\": true,\n  \"created_at\": \"2010-04-14T02:15:15Z\",\n  \"updated_at\": \"2011-06-20T11:34:15Z\",\n  \"description\": \"Hello World Examples\",\n  \"comments\": 0,\n  \"user\": null,\n  \"comments_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"truncated\": false\n }\n]"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a gist",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"files\": \"tempor dolor aute elit incididunt\",\n    \"description\": \"Example Ruby script\",\n    \"public\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/gists",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists"
							]
						},
						"description": "Allows you to add a new gist with one or more files.\n\n**Note:** Don't name your files \"gistfile\" with a numerical suffix. This is the format of the automatic naming scheme that Gist uses internally."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"files\": \"tempor dolor aute elit incididunt\",\n    \"description\": \"Example Ruby script\",\n    \"public\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"files\": \"tempor dolor aute elit incididunt\",\n    \"description\": \"Example Ruby script\",\n    \"public\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"files\": \"tempor dolor aute elit incididunt\",\n    \"description\": \"Example Ruby script\",\n    \"public\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"files\": \"tempor dolor aute elit incididunt\",\n    \"description\": \"Example Ruby script\",\n    \"public\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d\",\n \"forks_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\n \"commits_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\n \"id\": \"aa5a315d61ae9438b18d\",\n \"node_id\": \"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\n \"git_pull_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n \"git_push_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n \"html_url\": \"https://gist.github.com/aa5a315d61ae9438b18d\",\n \"created_at\": \"2010-04-14T02:15:15Z\",\n \"updated_at\": \"2011-06-20T11:34:15Z\",\n \"description\": \"Hello World Examples\",\n \"comments\": 0,\n \"comments_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"files\": \"tempor dolor aute elit incididunt\",\n    \"description\": \"Example Ruby script\",\n    \"public\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gists",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List gist commits",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists/:gist_id/commits?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								":gist_id",
								"commits"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "gist_id",
									"value": "aliquip sint",
									"description": "(Required) gist_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/commits?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"commits"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/commits?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"commits"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/commits?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"commits"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/commits?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"commits"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f\",\n  \"version\": \"57a7f021a713b1c5a6a199b54cc514735d2d462f\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"change_status\": {\n   \"deletions\": 0,\n   \"additions\": 180,\n   \"total\": 180\n  },\n  \"committed_at\": \"2010-04-14T02:15:15Z\"\n }\n]"
						}
					]
				},
				{
					"name": "Create a gist comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"Body of the attachment\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/gists/:gist_id/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								":gist_id",
								"comments"
							],
							"variable": [
								{
									"key": "gist_id",
									"value": "aliquip sint",
									"description": "(Required) gist_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Body of the attachment\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Body of the attachment\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDExOkdpc3RDb21tZW50MQ==\",\n \"url\": \"https://api.github.com/gists/a6db0bec360bb87e9418/comments/1\",\n \"body\": \"Just commenting for the sake of commenting\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-18T23:23:56Z\",\n \"updated_at\": \"2011-04-18T23:23:56Z\",\n \"author_association\": \"collaborator\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Body of the attachment\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Body of the attachment\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments"
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List gist comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists/:gist_id/comments?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								":gist_id",
								"comments"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "gist_id",
									"value": "aliquip sint",
									"description": "(Required) gist_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDExOkdpc3RDb21tZW50MQ==\",\n  \"url\": \"https://api.github.com/gists/a6db0bec360bb87e9418/comments/1\",\n  \"body\": \"Just commenting for the sake of commenting\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"created_at\": \"2011-04-18T23:23:56Z\",\n  \"updated_at\": \"2011-04-18T23:23:56Z\",\n  \"author_association\": \"collaborator\"\n }\n]"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/comments?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										"comments"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "gist_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get a gist revision",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gists/:gist_id/:sha",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gists",
								":gist_id",
								":sha"
							],
							"variable": [
								{
									"key": "gist_id",
									"value": "aliquip sint",
									"description": "(Required) gist_id parameter"
								},
								{
									"key": "sha",
									"value": "aliquip sint",
									"description": "(Required) sha parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/:sha",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										":sha"
									],
									"variable": [
										{
											"key": "gist_id"
										},
										{
											"key": "sha"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/:sha",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										":sha"
									],
									"variable": [
										{
											"key": "gist_id"
										},
										{
											"key": "sha"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/57a7f021a713b1c5a6a199b54cc514735d2d462f\",\n \"forks_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/forks\",\n \"commits_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/commits\",\n \"id\": \"aa5a315d61ae9438b18d\",\n \"node_id\": \"MDQ6R2lzdGFhNWEzMTVkNjFhZTk0MzhiMThk\",\n \"git_pull_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n \"git_push_url\": \"https://gist.github.com/aa5a315d61ae9438b18d.git\",\n \"html_url\": \"https://gist.github.com/aa5a315d61ae9438b18d\",\n \"created_at\": \"2010-04-14T02:15:15Z\",\n \"updated_at\": \"2011-06-20T11:34:15Z\",\n \"description\": \"Hello World Examples\",\n \"comments\": 0,\n \"comments_url\": \"https://api.github.com/gists/aa5a315d61ae9438b18d/comments/\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/:sha",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										":sha"
									],
									"variable": [
										{
											"key": "gist_id"
										},
										{
											"key": "sha"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gists/:gist_id/:sha",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gists",
										":gist_id",
										":sha"
									],
									"variable": [
										{
											"key": "gist_id"
										},
										{
											"key": "sha"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				}
			],
			"description": "View, modify your gists.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "git",
			"item": [
				{
					"name": "Get a tree",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/git/trees/:tree_sha?recursive=aliquip sint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"git",
								"trees",
								":tree_sha"
							],
							"query": [
								{
									"key": "recursive",
									"value": "aliquip sint",
									"description": "Setting this parameter to any value returns the objects or subtrees referenced by the tree specified in `:tree_sha`. For example, setting `recursive` to any of the following will enable returning objects or subtrees: `0`, `1`, `\"true\"`, and `\"false\"`. Omit this parameter to prevent recursively returning objects or subtrees."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "tree_sha",
									"value": "aliquip sint",
									"description": "(Required) tree_sha parameter"
								}
							]
						},
						"description": "Returns a single tree using the SHA1 value for that tree.\n\nIf `truncated` is `true` in the response then the number of items in the `tree` array exceeded our maximum limit. If you need to fetch more items, use the non-recursive method of fetching trees, and fetch one sub-tree at a time."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/trees/:tree_sha?recursive=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"trees",
										":tree_sha"
									],
									"query": [
										{
											"key": "recursive",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "tree_sha"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/trees/:tree_sha?recursive=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"trees",
										":tree_sha"
									],
									"query": [
										{
											"key": "recursive",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "tree_sha"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/trees/:tree_sha?recursive=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"trees",
										":tree_sha"
									],
									"query": [
										{
											"key": "recursive",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "tree_sha"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sha\": \"9fb037999f264ba9a7fc6274d15fa3ae2ab98312\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/trees/9fb037999f264ba9a7fc6274d15fa3ae2ab98312\",\n \"tree\": [\n  {\n   \"path\": \"file.rb\",\n   \"mode\": \"100644\",\n   \"type\": \"blob\",\n   \"size\": 30,\n   \"sha\": \"44b4fc6d56897b048c772eb4087f854f46256132\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs/44b4fc6d56897b048c772eb4087f854f46256132\"\n  },\n  {\n   \"path\": \"subdir\",\n   \"mode\": \"040000\",\n   \"type\": \"tree\",\n   \"sha\": \"f484d249c660418515fb01c2b9662073663c242e\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs/f484d249c660418515fb01c2b9662073663c242e\"\n  },\n  {\n   \"path\": \"exec_file\",\n   \"mode\": \"100755\",\n   \"type\": \"blob\",\n   \"size\": 75,\n   \"sha\": \"45b983be36b73c0788dc9cbcb76cbb80fc7bb057\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs/45b983be36b73c0788dc9cbcb76cbb80fc7bb057\"\n  }\n ],\n \"truncated\": false\n}"
						}
					]
				},
				{
					"name": "List matching references",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/git/matching-refs/:ref?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"git",
								"matching-refs",
								":ref"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "ref",
									"value": "aliquip sint",
									"description": "(Required) ref+ parameter"
								}
							]
						},
						"description": "Returns an array of references from your Git database that match the supplied name. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't exist in the repository, but existing refs start with `:ref`, they will be returned as an array.\n\nWhen you use this endpoint without providing a `:ref`, it will return an array of all the references from your Git database, including notes and stashes if they exist on the server. Anything in the namespace is returned, not just `heads` and `tags`.\n\n**Note:** You need to explicitly [request a pull request](https://developer.github.com/v3/pulls/#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://developer.github.com/v3/git/#checking-mergeability-of-pull-requests)\".\n\nIf you request matching references for a branch named `feature` but the branch `feature` doesn't exist, the response can still include other matching head refs that start with the word `feature`, such as `featureA` and `featureB`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/matching-refs/:ref?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"matching-refs",
										":ref"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"ref\": \"refs/heads/feature-a\",\n  \"node_id\": \"MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlLWE=\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs/heads/feature-a\",\n  \"object\": {\n   \"type\": \"commit\",\n   \"sha\": \"aa218f56b14c9653891f9e74264a383fa43fefbd\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd\"\n  }\n },\n {\n  \"ref\": \"refs/heads/feature-b\",\n  \"node_id\": \"MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlLWI=\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs/heads/feature-b\",\n  \"object\": {\n   \"type\": \"commit\",\n   \"sha\": \"612077ae6dffb4d2fbd8ce0cccaa58893b07b5ac\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/612077ae6dffb4d2fbd8ce0cccaa58893b07b5ac\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Delete a reference",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/git/refs/:ref",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"git",
								"refs",
								":ref"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "ref",
									"value": "aliquip sint",
									"description": "(Required) ref+ parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/refs/:ref",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"refs",
										":ref"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/refs/:ref",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"refs",
										":ref"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Update a reference",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"sha\": \"aa218f56b14c9653891f9e74264a383fa43fefbd\",\n    \"force\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/git/refs/:ref",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"git",
								"refs",
								":ref"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "ref",
									"value": "aliquip sint",
									"description": "(Required) ref+ parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sha\": \"aa218f56b14c9653891f9e74264a383fa43fefbd\",\n    \"force\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/refs/:ref",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"refs",
										":ref"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"ref\": \"refs/heads/featureA\",\n \"node_id\": \"MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA\",\n \"object\": {\n  \"type\": \"commit\",\n  \"sha\": \"aa218f56b14c9653891f9e74264a383fa43fefbd\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd\"\n }\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"sha\": \"aa218f56b14c9653891f9e74264a383fa43fefbd\",\n    \"force\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/refs/:ref",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"refs",
										":ref"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a commit",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"my commit message\",\n    \"author\": {\n        \"name\": \"Mona Octocat\",\n        \"email\": \"octocat@github.com\",\n        \"date\": \"2008-07-09T16:13:30+12:00\"\n    },\n    \"parents\": [\n        \"7d1b31e74ee336d15cbd21741bc88a537ed063a0\"\n    ],\n    \"tree\": \"827efc6d56897b048c772eb4087f854f46256132\",\n    \"signature\": \"-----BEGIN PGP SIGNATURE-----\\n\\niQIzBAABAQAdFiEESn/54jMNIrGSE6Tp6cQjvhfv7nAFAlnT71cACgkQ6cQjvhfv\\n7nCWwA//XVqBKWO0zF+bZl6pggvky3Oc2j1pNFuRWZ29LXpNuD5WUGXGG209B0hI\\nDkmcGk19ZKUTnEUJV2Xd0R7AW01S/YSub7OYcgBkI7qUE13FVHN5ln1KvH2all2n\\n2+JCV1HcJLEoTjqIFZSSu/sMdhkLQ9/NsmMAzpf/iIM0nQOyU4YRex9eD1bYj6nA\\nOQPIDdAuaTQj1gFPHYLzM4zJnCqGdRlg0sOM/zC5apBNzIwlgREatOYQSCfCKV7k\\nnrU34X8b9BzQaUx48Qa+Dmfn5KQ8dl27RNeWAqlkuWyv3pUauH9UeYW+KyuJeMkU\\n+NyHgAsWFaCFl23kCHThbLStMZOYEnGagrd0hnm1TPS4GJkV4wfYMwnI4KuSlHKB\\njHl3Js9vNzEUQipQJbgCgTiWvRJoK3ENwBTMVkKHaqT4x9U4Jk/XZB6Q8MA09ezJ\\n3QgiTjTAGcum9E9QiJqMYdWQPWkaBIRRz5cET6HPB48YNXAAUsfmuYsGrnVLYbG+\\nUpC6I97VybYHTy2O9XSGoaLeMI9CsFn38ycAxxbWagk5mhclNTP5mezIq6wKSwmr\\nX11FW3n1J23fWZn5HJMBsRnUCgzqzX3871IqLYHqRJ/bpZ4h20RhTyPj5c/z7QXp\\neSakNQMfbbMcljkha+ZMuVQX1K9aRlVqbmv3ZMWh+OijLYVU2bc=\\n=5Io4\\n-----END PGP SIGNATURE-----\\n\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/git/commits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"git",
								"commits"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Creates a new Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\nIn this example, the payload of the signature would be:\n\n\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"my commit message\",\n    \"author\": {\n        \"name\": \"Mona Octocat\",\n        \"email\": \"octocat@github.com\",\n        \"date\": \"2008-07-09T16:13:30+12:00\"\n    },\n    \"parents\": [\n        \"7d1b31e74ee336d15cbd21741bc88a537ed063a0\"\n    ],\n    \"tree\": \"827efc6d56897b048c772eb4087f854f46256132\",\n    \"signature\": \"-----BEGIN PGP SIGNATURE-----\\n\\niQIzBAABAQAdFiEESn/54jMNIrGSE6Tp6cQjvhfv7nAFAlnT71cACgkQ6cQjvhfv\\n7nCWwA//XVqBKWO0zF+bZl6pggvky3Oc2j1pNFuRWZ29LXpNuD5WUGXGG209B0hI\\nDkmcGk19ZKUTnEUJV2Xd0R7AW01S/YSub7OYcgBkI7qUE13FVHN5ln1KvH2all2n\\n2+JCV1HcJLEoTjqIFZSSu/sMdhkLQ9/NsmMAzpf/iIM0nQOyU4YRex9eD1bYj6nA\\nOQPIDdAuaTQj1gFPHYLzM4zJnCqGdRlg0sOM/zC5apBNzIwlgREatOYQSCfCKV7k\\nnrU34X8b9BzQaUx48Qa+Dmfn5KQ8dl27RNeWAqlkuWyv3pUauH9UeYW+KyuJeMkU\\n+NyHgAsWFaCFl23kCHThbLStMZOYEnGagrd0hnm1TPS4GJkV4wfYMwnI4KuSlHKB\\njHl3Js9vNzEUQipQJbgCgTiWvRJoK3ENwBTMVkKHaqT4x9U4Jk/XZB6Q8MA09ezJ\\n3QgiTjTAGcum9E9QiJqMYdWQPWkaBIRRz5cET6HPB48YNXAAUsfmuYsGrnVLYbG+\\nUpC6I97VybYHTy2O9XSGoaLeMI9CsFn38ycAxxbWagk5mhclNTP5mezIq6wKSwmr\\nX11FW3n1J23fWZn5HJMBsRnUCgzqzX3871IqLYHqRJ/bpZ4h20RhTyPj5c/z7QXp\\neSakNQMfbbMcljkha+ZMuVQX1K9aRlVqbmv3ZMWh+OijLYVU2bc=\\n=5Io4\\n-----END PGP SIGNATURE-----\\n\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/commits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"commits"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sha\": \"7638417db6d59f3c431d3e1f261cc637155684cd\",\n \"node_id\": \"MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\",\n \"author\": {\n  \"date\": \"2014-11-07T22:01:45Z\",\n  \"name\": \"Monalisa Octocat\",\n  \"email\": \"octocat@github.com\"\n },\n \"committer\": {\n  \"date\": \"2014-11-07T22:01:45Z\",\n  \"name\": \"Monalisa Octocat\",\n  \"email\": \"octocat@github.com\"\n },\n \"message\": \"my commit message\",\n \"tree\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees/827efc6d56897b048c772eb4087f854f46256132\",\n  \"sha\": \"827efc6d56897b048c772eb4087f854f46256132\"\n },\n \"parents\": [\n  {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/7d1b31e74ee336d15cbd21741bc88a537ed063a0\",\n   \"sha\": \"7d1b31e74ee336d15cbd21741bc88a537ed063a0\"\n  }\n ],\n \"verification\": {\n  \"verified\": false,\n  \"reason\": \"unsigned\",\n  \"signature\": null,\n  \"payload\": null\n }\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"my commit message\",\n    \"author\": {\n        \"name\": \"Mona Octocat\",\n        \"email\": \"octocat@github.com\",\n        \"date\": \"2008-07-09T16:13:30+12:00\"\n    },\n    \"parents\": [\n        \"7d1b31e74ee336d15cbd21741bc88a537ed063a0\"\n    ],\n    \"tree\": \"827efc6d56897b048c772eb4087f854f46256132\",\n    \"signature\": \"-----BEGIN PGP SIGNATURE-----\\n\\niQIzBAABAQAdFiEESn/54jMNIrGSE6Tp6cQjvhfv7nAFAlnT71cACgkQ6cQjvhfv\\n7nCWwA//XVqBKWO0zF+bZl6pggvky3Oc2j1pNFuRWZ29LXpNuD5WUGXGG209B0hI\\nDkmcGk19ZKUTnEUJV2Xd0R7AW01S/YSub7OYcgBkI7qUE13FVHN5ln1KvH2all2n\\n2+JCV1HcJLEoTjqIFZSSu/sMdhkLQ9/NsmMAzpf/iIM0nQOyU4YRex9eD1bYj6nA\\nOQPIDdAuaTQj1gFPHYLzM4zJnCqGdRlg0sOM/zC5apBNzIwlgREatOYQSCfCKV7k\\nnrU34X8b9BzQaUx48Qa+Dmfn5KQ8dl27RNeWAqlkuWyv3pUauH9UeYW+KyuJeMkU\\n+NyHgAsWFaCFl23kCHThbLStMZOYEnGagrd0hnm1TPS4GJkV4wfYMwnI4KuSlHKB\\njHl3Js9vNzEUQipQJbgCgTiWvRJoK3ENwBTMVkKHaqT4x9U4Jk/XZB6Q8MA09ezJ\\n3QgiTjTAGcum9E9QiJqMYdWQPWkaBIRRz5cET6HPB48YNXAAUsfmuYsGrnVLYbG+\\nUpC6I97VybYHTy2O9XSGoaLeMI9CsFn38ycAxxbWagk5mhclNTP5mezIq6wKSwmr\\nX11FW3n1J23fWZn5HJMBsRnUCgzqzX3871IqLYHqRJ/bpZ4h20RhTyPj5c/z7QXp\\neSakNQMfbbMcljkha+ZMuVQX1K9aRlVqbmv3ZMWh+OijLYVU2bc=\\n=5Io4\\n-----END PGP SIGNATURE-----\\n\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/commits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"commits"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"my commit message\",\n    \"author\": {\n        \"name\": \"Mona Octocat\",\n        \"email\": \"octocat@github.com\",\n        \"date\": \"2008-07-09T16:13:30+12:00\"\n    },\n    \"parents\": [\n        \"7d1b31e74ee336d15cbd21741bc88a537ed063a0\"\n    ],\n    \"tree\": \"827efc6d56897b048c772eb4087f854f46256132\",\n    \"signature\": \"-----BEGIN PGP SIGNATURE-----\\n\\niQIzBAABAQAdFiEESn/54jMNIrGSE6Tp6cQjvhfv7nAFAlnT71cACgkQ6cQjvhfv\\n7nCWwA//XVqBKWO0zF+bZl6pggvky3Oc2j1pNFuRWZ29LXpNuD5WUGXGG209B0hI\\nDkmcGk19ZKUTnEUJV2Xd0R7AW01S/YSub7OYcgBkI7qUE13FVHN5ln1KvH2all2n\\n2+JCV1HcJLEoTjqIFZSSu/sMdhkLQ9/NsmMAzpf/iIM0nQOyU4YRex9eD1bYj6nA\\nOQPIDdAuaTQj1gFPHYLzM4zJnCqGdRlg0sOM/zC5apBNzIwlgREatOYQSCfCKV7k\\nnrU34X8b9BzQaUx48Qa+Dmfn5KQ8dl27RNeWAqlkuWyv3pUauH9UeYW+KyuJeMkU\\n+NyHgAsWFaCFl23kCHThbLStMZOYEnGagrd0hnm1TPS4GJkV4wfYMwnI4KuSlHKB\\njHl3Js9vNzEUQipQJbgCgTiWvRJoK3ENwBTMVkKHaqT4x9U4Jk/XZB6Q8MA09ezJ\\n3QgiTjTAGcum9E9QiJqMYdWQPWkaBIRRz5cET6HPB48YNXAAUsfmuYsGrnVLYbG+\\nUpC6I97VybYHTy2O9XSGoaLeMI9CsFn38ycAxxbWagk5mhclNTP5mezIq6wKSwmr\\nX11FW3n1J23fWZn5HJMBsRnUCgzqzX3871IqLYHqRJ/bpZ4h20RhTyPj5c/z7QXp\\neSakNQMfbbMcljkha+ZMuVQX1K9aRlVqbmv3ZMWh+OijLYVU2bc=\\n=5Io4\\n-----END PGP SIGNATURE-----\\n\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/commits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"commits"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get a tag",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/git/tags/:tag_sha",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"git",
								"tags",
								":tag_sha"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "tag_sha",
									"value": "aliquip sint",
									"description": "(Required) tag_sha parameter"
								}
							]
						},
						"description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |"
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/tags/:tag_sha",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"tags",
										":tag_sha"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "tag_sha"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/tags/:tag_sha",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"tags",
										":tag_sha"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "tag_sha"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"node_id\": \"MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==\",\n \"tag\": \"v0.0.1\",\n \"sha\": \"940bd336248efae0f9ee5bc7b2d5c985887b16ac\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac\",\n \"message\": \"initial version\",\n \"tagger\": {\n  \"name\": \"Monalisa Octocat\",\n  \"email\": \"octocat@github.com\",\n  \"date\": \"2014-11-07T22:01:45Z\"\n },\n \"object\": {\n  \"type\": \"commit\",\n  \"sha\": \"c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\"\n },\n \"verification\": {\n  \"verified\": false,\n  \"reason\": \"unsigned\",\n  \"signature\": null,\n  \"payload\": null\n }\n}"
						}
					]
				},
				{
					"name": "Create a tree",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"base_tree\": \"9fb037999f264ba9a7fc6274d15fa3ae2ab98312\",\n    \"tree\": [\n        {\n            \"path\": \"file.rb\",\n            \"mode\": \"100644\",\n            \"type\": \"blob\",\n            \"sha\": \"44b4fc6d56897b048c772eb4087f854f46256132\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/git/trees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"git",
								"trees"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "The tree creation API accepts nested entries. If you specify both a tree and a nested path modifying that tree, this endpoint will overwrite the contents of the tree with the new path contents, and create a new tree structure.\n\nIf you use this endpoint to add, delete, or modify the file contents in a tree, you will need to commit the tree and then update a branch to point to the commit. For more information see \"[Create a commit](https://developer.github.com/v3/git/commits/#create-a-commit)\" and \"[Update a reference](https://developer.github.com/v3/git/refs/#update-a-reference).\""
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"base_tree\": \"9fb037999f264ba9a7fc6274d15fa3ae2ab98312\",\n    \"tree\": [\n        {\n            \"path\": \"file.rb\",\n            \"mode\": \"100644\",\n            \"type\": \"blob\",\n            \"sha\": \"44b4fc6d56897b048c772eb4087f854f46256132\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/trees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"trees"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"base_tree\": \"9fb037999f264ba9a7fc6274d15fa3ae2ab98312\",\n    \"tree\": [\n        {\n            \"path\": \"file.rb\",\n            \"mode\": \"100644\",\n            \"type\": \"blob\",\n            \"sha\": \"44b4fc6d56897b048c772eb4087f854f46256132\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/trees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"trees"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"base_tree\": \"9fb037999f264ba9a7fc6274d15fa3ae2ab98312\",\n    \"tree\": [\n        {\n            \"path\": \"file.rb\",\n            \"mode\": \"100644\",\n            \"type\": \"blob\",\n            \"sha\": \"44b4fc6d56897b048c772eb4087f854f46256132\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/trees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"trees"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"base_tree\": \"9fb037999f264ba9a7fc6274d15fa3ae2ab98312\",\n    \"tree\": [\n        {\n            \"path\": \"file.rb\",\n            \"mode\": \"100644\",\n            \"type\": \"blob\",\n            \"sha\": \"44b4fc6d56897b048c772eb4087f854f46256132\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/trees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"trees"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sha\": \"cd8274d15fa3ae2ab983129fb037999f264ba9a7\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/trees/cd8274d15fa3ae2ab983129fb037999f264ba9a7\",\n \"tree\": [\n  {\n   \"path\": \"file.rb\",\n   \"mode\": \"100644\",\n   \"type\": \"blob\",\n   \"size\": 132,\n   \"sha\": \"7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs/7c258a9869f33c1e1e1f74fbb32f07c86cb5a75b\"\n  }\n ],\n \"truncated\": true\n}"
						}
					]
				},
				{
					"name": "Create a reference",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ref\": \"refs/heads/featureA\",\n    \"sha\": \"aa218f56b14c9653891f9e74264a383fa43fefbd\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/git/refs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"git",
								"refs"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Creates a reference for your repository. You are unable to create new references for empty repositories, even if the commit SHA-1 hash used exists. Empty repositories are repositories without branches."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ref\": \"refs/heads/featureA\",\n    \"sha\": \"aa218f56b14c9653891f9e74264a383fa43fefbd\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/refs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"refs"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ref\": \"refs/heads/featureA\",\n    \"sha\": \"aa218f56b14c9653891f9e74264a383fa43fefbd\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/refs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"refs"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"ref\": \"refs/heads/featureA\",\n \"node_id\": \"MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA\",\n \"object\": {\n  \"type\": \"commit\",\n  \"sha\": \"aa218f56b14c9653891f9e74264a383fa43fefbd\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd\"\n }\n}"
						}
					]
				},
				{
					"name": "Create a tag object",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tag\": \"v0.0.1\",\n    \"message\": \"initial version\",\n    \"object\": \"c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\",\n    \"type\": \"commit\",\n    \"tagger\": {\n        \"name\": \"Monalisa Octocat\",\n        \"email\": \"octocat@github.com\",\n        \"date\": \"2011-06-17T14:53:35-07:00\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/git/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"git",
								"tags"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Note that creating a tag object does not create the reference that makes a tag in Git. If you want to create an annotated tag in Git, you have to do this call to create the tag object, and then [create](https://developer.github.com/v3/git/refs/#create-a-reference) the `refs/tags/[tag]` reference. If you want to create a lightweight tag, you only have to [create](https://developer.github.com/v3/git/refs/#create-a-reference) the tag reference - this call would be unnecessary.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |"
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tag\": \"v0.0.1\",\n    \"message\": \"initial version\",\n    \"object\": \"c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\",\n    \"type\": \"commit\",\n    \"tagger\": {\n        \"name\": \"Monalisa Octocat\",\n        \"email\": \"octocat@github.com\",\n        \"date\": \"2011-06-17T14:53:35-07:00\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"tags"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tag\": \"v0.0.1\",\n    \"message\": \"initial version\",\n    \"object\": \"c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\",\n    \"type\": \"commit\",\n    \"tagger\": {\n        \"name\": \"Monalisa Octocat\",\n        \"email\": \"octocat@github.com\",\n        \"date\": \"2011-06-17T14:53:35-07:00\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"tags"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"node_id\": \"MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw==\",\n \"tag\": \"v0.0.1\",\n \"sha\": \"940bd336248efae0f9ee5bc7b2d5c985887b16ac\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac\",\n \"message\": \"initial version\",\n \"tagger\": {\n  \"name\": \"Monalisa Octocat\",\n  \"email\": \"octocat@github.com\",\n  \"date\": \"2014-11-07T22:01:45Z\"\n },\n \"object\": {\n  \"type\": \"commit\",\n  \"sha\": \"c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/c3d0be41ecbe669545ee3e94d31ed9a4bc91ee3c\"\n },\n \"verification\": {\n  \"verified\": false,\n  \"reason\": \"unsigned\",\n  \"signature\": null,\n  \"payload\": null\n }\n}"
						}
					]
				},
				{
					"name": "Get a reference",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/git/ref/:ref",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"git",
								"ref",
								":ref"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "ref",
									"value": "aliquip sint",
									"description": "(Required) ref+ parameter"
								}
							]
						},
						"description": "Returns a single reference from your Git database. The `:ref` in the URL must be formatted as `heads/<branch name>` for branches and `tags/<tag name>` for tags. If the `:ref` doesn't match an existing ref, a `404` is returned.\n\n**Note:** You need to explicitly [request a pull request](https://developer.github.com/v3/pulls/#get-a-pull-request) to trigger a test merge commit, which checks the mergeability of pull requests. For more information, see \"[Checking mergeability of pull requests](https://developer.github.com/v3/git/#checking-mergeability-of-pull-requests)\"."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/ref/:ref",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"ref",
										":ref"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/ref/:ref",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"ref",
										":ref"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"ref\": \"refs/heads/featureA\",\n \"node_id\": \"MDM6UmVmcmVmcy9oZWFkcy9mZWF0dXJlQQ==\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs/heads/featureA\",\n \"object\": {\n  \"type\": \"commit\",\n  \"sha\": \"aa218f56b14c9653891f9e74264a383fa43fefbd\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/aa218f56b14c9653891f9e74264a383fa43fefbd\"\n }\n}"
						}
					]
				},
				{
					"name": "Create a blob",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Content of the blob\",\n    \"encoding\": \"utf-8\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/git/blobs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"git",
								"blobs"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Content of the blob\",\n    \"encoding\": \"utf-8\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/blobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"blobs"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15\",\n \"sha\": \"3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Content of the blob\",\n    \"encoding\": \"utf-8\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/blobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"blobs"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Content of the blob\",\n    \"encoding\": \"utf-8\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/blobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"blobs"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Content of the blob\",\n    \"encoding\": \"utf-8\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/blobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"blobs"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Content of the blob\",\n    \"encoding\": \"utf-8\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/blobs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"blobs"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get a blob",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/git/blobs/:file_sha",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"git",
								"blobs",
								":file_sha"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "file_sha",
									"value": "aliquip sint",
									"description": "(Required) file_sha parameter"
								}
							]
						},
						"description": "The `content` in the response will always be Base64 encoded.\n\n_Note_: This API supports blobs up to 100 megabytes in size."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/blobs/:file_sha",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"blobs",
										":file_sha"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "file_sha"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": \"Q29udGVudCBvZiB0aGUgYmxvYg==\",\n \"encoding\": \"base64\",\n \"url\": \"https://api.github.com/repos/octocat/example/git/blobs/3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15\",\n \"sha\": \"3a0f86fb8db8eea7ccbb9a95f325ddbedfb25e15\",\n \"size\": 19,\n \"node_id\": \"Q29udGVudCBvZiB0aGUgYmxvYg==\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/blobs/:file_sha",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"blobs",
										":file_sha"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "file_sha"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/blobs/:file_sha",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"blobs",
										":file_sha"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "file_sha"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/blobs/:file_sha",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"blobs",
										":file_sha"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "file_sha"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get a commit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/git/commits/:commit_sha",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"git",
								"commits",
								":commit_sha"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "commit_sha",
									"value": "aliquip sint",
									"description": "(Required) commit_sha+ parameter"
								}
							]
						},
						"description": "Gets a Git [commit object](https://git-scm.com/book/en/v1/Git-Internals-Git-Objects#Commit-Objects).\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/commits/:commit_sha",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"commits",
										":commit_sha"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "commit_sha"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sha\": \"7638417db6d59f3c431d3e1f261cc637155684cd\",\n \"node_id\": \"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\",\n \"author\": {\n  \"date\": \"2014-11-07T22:01:45Z\",\n  \"name\": \"Monalisa Octocat\",\n  \"email\": \"octocat@github.com\"\n },\n \"committer\": {\n  \"date\": \"2014-11-07T22:01:45Z\",\n  \"name\": \"Monalisa Octocat\",\n  \"email\": \"octocat@github.com\"\n },\n \"message\": \"added readme, because im a good github citizen\",\n \"tree\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb\",\n  \"sha\": \"691272480426f78a0138979dd3ce63b77f706feb\"\n },\n \"parents\": [\n  {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\n   \"sha\": \"1acc419d4d6a9ce985db7be48c6349a0475975b5\"\n  }\n ],\n \"verification\": {\n  \"verified\": false,\n  \"reason\": \"unsigned\",\n  \"signature\": null,\n  \"payload\": null\n }\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/git/commits/:commit_sha",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"git",
										"commits",
										":commit_sha"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "commit_sha"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				}
			],
			"description": "Raw Git functionality.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "gitignore",
			"item": [
				{
					"name": "Get a gitignore template",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gitignore/templates/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gitignore",
								"templates",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": "aliquip sint",
									"description": "(Required) name parameter"
								}
							]
						},
						"description": "The API also allows fetching the source of a single template.\nUse the raw [media type](https://developer.github.com/v3/media/) to get the raw contents."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gitignore/templates/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gitignore",
										"templates",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"C\",\n \"source\": \"# Object files\\n*.o\\n\\n# Libraries\\n*.lib\\n*.a\\n\\n# Shared objects (inc. Windows DLLs)\\n*.dll\\n*.so\\n*.so.*\\n*.dylib\\n\\n# Executables\\n*.exe\\n*.out\\n*.app\\n\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gitignore/templates/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gitignore",
										"templates",
										":name"
									],
									"variable": [
										{
											"key": "name"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all gitignore templates",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gitignore/templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gitignore",
								"templates"
							]
						},
						"description": "List all templates available to pass as an option when [creating a repository](https://developer.github.com/v3/repos/#create-a-repository-for-the-authenticated-user)."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gitignore/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gitignore",
										"templates"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/gitignore/templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"gitignore",
										"templates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n \"Actionscript\",\n \"Android\",\n \"AppceleratorTitanium\",\n \"Autotools\",\n \"Bancha\",\n \"C\",\n \"C++\"\n]"
						}
					]
				}
			],
			"description": "View gitignore templates",
			"protocolProfileBehavior": {}
		},
		{
			"name": "interactions",
			"item": [
				{
					"name": "Get interaction restrictions for a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/interaction-limits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"interaction-limits"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Shows which group of GitHub users can interact with this repository and when the restriction expires. If there are no restrictions, you will see an empty response."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/interaction-limits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"interaction-limits"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"limit\": \"collaborators_only\",\n \"origin\": \"repository\",\n \"expires_at\": \"2018-08-17T04:18:39Z\"\n}"
						}
					]
				},
				{
					"name": "Set interaction restrictions for a repository",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"limit\": \"collaborators_only\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/interaction-limits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"interaction-limits"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Temporarily restricts interactions to certain GitHub users within the given repository. You must have owner or admin access to set restrictions."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"limit\": \"collaborators_only\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/interaction-limits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"interaction-limits"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"limit\": \"collaborators_only\",\n \"origin\": \"repository\",\n \"expires_at\": \"2018-08-17T04:18:39Z\"\n}"
						}
					]
				},
				{
					"name": "Remove interaction restrictions for a repository",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/interaction-limits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"interaction-limits"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Removes all interaction restrictions from the given repository. You must have owner or admin access to remove restrictions."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/interaction-limits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"interaction-limits"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Set interaction restrictions for an organization",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"limit\": \"collaborators_only\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/interaction-limits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"interaction-limits"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Temporarily restricts interactions to certain GitHub users in any public repository in the given organization. You must be an organization owner to set these restrictions."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"limit\": \"collaborators_only\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/interaction-limits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"interaction-limits"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"limit\": \"collaborators_only\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/interaction-limits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"interaction-limits"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"limit\": \"collaborators_only\",\n \"origin\": \"organization\",\n \"expires_at\": \"2018-08-17T04:18:39Z\"\n}"
						}
					]
				},
				{
					"name": "Remove interaction restrictions for an organization",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/interaction-limits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"interaction-limits"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Removes all interaction restrictions from public repositories in the given organization. You must be an organization owner to remove restrictions."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/interaction-limits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"interaction-limits"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get interaction restrictions for an organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/interaction-limits",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"interaction-limits"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Shows which group of GitHub users can interact with this organization and when the restriction expires. If there are no restrictions, you will see an empty response."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/interaction-limits",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"interaction-limits"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"limit\": \"collaborators_only\",\n \"origin\": \"organization\",\n \"expires_at\": \"2018-08-17T04:18:39Z\"\n}"
						}
					]
				}
			],
			"description": "Owner or admin management of users interactons.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "issues",
			"item": [
				{
					"name": "List organization issues assigned to the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/issues?filter=assigned&state=all&labels=aliquip sint&sort=updated&direction=desc&since=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"issues"
							],
							"query": [
								{
									"key": "filter",
									"value": "assigned",
									"description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation"
								},
								{
									"key": "state",
									"value": "all",
									"description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`."
								},
								{
									"key": "labels",
									"value": "aliquip sint",
									"description": "A list of comma separated label names. Example: `bug,ui,@high`"
								},
								{
									"key": "sort",
									"value": "updated",
									"description": "What to sort results by. Can be either `created`, `updated`, `comments`."
								},
								{
									"key": "direction",
									"value": "desc",
									"description": "One of `asc` (ascending) or `desc` (descending)."
								},
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "List issues in an organization assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/issues?filter=assigned&state=all&labels=nisi reprehenderit&sort=updated&direction=desc&since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"issues"
									],
									"query": [
										{
											"key": "filter",
											"value": "assigned"
										},
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "labels",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/issues?filter=assigned&state=all&labels=nisi reprehenderit&sort=updated&direction=desc&since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"issues"
									],
									"query": [
										{
											"key": "filter",
											"value": "assigned"
										},
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "labels",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDU6SXNzdWUx\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n  \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n  \"number\": 1347,\n  \"state\": \"open\",\n  \"title\": \"Found a bug\",\n  \"body\": \"I'm having a problem with this.\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"labels\": [\n   {\n    \"id\": 208045946,\n    \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n    \"name\": \"bug\",\n    \"description\": \"Something isn't working\",\n    \"color\": \"f29513\",\n    \"default\": true\n   }\n  ],\n  \"assignee\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"assignees\": [\n   {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   }\n  ],\n  \"milestone\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n   \"id\": 1002604,\n   \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n   \"number\": 1,\n   \"state\": \"open\",\n   \"title\": \"v1.0\",\n   \"description\": \"Tracking milestone for version 1.0\",\n   \"creator\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"open_issues\": 4,\n   \"closed_issues\": 8,\n   \"created_at\": \"2011-04-10T20:09:31Z\",\n   \"updated_at\": \"2014-03-03T18:58:10Z\",\n   \"closed_at\": \"2013-02-12T13:22:01Z\",\n   \"due_on\": \"2012-10-09T23:39:01Z\"\n  },\n  \"locked\": true,\n  \"active_lock_reason\": \"too heated\",\n  \"comments\": 0,\n  \"pull_request\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n   \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n   \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\"\n  },\n  \"closed_at\": null,\n  \"created_at\": \"2011-04-22T13:33:48Z\",\n  \"updated_at\": \"2011-04-22T13:33:48Z\",\n  \"repository\": {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"is_template\": true,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"visibility\": \"public\",\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"template_repository\": null,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"delete_branch_on_merge\": true,\n   \"allow_merge_commit\": true,\n   \"subscribers_count\": 42,\n   \"network_count\": 0,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n    \"html_url\": \"https://github.com/licenses/mit\"\n   },\n   \"forks\": 1,\n   \"open_issues\": 1,\n   \"watchers\": 1\n  },\n  \"author_association\": \"collaborator\"\n }\n]"
						}
					]
				},
				{
					"name": "Lock an issue",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"lock_reason\": \"too heated\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/lock",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"lock"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						},
						"description": "Users with push access can lock an issue or pull request's conversation.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\""
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"lock_reason\": \"too heated\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"lock"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"lock_reason\": \"too heated\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"lock"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"lock_reason\": \"too heated\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"lock"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"lock_reason\": \"too heated\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"lock"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"lock_reason\": \"too heated\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"lock"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Unlock an issue",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/lock",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"lock"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						},
						"description": "Users with push access can unlock an issue's conversation."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"lock"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"lock"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"lock"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a milestone",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/milestones/:milestone_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"milestones",
								":milestone_number"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "milestone_number",
									"value": "41891364",
									"description": "(Required) milestone_number parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/milestones/:milestone_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"milestones",
										":milestone_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "milestone_number"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/milestones/:milestone_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"milestones",
										":milestone_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "milestone_number"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update a milestone",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"v1.0\",\n    \"state\": \"open\",\n    \"description\": \"Tracking milestone for version 1.0\",\n    \"due_on\": \"2012-10-09T23:39:01Z\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/milestones/:milestone_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"milestones",
								":milestone_number"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "milestone_number",
									"value": "41891364",
									"description": "(Required) milestone_number parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"v1.0\",\n    \"state\": \"open\",\n    \"description\": \"Tracking milestone for version 1.0\",\n    \"due_on\": \"2012-10-09T23:39:01Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/milestones/:milestone_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"milestones",
										":milestone_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "milestone_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n \"id\": 1002604,\n \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n \"number\": 1,\n \"state\": \"open\",\n \"title\": \"v1.0\",\n \"description\": \"Tracking milestone for version 1.0\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"open_issues\": 4,\n \"closed_issues\": 8,\n \"created_at\": \"2011-04-10T20:09:31Z\",\n \"updated_at\": \"2014-03-03T18:58:10Z\",\n \"closed_at\": \"2013-02-12T13:22:01Z\",\n \"due_on\": \"2012-10-09T23:39:01Z\"\n}"
						}
					]
				},
				{
					"name": "Get a milestone",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/milestones/:milestone_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"milestones",
								":milestone_number"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "milestone_number",
									"value": "41891364",
									"description": "(Required) milestone_number parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/milestones/:milestone_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"milestones",
										":milestone_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "milestone_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n \"id\": 1002604,\n \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n \"number\": 1,\n \"state\": \"open\",\n \"title\": \"v1.0\",\n \"description\": \"Tracking milestone for version 1.0\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"open_issues\": 4,\n \"closed_issues\": 8,\n \"created_at\": \"2011-04-10T20:09:31Z\",\n \"updated_at\": \"2014-03-03T18:58:10Z\",\n \"closed_at\": \"2013-02-12T13:22:01Z\",\n \"due_on\": \"2012-10-09T23:39:01Z\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/milestones/:milestone_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"milestones",
										":milestone_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "milestone_number"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Remove a label from an issue",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"labels",
								":name"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								},
								{
									"key": "name",
									"value": "aliquip sint",
									"description": "(Required) name parameter"
								}
							]
						},
						"description": "Removes the specified label from the issue, and returns the remaining labels on the issue. This endpoint returns a `404 Not Found` status if the label does not exist."
					},
					"response": [
						{
							"name": "Gone",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"labels",
										":name"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										},
										{
											"key": "name"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"labels",
										":name"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										},
										{
											"key": "name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"labels",
										":name"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										},
										{
											"key": "name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 208045946,\n  \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n  \"name\": \"bug\",\n  \"description\": \"Something isn't working\",\n  \"color\": \"f29513\",\n  \"default\": true\n }\n]"
						}
					]
				},
				{
					"name": "List milestones",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/milestones?state=all&sort=completeness&direction=desc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"milestones"
							],
							"query": [
								{
									"key": "state",
									"value": "all",
									"description": "The state of the milestone. Either `open`, `closed`, or `all`."
								},
								{
									"key": "sort",
									"value": "completeness",
									"description": "What to sort results by. Either `due_on` or `completeness`."
								},
								{
									"key": "direction",
									"value": "desc",
									"description": "The direction of the sort. Either `asc` or `desc`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/milestones?state=all&sort=completeness&direction=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"milestones"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "sort",
											"value": "completeness"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n  \"id\": 1002604,\n  \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n  \"number\": 1,\n  \"state\": \"open\",\n  \"title\": \"v1.0\",\n  \"description\": \"Tracking milestone for version 1.0\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"open_issues\": 4,\n  \"closed_issues\": 8,\n  \"created_at\": \"2011-04-10T20:09:31Z\",\n  \"updated_at\": \"2014-03-03T18:58:10Z\",\n  \"closed_at\": \"2013-02-12T13:22:01Z\",\n  \"due_on\": \"2012-10-09T23:39:01Z\"\n }\n]"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/milestones?state=all&sort=completeness&direction=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"milestones"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "sort",
											"value": "completeness"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Create a milestone",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"v1.0\",\n    \"state\": \"open\",\n    \"description\": \"Tracking milestone for version 1.0\",\n    \"due_on\": \"2012-10-09T23:39:01Z\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/milestones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"milestones"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"v1.0\",\n    \"state\": \"open\",\n    \"description\": \"Tracking milestone for version 1.0\",\n    \"due_on\": \"2012-10-09T23:39:01Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/milestones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"milestones"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n \"id\": 1002604,\n \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n \"number\": 1,\n \"state\": \"open\",\n \"title\": \"v1.0\",\n \"description\": \"Tracking milestone for version 1.0\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"open_issues\": 4,\n \"closed_issues\": 8,\n \"created_at\": \"2011-04-10T20:09:31Z\",\n \"updated_at\": \"2014-03-03T18:58:10Z\",\n \"closed_at\": \"2013-02-12T13:22:01Z\",\n \"due_on\": \"2012-10-09T23:39:01Z\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"v1.0\",\n    \"state\": \"open\",\n    \"description\": \"Tracking milestone for version 1.0\",\n    \"due_on\": \"2012-10-09T23:39:01Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/milestones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"milestones"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"v1.0\",\n    \"state\": \"open\",\n    \"description\": \"Tracking milestone for version 1.0\",\n    \"due_on\": \"2012-10-09T23:39:01Z\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/milestones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"milestones"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Delete an issue comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								"comments",
								":comment_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an issue comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								"comments",
								":comment_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDEyOklzc3VlQ29tbWVudDE=\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments/1\",\n \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\",\n \"body\": \"Me too\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-14T16:00:49Z\",\n \"updated_at\": \"2011-04-14T16:00:49Z\",\n \"issue_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n \"author_association\": \"collaborator\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update an issue comment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"Me too\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								"comments",
								":comment_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Me too\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDEyOklzc3VlQ29tbWVudDE=\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments/1\",\n \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\",\n \"body\": \"Me too\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-14T16:00:49Z\",\n \"updated_at\": \"2011-04-14T16:00:49Z\",\n \"issue_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n \"author_association\": \"collaborator\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Me too\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get an issue",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						},
						"description": "The API returns a [`301 Moved Permanently` status](https://developer.github.com/v3/#http-redirects) if the issue was\n[transferred](https://help.github.com/articles/transferring-an-issue-to-another-repository/) to another repository. If\nthe issue was transferred to or deleted from a repository where the authenticated user lacks read access, the API\nreturns a `404 Not Found` status. If the issue was deleted from a repository where the authenticated user has read\naccess, the API returns a `410 Gone` status. To receive webhook events for transferred and deleted issues, subscribe\nto the [`issues`](https://developer.github.com/webhooks/event-payloads/#issues) webhook.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint."
					},
					"response": [
						{
							"name": "Gone",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Moved Permanently",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Moved Permanently",
							"code": 301,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDU6SXNzdWUx\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n \"number\": 1347,\n \"state\": \"open\",\n \"title\": \"Found a bug\",\n \"body\": \"I'm having a problem with this.\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"labels\": [\n  {\n   \"id\": 208045946,\n   \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n   \"name\": \"bug\",\n   \"description\": \"Something isn't working\",\n   \"color\": \"f29513\",\n   \"default\": true\n  }\n ],\n \"assignee\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"assignees\": [\n  {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  }\n ],\n \"milestone\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n  \"id\": 1002604,\n  \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n  \"number\": 1,\n  \"state\": \"open\",\n  \"title\": \"v1.0\",\n  \"description\": \"Tracking milestone for version 1.0\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"open_issues\": 4,\n  \"closed_issues\": 8,\n  \"created_at\": \"2011-04-10T20:09:31Z\",\n  \"updated_at\": \"2014-03-03T18:58:10Z\",\n  \"closed_at\": \"2013-02-12T13:22:01Z\",\n  \"due_on\": \"2012-10-09T23:39:01Z\"\n },\n \"locked\": true,\n \"active_lock_reason\": \"too heated\",\n \"comments\": 0,\n \"pull_request\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n  \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n  \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\"\n },\n \"closed_at\": null,\n \"created_at\": \"2011-04-22T13:33:48Z\",\n \"updated_at\": \"2011-04-22T13:33:48Z\",\n \"closed_by\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"author_association\": \"collaborator\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update an issue",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n        \"octocat\"\n    ],\n    \"milestone\": 1,\n    \"state\": \"open\",\n    \"labels\": [\n        \"bug\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						},
						"description": "Issue owners and users with push access can edit an issue."
					},
					"response": [
						{
							"name": "Gone",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n        \"octocat\"\n    ],\n    \"milestone\": 1,\n    \"state\": \"open\",\n    \"labels\": [\n        \"bug\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n        \"octocat\"\n    ],\n    \"milestone\": 1,\n    \"state\": \"open\",\n    \"labels\": [\n        \"bug\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDU6SXNzdWUx\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n \"number\": 1347,\n \"state\": \"open\",\n \"title\": \"Found a bug\",\n \"body\": \"I'm having a problem with this.\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"labels\": [\n  {\n   \"id\": 208045946,\n   \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n   \"name\": \"bug\",\n   \"description\": \"Something isn't working\",\n   \"color\": \"f29513\",\n   \"default\": true\n  }\n ],\n \"assignee\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"assignees\": [\n  {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  }\n ],\n \"milestone\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n  \"id\": 1002604,\n  \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n  \"number\": 1,\n  \"state\": \"open\",\n  \"title\": \"v1.0\",\n  \"description\": \"Tracking milestone for version 1.0\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"open_issues\": 4,\n  \"closed_issues\": 8,\n  \"created_at\": \"2011-04-10T20:09:31Z\",\n  \"updated_at\": \"2014-03-03T18:58:10Z\",\n  \"closed_at\": \"2013-02-12T13:22:01Z\",\n  \"due_on\": \"2012-10-09T23:39:01Z\"\n },\n \"locked\": true,\n \"active_lock_reason\": \"too heated\",\n \"comments\": 0,\n \"pull_request\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n  \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n  \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\"\n },\n \"closed_at\": null,\n \"created_at\": \"2011-04-22T13:33:48Z\",\n \"updated_at\": \"2011-04-22T13:33:48Z\",\n \"closed_by\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"author_association\": \"collaborator\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n        \"octocat\"\n    ],\n    \"milestone\": 1,\n    \"state\": \"open\",\n    \"labels\": [\n        \"bug\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Moved Permanently",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n        \"octocat\"\n    ],\n    \"milestone\": 1,\n    \"state\": \"open\",\n    \"labels\": [\n        \"bug\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Moved Permanently",
							"code": 301,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n        \"octocat\"\n    ],\n    \"milestone\": 1,\n    \"state\": \"open\",\n    \"labels\": [\n        \"bug\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n        \"octocat\"\n    ],\n    \"milestone\": 1,\n    \"state\": \"open\",\n    \"labels\": [\n        \"bug\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n        \"octocat\"\n    ],\n    \"milestone\": 1,\n    \"state\": \"open\",\n    \"labels\": [\n        \"bug\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sint exercitation velit\",\n \"message\": \"cupidatat do velit ut\",\n \"documentation_url\": \"elit non dolore et eiusmod\"\n}"
						}
					]
				},
				{
					"name": "Get a label",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/labels/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"labels",
								":name"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "name",
									"value": "aliquip sint",
									"description": "(Required) name parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/labels/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"labels",
										":name"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/labels/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"labels",
										":name"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 208045946,\n \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n \"name\": \"bug\",\n \"description\": \"Something isn't working\",\n \"color\": \"f29513\",\n \"default\": true\n}"
						}
					]
				},
				{
					"name": "Update a label",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"new_name\": \"bug :bug:\",\n    \"description\": \"Small bug fix required\",\n    \"color\": \"b01f26\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/labels/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"labels",
								":name"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "name",
									"value": "aliquip sint",
									"description": "(Required) name parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"new_name\": \"bug :bug:\",\n    \"description\": \"Small bug fix required\",\n    \"color\": \"b01f26\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/labels/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"labels",
										":name"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "name"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 208045946,\n \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug%20:bug:\",\n \"name\": \"bug :bug:\",\n \"description\": \"Small bug fix required\",\n \"color\": \"b01f26\",\n \"default\": true\n}"
						}
					]
				},
				{
					"name": "Delete a label",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/labels/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"labels",
								":name"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "name",
									"value": "aliquip sint",
									"description": "(Required) name parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/labels/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"labels",
										":name"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List labels for a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/labels?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"labels"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/labels?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"labels"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/labels?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"labels"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 208045946,\n  \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n  \"name\": \"bug\",\n  \"description\": \"Something isn't working\",\n  \"color\": \"f29513\",\n  \"default\": true\n },\n {\n  \"id\": 208045947,\n  \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDc=\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/enhancement\",\n  \"name\": \"enhancement\",\n  \"description\": \"New feature or request\",\n  \"color\": \"a2eeef\",\n  \"default\": false\n }\n]"
						}
					]
				},
				{
					"name": "Create a label",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"bug\",\n    \"description\": \"Something isn't working\",\n    \"color\": \"f29513\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/labels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"labels"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"bug\",\n    \"description\": \"Something isn't working\",\n    \"color\": \"f29513\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"labels"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"bug\",\n    \"description\": \"Something isn't working\",\n    \"color\": \"f29513\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"labels"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"bug\",\n    \"description\": \"Something isn't working\",\n    \"color\": \"f29513\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"labels"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 208045946,\n \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n \"name\": \"bug\",\n \"description\": \"Something isn't working\",\n \"color\": \"f29513\",\n \"default\": true\n}"
						}
					]
				},
				{
					"name": "List timeline events for an issue",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/timeline?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"timeline"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Gone",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/timeline?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"timeline"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/timeline?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"timeline"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/timeline?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"timeline"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDEwOklzc3VlRXZlbnQx\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events/1\",\n  \"actor\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"event\": \"closed\",\n  \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"commit_url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"created_at\": \"2011-04-14T16:00:49Z\"\n }\n]"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/timeline?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"timeline"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						}
					]
				},
				{
					"name": "List assignees",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/assignees?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"assignees"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists the [available assignees](https://help.github.com/articles/assigning-issues-and-pull-requests-to-other-github-users/) for issues in a repository."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/assignees?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"assignees"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/assignees?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"assignees"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						}
					]
				},
				{
					"name": "List issues assigned to the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/issues?filter=assigned&state=all&labels=aliquip sint&sort=updated&direction=desc&since=aliquip sint&collab=true&orgs=true&owned=true&pulls=true&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"issues"
							],
							"query": [
								{
									"key": "filter",
									"value": "assigned",
									"description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation"
								},
								{
									"key": "state",
									"value": "all",
									"description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`."
								},
								{
									"key": "labels",
									"value": "aliquip sint",
									"description": "A list of comma separated label names. Example: `bug,ui,@high`"
								},
								{
									"key": "sort",
									"value": "updated",
									"description": "What to sort results by. Can be either `created`, `updated`, `comments`."
								},
								{
									"key": "direction",
									"value": "desc",
									"description": "One of `asc` (ascending) or `desc` (descending)."
								},
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "collab",
									"value": "true"
								},
								{
									"key": "orgs",
									"value": "true"
								},
								{
									"key": "owned",
									"value": "true"
								},
								{
									"key": "pulls",
									"value": "true"
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "List issues assigned to the authenticated user across all visible repositories including owned repositories, member\nrepositories, and organization repositories. You can use the `filter` query parameter to fetch issues that are not\nnecessarily assigned to you. See the [Parameters table](https://developer.github.com/v3/issues/#parameters) for more\ninformation.\n\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/issues?filter=assigned&state=all&labels=nisi reprehenderit&sort=updated&direction=desc&since=nisi reprehenderit&collab=true&orgs=true&owned=true&pulls=true&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issues"
									],
									"query": [
										{
											"key": "filter",
											"value": "assigned"
										},
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "labels",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "collab",
											"value": "true"
										},
										{
											"key": "orgs",
											"value": "true"
										},
										{
											"key": "owned",
											"value": "true"
										},
										{
											"key": "pulls",
											"value": "true"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDU6SXNzdWUx\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n  \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n  \"number\": 1347,\n  \"state\": \"open\",\n  \"title\": \"Found a bug\",\n  \"body\": \"I'm having a problem with this.\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"labels\": [\n   {\n    \"id\": 208045946,\n    \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n    \"name\": \"bug\",\n    \"description\": \"Something isn't working\",\n    \"color\": \"f29513\",\n    \"default\": true\n   }\n  ],\n  \"assignee\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"assignees\": [\n   {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   }\n  ],\n  \"milestone\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n   \"id\": 1002604,\n   \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n   \"number\": 1,\n   \"state\": \"open\",\n   \"title\": \"v1.0\",\n   \"description\": \"Tracking milestone for version 1.0\",\n   \"creator\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"open_issues\": 4,\n   \"closed_issues\": 8,\n   \"created_at\": \"2011-04-10T20:09:31Z\",\n   \"updated_at\": \"2014-03-03T18:58:10Z\",\n   \"closed_at\": \"2013-02-12T13:22:01Z\",\n   \"due_on\": \"2012-10-09T23:39:01Z\"\n  },\n  \"locked\": true,\n  \"active_lock_reason\": \"too heated\",\n  \"comments\": 0,\n  \"pull_request\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n   \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n   \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\"\n  },\n  \"closed_at\": null,\n  \"created_at\": \"2011-04-22T13:33:48Z\",\n  \"updated_at\": \"2011-04-22T13:33:48Z\",\n  \"repository\": {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"is_template\": true,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"visibility\": \"public\",\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"template_repository\": null,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"delete_branch_on_merge\": true,\n   \"allow_merge_commit\": true,\n   \"subscribers_count\": 42,\n   \"network_count\": 0,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n    \"html_url\": \"https://github.com/licenses/mit\"\n   },\n   \"forks\": 1,\n   \"open_issues\": 1,\n   \"watchers\": 1\n  },\n  \"author_association\": \"collaborator\"\n }\n]"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/issues?filter=assigned&state=all&labels=nisi reprehenderit&sort=updated&direction=desc&since=nisi reprehenderit&collab=true&orgs=true&owned=true&pulls=true&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issues"
									],
									"query": [
										{
											"key": "filter",
											"value": "assigned"
										},
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "labels",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "collab",
											"value": "true"
										},
										{
											"key": "orgs",
											"value": "true"
										},
										{
											"key": "owned",
											"value": "true"
										},
										{
											"key": "pulls",
											"value": "true"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/issues?filter=assigned&state=all&labels=nisi reprehenderit&sort=updated&direction=desc&since=nisi reprehenderit&collab=true&orgs=true&owned=true&pulls=true&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issues"
									],
									"query": [
										{
											"key": "filter",
											"value": "assigned"
										},
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "labels",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "collab",
											"value": "true"
										},
										{
											"key": "orgs",
											"value": "true"
										},
										{
											"key": "owned",
											"value": "true"
										},
										{
											"key": "pulls",
											"value": "true"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/issues?filter=assigned&state=all&labels=nisi reprehenderit&sort=updated&direction=desc&since=nisi reprehenderit&collab=true&orgs=true&owned=true&pulls=true&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"issues"
									],
									"query": [
										{
											"key": "filter",
											"value": "assigned"
										},
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "labels",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "collab",
											"value": "true"
										},
										{
											"key": "orgs",
											"value": "true"
										},
										{
											"key": "owned",
											"value": "true"
										},
										{
											"key": "pulls",
											"value": "true"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Set labels for an issue",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"labels\": [\n        \"bug\",\n        \"enhancement\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"labels"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						},
						"description": "Removes any previous labels and sets the new labels for an issue."
					},
					"response": [
						{
							"name": "Gone",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"labels\": [\n        \"bug\",\n        \"enhancement\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"labels"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"labels\": [\n        \"bug\",\n        \"enhancement\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"labels"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"labels\": [\n        \"bug\",\n        \"enhancement\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"labels"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 208045946,\n  \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n  \"name\": \"bug\",\n  \"description\": \"Something isn't working\",\n  \"color\": \"f29513\",\n  \"default\": true\n },\n {\n  \"id\": 208045947,\n  \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDc=\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/enhancement\",\n  \"name\": \"enhancement\",\n  \"description\": \"New feature or request\",\n  \"color\": \"a2eeef\",\n  \"default\": false\n }\n]"
						}
					]
				},
				{
					"name": "Remove all labels from an issue",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"labels"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Gone",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"labels"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"labels"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add labels to an issue",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"labels\": [\n        \"bug\",\n        \"enhancement\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"labels"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Gone",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"labels\": [\n        \"bug\",\n        \"enhancement\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"labels"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"labels\": [\n        \"bug\",\n        \"enhancement\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"labels"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"labels\": [\n        \"bug\",\n        \"enhancement\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"labels"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 208045946,\n  \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n  \"name\": \"bug\",\n  \"description\": \"Something isn't working\",\n  \"color\": \"f29513\",\n  \"default\": true\n },\n {\n  \"id\": 208045947,\n  \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDc=\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/enhancement\",\n  \"name\": \"enhancement\",\n  \"description\": \"New feature or request\",\n  \"color\": \"a2eeef\",\n  \"default\": false\n }\n]"
						}
					]
				},
				{
					"name": "List labels for an issue",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"labels"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"labels"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 208045946,\n  \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n  \"name\": \"bug\",\n  \"description\": \"Something isn't working\",\n  \"color\": \"f29513\",\n  \"default\": true\n },\n {\n  \"id\": 208045947,\n  \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDc=\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/enhancement\",\n  \"name\": \"enhancement\",\n  \"description\": \"New feature or request\",\n  \"color\": \"a2eeef\",\n  \"default\": false\n }\n]"
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/labels?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"labels"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List issue events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/events?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"events"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDEwOklzc3VlRXZlbnQx\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events/1\",\n  \"actor\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"event\": \"closed\",\n  \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"commit_url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"created_at\": \"2011-04-14T16:00:49Z\"\n }\n]"
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Create an issue",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n        \"octocat\"\n    ],\n    \"milestone\": 1,\n    \"labels\": [\n        \"bug\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Any user with pull access to a repository can create an issue. If [issues are disabled in the repository](https://help.github.com/articles/disabling-issues/), the API returns a `410 Gone` status.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n        \"octocat\"\n    ],\n    \"milestone\": 1,\n    \"labels\": [\n        \"bug\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDU6SXNzdWUx\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n \"number\": 1347,\n \"state\": \"open\",\n \"title\": \"Found a bug\",\n \"body\": \"I'm having a problem with this.\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"labels\": [\n  {\n   \"id\": 208045946,\n   \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n   \"name\": \"bug\",\n   \"description\": \"Something isn't working\",\n   \"color\": \"f29513\",\n   \"default\": true\n  }\n ],\n \"assignee\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"assignees\": [\n  {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  }\n ],\n \"milestone\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n  \"id\": 1002604,\n  \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n  \"number\": 1,\n  \"state\": \"open\",\n  \"title\": \"v1.0\",\n  \"description\": \"Tracking milestone for version 1.0\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"open_issues\": 4,\n  \"closed_issues\": 8,\n  \"created_at\": \"2011-04-10T20:09:31Z\",\n  \"updated_at\": \"2014-03-03T18:58:10Z\",\n  \"closed_at\": \"2013-02-12T13:22:01Z\",\n  \"due_on\": \"2012-10-09T23:39:01Z\"\n },\n \"locked\": true,\n \"active_lock_reason\": \"too heated\",\n \"comments\": 0,\n \"pull_request\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n  \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n  \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\"\n },\n \"closed_at\": null,\n \"created_at\": \"2011-04-22T13:33:48Z\",\n \"updated_at\": \"2011-04-22T13:33:48Z\",\n \"closed_by\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"author_association\": \"collaborator\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n        \"octocat\"\n    ],\n    \"milestone\": 1,\n    \"labels\": [\n        \"bug\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n        \"octocat\"\n    ],\n    \"milestone\": 1,\n    \"labels\": [\n        \"bug\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n        \"octocat\"\n    ],\n    \"milestone\": 1,\n    \"labels\": [\n        \"bug\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n        \"octocat\"\n    ],\n    \"milestone\": 1,\n    \"labels\": [\n        \"bug\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sint exercitation velit\",\n \"message\": \"cupidatat do velit ut\",\n \"documentation_url\": \"elit non dolore et eiusmod\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Found a bug\",\n    \"body\": \"I'm having a problem with this.\",\n    \"assignees\": [\n        \"octocat\"\n    ],\n    \"milestone\": 1,\n    \"labels\": [\n        \"bug\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List repository issues",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues?milestone=aliquip sint&state=all&assignee=aliquip sint&creator=aliquip sint&mentioned=aliquip sint&labels=aliquip sint&sort=updated&direction=desc&since=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues"
							],
							"query": [
								{
									"key": "milestone",
									"value": "aliquip sint",
									"description": "If an `integer` is passed, it should refer to a milestone by its `number` field. If the string `*` is passed, issues with any milestone are accepted. If the string `none` is passed, issues without milestones are returned."
								},
								{
									"key": "state",
									"value": "all",
									"description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`."
								},
								{
									"key": "assignee",
									"value": "aliquip sint",
									"description": "Can be the name of a user. Pass in `none` for issues with no assigned user, and `*` for issues assigned to any user."
								},
								{
									"key": "creator",
									"value": "aliquip sint",
									"description": "The user that created the issue."
								},
								{
									"key": "mentioned",
									"value": "aliquip sint",
									"description": "A user that's mentioned in the issue."
								},
								{
									"key": "labels",
									"value": "aliquip sint",
									"description": "A list of comma separated label names. Example: `bug,ui,@high`"
								},
								{
									"key": "sort",
									"value": "updated",
									"description": "What to sort results by. Can be either `created`, `updated`, `comments`."
								},
								{
									"key": "direction",
									"value": "desc",
									"description": "One of `asc` (ascending) or `desc` (descending)."
								},
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "List issues in a repository.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues?milestone=nisi reprehenderit&state=all&assignee=nisi reprehenderit&creator=nisi reprehenderit&mentioned=nisi reprehenderit&labels=nisi reprehenderit&sort=updated&direction=desc&since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues"
									],
									"query": [
										{
											"key": "milestone",
											"value": "nisi reprehenderit"
										},
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "assignee",
											"value": "nisi reprehenderit"
										},
										{
											"key": "creator",
											"value": "nisi reprehenderit"
										},
										{
											"key": "mentioned",
											"value": "nisi reprehenderit"
										},
										{
											"key": "labels",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDU6SXNzdWUx\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n  \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n  \"number\": 1347,\n  \"state\": \"open\",\n  \"title\": \"Found a bug\",\n  \"body\": \"I'm having a problem with this.\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"labels\": [\n   {\n    \"id\": 208045946,\n    \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n    \"name\": \"bug\",\n    \"description\": \"Something isn't working\",\n    \"color\": \"f29513\",\n    \"default\": true\n   }\n  ],\n  \"assignee\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"assignees\": [\n   {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   }\n  ],\n  \"milestone\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n   \"id\": 1002604,\n   \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n   \"number\": 1,\n   \"state\": \"open\",\n   \"title\": \"v1.0\",\n   \"description\": \"Tracking milestone for version 1.0\",\n   \"creator\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"open_issues\": 4,\n   \"closed_issues\": 8,\n   \"created_at\": \"2011-04-10T20:09:31Z\",\n   \"updated_at\": \"2014-03-03T18:58:10Z\",\n   \"closed_at\": \"2013-02-12T13:22:01Z\",\n   \"due_on\": \"2012-10-09T23:39:01Z\"\n  },\n  \"locked\": true,\n  \"active_lock_reason\": \"too heated\",\n  \"comments\": 0,\n  \"pull_request\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n   \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n   \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\"\n  },\n  \"closed_at\": null,\n  \"created_at\": \"2011-04-22T13:33:48Z\",\n  \"updated_at\": \"2011-04-22T13:33:48Z\",\n  \"author_association\": \"collaborator\"\n }\n]"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues?milestone=nisi reprehenderit&state=all&assignee=nisi reprehenderit&creator=nisi reprehenderit&mentioned=nisi reprehenderit&labels=nisi reprehenderit&sort=updated&direction=desc&since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues"
									],
									"query": [
										{
											"key": "milestone",
											"value": "nisi reprehenderit"
										},
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "assignee",
											"value": "nisi reprehenderit"
										},
										{
											"key": "creator",
											"value": "nisi reprehenderit"
										},
										{
											"key": "mentioned",
											"value": "nisi reprehenderit"
										},
										{
											"key": "labels",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues?milestone=nisi reprehenderit&state=all&assignee=nisi reprehenderit&creator=nisi reprehenderit&mentioned=nisi reprehenderit&labels=nisi reprehenderit&sort=updated&direction=desc&since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues"
									],
									"query": [
										{
											"key": "milestone",
											"value": "nisi reprehenderit"
										},
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "assignee",
											"value": "nisi reprehenderit"
										},
										{
											"key": "creator",
											"value": "nisi reprehenderit"
										},
										{
											"key": "mentioned",
											"value": "nisi reprehenderit"
										},
										{
											"key": "labels",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Moved Permanently",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues?milestone=nisi reprehenderit&state=all&assignee=nisi reprehenderit&creator=nisi reprehenderit&mentioned=nisi reprehenderit&labels=nisi reprehenderit&sort=updated&direction=desc&since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues"
									],
									"query": [
										{
											"key": "milestone",
											"value": "nisi reprehenderit"
										},
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "assignee",
											"value": "nisi reprehenderit"
										},
										{
											"key": "creator",
											"value": "nisi reprehenderit"
										},
										{
											"key": "mentioned",
											"value": "nisi reprehenderit"
										},
										{
											"key": "labels",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Moved Permanently",
							"code": 301,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create an issue comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"Me too\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"comments"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						},
						"description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Me too\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"comments"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Me too\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"comments"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Me too\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"comments"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Me too\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"comments"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Me too\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"comments"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDEyOklzc3VlQ29tbWVudDE=\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments/1\",\n \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\",\n \"body\": \"Me too\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-14T16:00:49Z\",\n \"updated_at\": \"2011-04-14T16:00:49Z\",\n \"issue_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n \"author_association\": \"collaborator\"\n}"
						}
					]
				},
				{
					"name": "List issue comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/comments?since=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"comments"
							],
							"query": [
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						},
						"description": "Issue Comments are ordered by ascending ID."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/comments?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"comments"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDEyOklzc3VlQ29tbWVudDE=\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments/1\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\",\n  \"body\": \"Me too\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"created_at\": \"2011-04-14T16:00:49Z\",\n  \"updated_at\": \"2011-04-14T16:00:49Z\",\n  \"issue_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n  \"author_association\": \"collaborator\"\n }\n]"
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/comments?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"comments"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/comments?since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"comments"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Remove assignees from an issue",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assignees\": [\n        \"hubot\",\n        \"other_user\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/assignees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"assignees"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						},
						"description": "Removes one or more assignees from an issue."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assignees\": [\n        \"hubot\",\n        \"other_user\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/assignees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"assignees"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDU6SXNzdWUx\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n \"number\": 1347,\n \"state\": \"open\",\n \"title\": \"Found a bug\",\n \"body\": \"I'm having a problem with this.\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"labels\": [\n  {\n   \"id\": 208045946,\n   \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n   \"name\": \"bug\",\n   \"description\": \"Something isn't working\",\n   \"color\": \"f29513\",\n   \"default\": true\n  }\n ],\n \"assignee\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"assignees\": [\n  {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  {\n   \"login\": \"hubot\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/hubot_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/hubot\",\n   \"html_url\": \"https://github.com/hubot\",\n   \"followers_url\": \"https://api.github.com/users/hubot/followers\",\n   \"following_url\": \"https://api.github.com/users/hubot/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/hubot/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/hubot/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/hubot/orgs\",\n   \"repos_url\": \"https://api.github.com/users/hubot/repos\",\n   \"events_url\": \"https://api.github.com/users/hubot/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/hubot/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  },\n  {\n   \"login\": \"other_user\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/other_user\",\n   \"html_url\": \"https://github.com/other_user\",\n   \"followers_url\": \"https://api.github.com/users/other_user/followers\",\n   \"following_url\": \"https://api.github.com/users/other_user/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/other_user/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/other_user/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/other_user/orgs\",\n   \"repos_url\": \"https://api.github.com/users/other_user/repos\",\n   \"events_url\": \"https://api.github.com/users/other_user/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/other_user/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  }\n ],\n \"milestone\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n  \"id\": 1002604,\n  \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n  \"number\": 1,\n  \"state\": \"open\",\n  \"title\": \"v1.0\",\n  \"description\": \"Tracking milestone for version 1.0\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"open_issues\": 4,\n  \"closed_issues\": 8,\n  \"created_at\": \"2011-04-10T20:09:31Z\",\n  \"updated_at\": \"2014-03-03T18:58:10Z\",\n  \"closed_at\": \"2013-02-12T13:22:01Z\",\n  \"due_on\": \"2012-10-09T23:39:01Z\"\n },\n \"locked\": true,\n \"active_lock_reason\": \"too heated\",\n \"comments\": 0,\n \"pull_request\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n  \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n  \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\"\n },\n \"closed_at\": null,\n \"created_at\": \"2011-04-22T13:33:48Z\",\n \"updated_at\": \"2011-04-22T13:33:48Z\",\n \"author_association\": \"collaborator\"\n}"
						}
					]
				},
				{
					"name": "Add assignees to an issue",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"assignees\": [\n        \"hubot\",\n        \"other_user\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/assignees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"assignees"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						},
						"description": "Adds up to 10 assignees to an issue. Users already assigned to an issue are not replaced."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"assignees\": [\n        \"hubot\",\n        \"other_user\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/assignees",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"assignees"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDU6SXNzdWUx\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n \"number\": 1347,\n \"state\": \"open\",\n \"title\": \"Found a bug\",\n \"body\": \"I'm having a problem with this.\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"labels\": [\n  {\n   \"id\": 208045946,\n   \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n   \"name\": \"bug\",\n   \"description\": \"Something isn't working\",\n   \"color\": \"f29513\",\n   \"default\": true\n  }\n ],\n \"assignee\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"assignees\": [\n  {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  {\n   \"login\": \"hubot\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/hubot_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/hubot\",\n   \"html_url\": \"https://github.com/hubot\",\n   \"followers_url\": \"https://api.github.com/users/hubot/followers\",\n   \"following_url\": \"https://api.github.com/users/hubot/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/hubot/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/hubot/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/hubot/orgs\",\n   \"repos_url\": \"https://api.github.com/users/hubot/repos\",\n   \"events_url\": \"https://api.github.com/users/hubot/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/hubot/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  },\n  {\n   \"login\": \"other_user\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/other_user\",\n   \"html_url\": \"https://github.com/other_user\",\n   \"followers_url\": \"https://api.github.com/users/other_user/followers\",\n   \"following_url\": \"https://api.github.com/users/other_user/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/other_user/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/other_user/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/other_user/orgs\",\n   \"repos_url\": \"https://api.github.com/users/other_user/repos\",\n   \"events_url\": \"https://api.github.com/users/other_user/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/other_user/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  }\n ],\n \"milestone\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n  \"id\": 1002604,\n  \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n  \"number\": 1,\n  \"state\": \"open\",\n  \"title\": \"v1.0\",\n  \"description\": \"Tracking milestone for version 1.0\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"open_issues\": 4,\n  \"closed_issues\": 8,\n  \"created_at\": \"2011-04-10T20:09:31Z\",\n  \"updated_at\": \"2014-03-03T18:58:10Z\",\n  \"closed_at\": \"2013-02-12T13:22:01Z\",\n  \"due_on\": \"2012-10-09T23:39:01Z\"\n },\n \"locked\": true,\n \"active_lock_reason\": \"too heated\",\n \"comments\": 0,\n \"pull_request\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n  \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n  \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\"\n },\n \"closed_at\": null,\n \"created_at\": \"2011-04-22T13:33:48Z\",\n \"updated_at\": \"2011-04-22T13:33:48Z\",\n \"author_association\": \"collaborator\"\n}"
						}
					]
				},
				{
					"name": "List issue events for a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/events?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								"events"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/events?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"events"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDEwOklzc3VlRXZlbnQx\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events/1\",\n  \"actor\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"event\": \"closed\",\n  \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"commit_url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"created_at\": \"2011-04-14T16:00:49Z\",\n  \"issue\": {\n   \"id\": 1,\n   \"node_id\": \"MDU6SXNzdWUx\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n   \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n   \"number\": 1347,\n   \"state\": \"open\",\n   \"title\": \"Found a bug\",\n   \"body\": \"I'm having a problem with this.\",\n   \"user\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"labels\": [\n    {\n     \"id\": 208045946,\n     \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n     \"name\": \"bug\",\n     \"description\": \"Something isn't working\",\n     \"color\": \"f29513\",\n     \"default\": true\n    }\n   ],\n   \"assignee\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"assignees\": [\n    {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    }\n   ],\n   \"milestone\": {\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n    \"id\": 1002604,\n    \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n    \"number\": 1,\n    \"state\": \"open\",\n    \"title\": \"v1.0\",\n    \"description\": \"Tracking milestone for version 1.0\",\n    \"creator\": {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    },\n    \"open_issues\": 4,\n    \"closed_issues\": 8,\n    \"created_at\": \"2011-04-10T20:09:31Z\",\n    \"updated_at\": \"2014-03-03T18:58:10Z\",\n    \"closed_at\": \"2013-02-12T13:22:01Z\",\n    \"due_on\": \"2012-10-09T23:39:01Z\"\n   },\n   \"locked\": true,\n   \"active_lock_reason\": \"too heated\",\n   \"comments\": 0,\n   \"pull_request\": {\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n    \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n    \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\"\n   },\n   \"closed_at\": null,\n   \"created_at\": \"2011-04-22T13:33:48Z\",\n   \"updated_at\": \"2011-04-22T13:33:48Z\",\n   \"author_association\": \"collaborator\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Check if a user can be assigned",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/assignees/:assignee",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"assignees",
								":assignee"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "assignee",
									"value": "aliquip sint",
									"description": "(Required) assignee parameter"
								}
							]
						},
						"description": "Checks if a user has permission to be assigned to an issue in this repository.\n\nIf the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.\n\nOtherwise a `404` status code is returned."
					},
					"response": [
						{
							"name": "If the `assignee` can be assigned to issues in the repository, a `204` header with no content is returned.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/assignees/:assignee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"assignees",
										":assignee"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "assignee"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Otherwise a `404` status code is returned.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/assignees/:assignee",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"assignees",
										":assignee"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "assignee"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List user account issues assigned to the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/issues?filter=assigned&state=all&labels=aliquip sint&sort=updated&direction=desc&since=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"issues"
							],
							"query": [
								{
									"key": "filter",
									"value": "assigned",
									"description": "Indicates which sorts of issues to return. Can be one of:  \n\\* `assigned`: Issues assigned to you  \n\\* `created`: Issues created by you  \n\\* `mentioned`: Issues mentioning you  \n\\* `subscribed`: Issues you're subscribed to updates for  \n\\* `all`: All issues the authenticated user can see, regardless of participation or creation"
								},
								{
									"key": "state",
									"value": "all",
									"description": "Indicates the state of the issues to return. Can be either `open`, `closed`, or `all`."
								},
								{
									"key": "labels",
									"value": "aliquip sint",
									"description": "A list of comma separated label names. Example: `bug,ui,@high`"
								},
								{
									"key": "sort",
									"value": "updated",
									"description": "What to sort results by. Can be either `created`, `updated`, `comments`."
								},
								{
									"key": "direction",
									"value": "desc",
									"description": "One of `asc` (ascending) or `desc` (descending)."
								},
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "List issues across owned and member repositories assigned to the authenticated user.\n\n**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this\nreason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by\nthe `pull_request` key. Be aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull\nrequest id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/issues?filter=assigned&state=all&labels=nisi reprehenderit&sort=updated&direction=desc&since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"issues"
									],
									"query": [
										{
											"key": "filter",
											"value": "assigned"
										},
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "labels",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDU6SXNzdWUx\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n  \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n  \"number\": 1347,\n  \"state\": \"open\",\n  \"title\": \"Found a bug\",\n  \"body\": \"I'm having a problem with this.\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"labels\": [\n   {\n    \"id\": 208045946,\n    \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n    \"name\": \"bug\",\n    \"description\": \"Something isn't working\",\n    \"color\": \"f29513\",\n    \"default\": true\n   }\n  ],\n  \"assignee\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"assignees\": [\n   {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   }\n  ],\n  \"milestone\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n   \"id\": 1002604,\n   \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n   \"number\": 1,\n   \"state\": \"open\",\n   \"title\": \"v1.0\",\n   \"description\": \"Tracking milestone for version 1.0\",\n   \"creator\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"open_issues\": 4,\n   \"closed_issues\": 8,\n   \"created_at\": \"2011-04-10T20:09:31Z\",\n   \"updated_at\": \"2014-03-03T18:58:10Z\",\n   \"closed_at\": \"2013-02-12T13:22:01Z\",\n   \"due_on\": \"2012-10-09T23:39:01Z\"\n  },\n  \"locked\": true,\n  \"active_lock_reason\": \"too heated\",\n  \"comments\": 0,\n  \"pull_request\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n   \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n   \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\"\n  },\n  \"closed_at\": null,\n  \"created_at\": \"2011-04-22T13:33:48Z\",\n  \"updated_at\": \"2011-04-22T13:33:48Z\",\n  \"repository\": {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"is_template\": true,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"visibility\": \"public\",\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"template_repository\": null,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"delete_branch_on_merge\": true,\n   \"allow_merge_commit\": true,\n   \"subscribers_count\": 42,\n   \"network_count\": 0,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n    \"html_url\": \"https://github.com/licenses/mit\"\n   },\n   \"forks\": 1,\n   \"open_issues\": 1,\n   \"watchers\": 1\n  },\n  \"author_association\": \"collaborator\"\n }\n]"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/issues?filter=assigned&state=all&labels=nisi reprehenderit&sort=updated&direction=desc&since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"issues"
									],
									"query": [
										{
											"key": "filter",
											"value": "assigned"
										},
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "labels",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/issues?filter=assigned&state=all&labels=nisi reprehenderit&sort=updated&direction=desc&since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"issues"
									],
									"query": [
										{
											"key": "filter",
											"value": "assigned"
										},
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "labels",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List labels for issues in a milestone",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/milestones/:milestone_number/labels?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"milestones",
								":milestone_number",
								"labels"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "milestone_number",
									"value": "41891364",
									"description": "(Required) milestone_number parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/milestones/:milestone_number/labels?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"milestones",
										":milestone_number",
										"labels"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "milestone_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 208045946,\n  \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n  \"name\": \"bug\",\n  \"description\": \"Something isn't working\",\n  \"color\": \"f29513\",\n  \"default\": true\n },\n {\n  \"id\": 208045947,\n  \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDc=\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/enhancement\",\n  \"name\": \"enhancement\",\n  \"description\": \"New feature or request\",\n  \"color\": \"a2eeef\",\n  \"default\": false\n }\n]"
						}
					]
				},
				{
					"name": "Get an issue event",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/events/:event_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								"events",
								":event_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "event_id",
									"value": "41891364",
									"description": "(Required) event_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/events/:event_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"events",
										":event_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "event_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDEwOklzc3VlRXZlbnQx\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events/1\",\n \"actor\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"event\": \"closed\",\n \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"commit_url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"created_at\": \"2011-04-14T16:00:49Z\",\n \"issue\": {\n  \"id\": 1,\n  \"node_id\": \"MDU6SXNzdWUx\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n  \"repository_url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/labels{/name}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/events\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347\",\n  \"number\": 1347,\n  \"state\": \"open\",\n  \"title\": \"Found a bug\",\n  \"body\": \"I'm having a problem with this.\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"labels\": [\n   {\n    \"id\": 208045946,\n    \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n    \"name\": \"bug\",\n    \"description\": \"Something isn't working\",\n    \"color\": \"f29513\",\n    \"default\": true\n   }\n  ],\n  \"assignee\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"assignees\": [\n   {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   }\n  ],\n  \"milestone\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n   \"id\": 1002604,\n   \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n   \"number\": 1,\n   \"state\": \"open\",\n   \"title\": \"v1.0\",\n   \"description\": \"Tracking milestone for version 1.0\",\n   \"creator\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"open_issues\": 4,\n   \"closed_issues\": 8,\n   \"created_at\": \"2011-04-10T20:09:31Z\",\n   \"updated_at\": \"2014-03-03T18:58:10Z\",\n   \"closed_at\": \"2013-02-12T13:22:01Z\",\n   \"due_on\": \"2012-10-09T23:39:01Z\"\n  },\n  \"locked\": true,\n  \"active_lock_reason\": \"too heated\",\n  \"comments\": 0,\n  \"pull_request\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n   \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n   \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\"\n  },\n  \"closed_at\": null,\n  \"created_at\": \"2011-04-22T13:33:48Z\",\n  \"updated_at\": \"2011-04-22T13:33:48Z\",\n  \"author_association\": \"collaborator\"\n }\n}"
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/events/:event_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"events",
										":event_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "event_id"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/events/:event_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"events",
										":event_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "event_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/events/:event_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"events",
										":event_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "event_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List issue comments for a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments?sort=created&direction=asc&since=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								"comments"
							],
							"query": [
								{
									"key": "sort",
									"value": "created",
									"description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to)."
								},
								{
									"key": "direction",
									"value": "asc",
									"description": "Either `asc` or `desc`. Ignored without the `sort` parameter."
								},
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "By default, Issue Comments are ordered by ascending ID."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments?sort=created&direction=asc&since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDEyOklzc3VlQ29tbWVudDE=\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments/1\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/issues/1347#issuecomment-1\",\n  \"body\": \"Me too\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"created_at\": \"2011-04-14T16:00:49Z\",\n  \"updated_at\": \"2011-04-14T16:00:49Z\",\n  \"issue_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n  \"author_association\": \"collaborator\"\n }\n]"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments?sort=created&direction=asc&since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments?sort=created&direction=asc&since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				}
			],
			"description": "Interact with GitHub Issues.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "licenses",
			"item": [
				{
					"name": "Get the license for a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/license",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"license"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "This method returns the contents of the repository's license file, if one is detected.\n\nSimilar to [Get repository content](https://developer.github.com/v3/repos/contents/#get-repository-content), this method also supports [custom media types](https://developer.github.com/v3/repos/contents/#custom-media-types) for retrieving the raw license content or rendered license HTML."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/license",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"license"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"LICENSE\",\n \"path\": \"LICENSE\",\n \"sha\": \"401c59dcc4570b954dd6d345e76199e1f4e76266\",\n \"size\": 1077,\n \"url\": \"https://api.github.com/repos/benbalter/gman/contents/LICENSE?ref=master\",\n \"html_url\": \"https://github.com/benbalter/gman/blob/master/LICENSE\",\n \"git_url\": \"https://api.github.com/repos/benbalter/gman/git/blobs/401c59dcc4570b954dd6d345e76199e1f4e76266\",\n \"download_url\": \"https://raw.githubusercontent.com/benbalter/gman/master/LICENSE?lab=true\",\n \"type\": \"file\",\n \"content\": \"VGhlIE1JVCBMaWNlbnNlIChNSVQpCgpDb3B5cmlnaHQgKGMpIDIwMTMgQmVu\\nIEJhbHRlcgoKUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBv\\nZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZgp0\\naGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb24gZmls\\nZXMgKHRoZSAiU29mdHdhcmUiKSwgdG8gZGVhbCBpbgp0aGUgU29mdHdhcmUg\\nd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRh\\ndGlvbiB0aGUgcmlnaHRzIHRvCnVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwg\\ncHVibGlzaCwgZGlzdHJpYnV0ZSwgc3VibGljZW5zZSwgYW5kL29yIHNlbGwg\\nY29waWVzIG9mCnRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25z\\nIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzIGZ1cm5pc2hlZCB0byBkbyBzbywK\\nc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6CgpUaGUgYWJv\\ndmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGlj\\nZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwKY29waWVzIG9yIHN1YnN0YW50\\naWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS4KClRIRSBTT0ZUV0FSRSBJ\\nUyBQUk9WSURFRCAiQVMgSVMiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBL\\nSU5ELCBFWFBSRVNTIE9SCklNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJ\\nTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLCBG\\nSVRORVNTCkZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklO\\nR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUgpDT1BZ\\nUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdF\\nUyBPUiBPVEhFUiBMSUFCSUxJVFksIFdIRVRIRVIKSU4gQU4gQUNUSU9OIE9G\\nIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORyBGUk9NLCBP\\nVVQgT0YgT1IgSU4KQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBU\\nSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4K\\n\",\n \"encoding\": \"base64\",\n \"_links\": {\n  \"self\": \"https://api.github.com/repos/benbalter/gman/contents/LICENSE?ref=master\",\n  \"git\": \"https://api.github.com/repos/benbalter/gman/git/blobs/401c59dcc4570b954dd6d345e76199e1f4e76266\",\n  \"html\": \"https://github.com/benbalter/gman/blob/master/LICENSE\"\n },\n \"license\": {\n  \"key\": \"mit\",\n  \"name\": \"MIT License\",\n  \"spdx_id\": \"MIT\",\n  \"url\": \"https://api.github.com/licenses/mit\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n }\n}"
						}
					]
				},
				{
					"name": "Get a license",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/licenses/:license",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licenses",
								":license"
							],
							"variable": [
								{
									"key": "license",
									"value": "aliquip sint",
									"description": "(Required) license parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/licenses/:license",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"licenses",
										":license"
									],
									"variable": [
										{
											"key": "license"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"key\": \"mit\",\n \"name\": \"MIT License\",\n \"spdx_id\": \"MIT\",\n \"url\": \"https://api.github.com/licenses/mit\",\n \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n \"html_url\": \"http://choosealicense.com/licenses/mit/\",\n \"description\": \"A permissive license that is short and to the point. It lets people do anything with your code with proper attribution and without warranty.\",\n \"implementation\": \"Create a text file (typically named LICENSE or LICENSE.txt) in the root of your source code and copy the text of the license into the file. Replace [year] with the current year and [fullname] with the name (or names) of the copyright holders.\",\n \"permissions\": [\n  \"commercial-use\",\n  \"modifications\",\n  \"distribution\",\n  \"sublicense\",\n  \"private-use\"\n ],\n \"conditions\": [\n  \"include-copyright\"\n ],\n \"limitations\": [\n  \"no-liability\"\n ],\n \"body\": \"\\n\\nThe MIT License (MIT)\\n\\nCopyright (c) [year] [fullname]\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\",\n \"featured\": true\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/licenses/:license",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"licenses",
										":license"
									],
									"variable": [
										{
											"key": "license"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/licenses/:license",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"licenses",
										":license"
									],
									"variable": [
										{
											"key": "license"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/licenses/:license",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"licenses",
										":license"
									],
									"variable": [
										{
											"key": "license"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get all commonly used licenses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/licenses?featured=true&per_page=-27113311",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licenses"
							],
							"query": [
								{
									"key": "featured",
									"value": "true"
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/licenses?featured=true&per_page=-27113311",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"licenses"
									],
									"query": [
										{
											"key": "featured",
											"value": "true"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"key\": \"mit\",\n  \"name\": \"MIT License\",\n  \"spdx_id\": \"MIT\",\n  \"url\": \"https://api.github.com/licenses/mit\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n },\n {\n  \"key\": \"lgpl-3.0\",\n  \"name\": \"GNU Lesser General Public License v3.0\",\n  \"spdx_id\": \"LGPL-3.0\",\n  \"url\": \"https://api.github.com/licenses/lgpl-3.0\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n },\n {\n  \"key\": \"mpl-2.0\",\n  \"name\": \"Mozilla Public License 2.0\",\n  \"spdx_id\": \"MPL-2.0\",\n  \"url\": \"https://api.github.com/licenses/mpl-2.0\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n },\n {\n  \"key\": \"agpl-3.0\",\n  \"name\": \"GNU Affero General Public License v3.0\",\n  \"spdx_id\": \"AGPL-3.0\",\n  \"url\": \"https://api.github.com/licenses/agpl-3.0\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n },\n {\n  \"key\": \"unlicense\",\n  \"name\": \"The Unlicense\",\n  \"spdx_id\": \"Unlicense\",\n  \"url\": \"https://api.github.com/licenses/unlicense\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n },\n {\n  \"key\": \"apache-2.0\",\n  \"name\": \"Apache License 2.0\",\n  \"spdx_id\": \"Apache-2.0\",\n  \"url\": \"https://api.github.com/licenses/apache-2.0\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n },\n {\n  \"key\": \"gpl-3.0\",\n  \"name\": \"GNU General Public License v3.0\",\n  \"spdx_id\": \"GPL-3.0\",\n  \"url\": \"https://api.github.com/licenses/gpl-3.0\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n }\n]"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/licenses?featured=true&per_page=-27113311",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"licenses"
									],
									"query": [
										{
											"key": "featured",
											"value": "true"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "View various OSS licenses.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "markdown",
			"item": [
				{
					"name": "Render a Markdown document",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"text\": \"consectetur sunt occaecat aute Duis\",\n    \"mode\": \"markdown\",\n    \"context\": \"pariatur\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/markdown",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"markdown"
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"text\": \"consectetur sunt occaecat aute Duis\",\n    \"mode\": \"markdown\",\n    \"context\": \"pariatur\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/markdown",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"markdown"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Length",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "X-CommonMarker-Version",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"text\": \"consectetur sunt occaecat aute Duis\",\n    \"mode\": \"markdown\",\n    \"context\": \"pariatur\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/markdown",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"markdown"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Render a Markdown document in raw mode",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"aliquip sint\""
						},
						"url": {
							"raw": "{{baseUrl}}/markdown/raw",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"markdown",
								"raw"
							]
						},
						"description": "You must send Markdown as plain text (using a `Content-Type` header of `text/plain` or `text/x-markdown`) to this endpoint, rather than using JSON format. In raw mode, [GitHub Flavored Markdown](https://github.github.com/gfm/) is not supported and Markdown will be rendered in plain format like a README.md file. Markdown content must be 400 KB or less."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"aliquip sint\""
								},
								"url": {
									"raw": "{{baseUrl}}/markdown/raw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"markdown",
										"raw"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "X-CommonMarker-Version",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "text/html"
								}
							],
							"cookie": [],
							"body": "aliquip sint"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"aliquip sint\""
								},
								"url": {
									"raw": "{{baseUrl}}/markdown/raw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"markdown",
										"raw"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Render Github flavored markdown",
			"protocolProfileBehavior": {}
		},
		{
			"name": "meta",
			"item": [
				{
					"name": "Get the Zen of GitHub",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/zen",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"zen"
							]
						},
						"description": "Get a random sentence from the Zen of GitHub"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/zen",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"zen"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": "aliquip sint"
						}
					]
				},
				{
					"name": "Get GitHub meta information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/meta",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"meta"
							]
						},
						"description": "This endpoint provides a list of GitHub's IP addresses. For more information, see \"[About GitHub's IP addresses](https://help.github.com/articles/about-github-s-ip-addresses/).\""
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meta",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meta"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"verifiable_password_authentication\": true,\n \"ssh_key_fingerprints\": {\n  \"MD5_RSA\": \"16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48\",\n  \"MD5_DSA\": \"ad:1c:08:a4:40:e3:6f:9c:f5:66:26:5d:4b:33:5d:8c\",\n  \"SHA256_RSA\": \"nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8\",\n  \"SHA256_DSA\": \"br9IjFspm1vxR3iA35FWE+4VTyz1hYVLIE2t1/CeyWQ\"\n },\n \"hooks\": [\n  \"192.30.252.0/22\"\n ],\n \"web\": [\n  \"192.30.252.0/22\",\n  \"185.199.108.0/22\"\n ],\n \"api\": [\n  \"192.30.252.0/22\",\n  \"185.199.108.0/22\"\n ],\n \"git\": [\n  \"192.30.252.0/22\"\n ],\n \"pages\": [\n  \"192.30.252.153/32\",\n  \"192.30.252.154/32\"\n ],\n \"importer\": [\n  \"54.158.161.132\",\n  \"54.226.70.38\"\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/meta",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"meta"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Octocat",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/octocat?s=aliquip sint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"octocat"
							],
							"query": [
								{
									"key": "s",
									"value": "aliquip sint",
									"description": "The words to show in Octocat's speech bubble"
								}
							]
						},
						"description": "Get the octocat as ASCII art"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/octocat?s=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"octocat"
									],
									"query": [
										{
											"key": "s",
											"value": "nisi reprehenderit"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/octocat-stream"
								}
							],
							"cookie": [],
							"body": "aliquip sint"
						}
					]
				},
				{
					"name": "GitHub API Root",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						},
						"description": "Get Hypermedia links to resources accessible in GitHub's REST API"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"current_user_url\": \"officia\",\n \"current_user_authorizations_html_url\": \"est id in elit incididunt\",\n \"authorizations_url\": \"quis qui\",\n \"code_search_url\": \"et\",\n \"commit_search_url\": \"Duis cillum dolore non consequat\",\n \"emails_url\": \"dolore aliquip\",\n \"emojis_url\": \"est nisi nulla Duis\",\n \"events_url\": \"ad laboris fugiat\",\n \"feeds_url\": \"ad \",\n \"followers_url\": \"occaecat enim\",\n \"following_url\": \"ut exercitation minim\",\n \"gists_url\": \"do\",\n \"hub_url\": \"deserunt occaecat eu anim\",\n \"issue_search_url\": \"ullamco ea fugiat\",\n \"issues_url\": \"in consectetur laborum\",\n \"keys_url\": \"esse reprehenderit\",\n \"label_search_url\": \"pariatur nulla repreh\",\n \"notifications_url\": \"dolore consectetur\",\n \"organization_url\": \"quis aliqua\",\n \"organization_repositories_url\": \"dolore occaecat esse adipisicing\",\n \"organization_teams_url\": \"consectetur officia fugi\",\n \"public_gists_url\": \"ea ullamco laboris\",\n \"rate_limit_url\": \"adipisicing elit quis dolor velit\",\n \"repository_url\": \"labore velit ex reprehenderit\",\n \"repository_search_url\": \"ad qui\",\n \"current_user_repositories_url\": \"magna culpa velit in\",\n \"starred_url\": \"anim sed incididunt\",\n \"starred_gists_url\": \"consequat ullamco nostrud\",\n \"user_url\": \"amet nulla pariatur\",\n \"user_organizations_url\": \"officia enim consequat\",\n \"user_repositories_url\": \"ea sit\",\n \"user_search_url\": \"amet\",\n \"topic_search_url\": \"magna nostrud\"\n}"
						}
					]
				}
			],
			"description": "Endpoints that give information about the API.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "migrations",
			"item": [
				{
					"name": "List organization migrations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/migrations?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"migrations"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists the most recent migrations."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/migrations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"migrations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 79,\n  \"owner\": {\n   \"login\": \"github\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n   \"url\": \"https://api.github.com/orgs/github\",\n   \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n   \"events_url\": \"https://api.github.com/orgs/github/events\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  },\n  \"guid\": \"0b989ba4-242f-11e5-81e1-c7b6966d2516\",\n  \"state\": \"pending\",\n  \"lock_repositories\": true,\n  \"exclude_attachments\": false,\n  \"repositories\": [\n   {\n    \"id\": 1296269,\n    \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n    \"name\": \"Hello-World\",\n    \"full_name\": \"octocat/Hello-World\",\n    \"owner\": {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    },\n    \"private\": false,\n    \"html_url\": \"https://github.com/octocat/Hello-World\",\n    \"description\": \"This your first repo!\",\n    \"fork\": false,\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n    \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n    \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n    \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n    \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n    \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n    \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n    \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n    \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n    \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n    \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n    \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n    \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n    \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n    \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n    \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n    \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n    \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n    \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n    \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n    \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n    \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n    \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n    \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n    \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n    \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n    \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n    \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n    \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n    \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n    \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n    \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n    \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n    \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n    \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n    \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n    \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n    \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n    \"homepage\": \"https://github.com\",\n    \"language\": null,\n    \"forks_count\": 9,\n    \"stargazers_count\": 80,\n    \"watchers_count\": 80,\n    \"size\": 108,\n    \"default_branch\": \"master\",\n    \"open_issues_count\": 0,\n    \"is_template\": true,\n    \"topics\": [\n     \"octocat\",\n     \"atom\",\n     \"electron\",\n     \"api\"\n    ],\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n    \"has_pages\": false,\n    \"has_downloads\": true,\n    \"archived\": false,\n    \"disabled\": false,\n    \"visibility\": \"public\",\n    \"pushed_at\": \"2011-01-26T19:06:43Z\",\n    \"created_at\": \"2011-01-26T19:01:12Z\",\n    \"updated_at\": \"2011-01-26T19:14:43Z\",\n    \"permissions\": {\n     \"admin\": false,\n     \"push\": false,\n     \"pull\": true\n    },\n    \"allow_rebase_merge\": true,\n    \"template_repository\": null,\n    \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n    \"allow_squash_merge\": true,\n    \"delete_branch_on_merge\": true,\n    \"allow_merge_commit\": true,\n    \"subscribers_count\": 42,\n    \"network_count\": 0,\n    \"license\": {\n     \"key\": \"mit\",\n     \"name\": \"MIT License\",\n     \"url\": \"https://api.github.com/licenses/mit\",\n     \"spdx_id\": \"MIT\",\n     \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n     \"html_url\": \"https://api.github.com/licenses/mit\"\n    },\n    \"forks\": 1,\n    \"open_issues\": 1,\n    \"watchers\": 1\n   }\n  ],\n  \"url\": \"https://api.github.com/orgs/octo-org/migrations/79\",\n  \"created_at\": \"2015-07-06T15:33:38-07:00\",\n  \"updated_at\": \"2015-07-06T15:33:38-07:00\",\n  \"node_id\": \"MDQ6VXNlcjE=\"\n }\n]"
						}
					]
				},
				{
					"name": "Start an organization migration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"repositories\": [\n        \"github/Hello-World\"\n    ],\n    \"lock_repositories\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/migrations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"migrations"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Initiates the generation of a migration archive."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositories\": [\n        \"github/Hello-World\"\n    ],\n    \"lock_repositories\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/migrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"migrations"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 79,\n \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n \"owner\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": true\n },\n \"guid\": \"0b989ba4-242f-11e5-81e1-c7b6966d2516\",\n \"state\": \"pending\",\n \"lock_repositories\": true,\n \"exclude_attachments\": false,\n \"repositories\": [\n  {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"is_template\": true,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"visibility\": \"public\",\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"template_repository\": null,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"delete_branch_on_merge\": true,\n   \"allow_merge_commit\": true,\n   \"subscribers_count\": 42,\n   \"network_count\": 0,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n    \"html_url\": \"https://api.github.com/licenses/mit\"\n   },\n   \"forks\": 1,\n   \"open_issues\": 1,\n   \"watchers\": 1\n  }\n ],\n \"url\": \"https://api.github.com/orgs/octo-org/migrations/79\",\n \"created_at\": \"2015-07-06T15:33:38-07:00\",\n \"updated_at\": \"2015-07-06T15:33:38-07:00\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositories\": [\n        \"github/Hello-World\"\n    ],\n    \"lock_repositories\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/migrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"migrations"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositories\": [\n        \"github/Hello-World\"\n    ],\n    \"lock_repositories\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/migrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"migrations"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get a user migration status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/migrations/:migration_id?exclude=cillum incididunt in irure sunt",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"migrations",
								":migration_id"
							],
							"query": [
								{
									"key": "exclude",
									"value": "cillum incididunt in irure sunt"
								}
							],
							"variable": [
								{
									"key": "migration_id",
									"value": "41891364",
									"description": "(Required) migration_id parameter"
								}
							]
						},
						"description": "Fetches a single user migration. The response includes the `state` of the migration, which can be one of the following values:\n\n*   `pending` - the migration hasn't started yet.\n*   `exporting` - the migration is in progress.\n*   `exported` - the migration finished successfully.\n*   `failed` - the migration failed.\n\nOnce the migration has been `exported` you can [download the migration archive](https://developer.github.com/v3/migrations/users/#download-a-user-migration-archive)."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id?exclude=consequat ut&exclude=quis aute dolore ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id"
									],
									"query": [
										{
											"key": "exclude",
											"value": "consequat ut"
										},
										{
											"key": "exclude",
											"value": "quis aute dolore ullamco"
										}
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id?exclude=consequat ut&exclude=quis aute dolore ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id"
									],
									"query": [
										{
											"key": "exclude",
											"value": "consequat ut"
										},
										{
											"key": "exclude",
											"value": "quis aute dolore ullamco"
										}
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id?exclude=consequat ut&exclude=quis aute dolore ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id"
									],
									"query": [
										{
											"key": "exclude",
											"value": "consequat ut"
										},
										{
											"key": "exclude",
											"value": "quis aute dolore ullamco"
										}
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 79,\n \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n \"owner\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"guid\": \"0b989ba4-242f-11e5-81e1-c7b6966d2516\",\n \"state\": \"exported\",\n \"lock_repositories\": true,\n \"exclude_attachments\": false,\n \"repositories\": [\n  {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"is_template\": true,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"visibility\": \"public\",\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"template_repository\": null,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"delete_branch_on_merge\": true,\n   \"allow_merge_commit\": true,\n   \"subscribers_count\": 42,\n   \"network_count\": 0,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n    \"html_url\": \"https://api.github.com/licenses/mit\"\n   },\n   \"forks\": 1,\n   \"open_issues\": 1,\n   \"watchers\": 1\n  }\n ],\n \"url\": \"https://api.github.com/orgs/octo-org/migrations/79\",\n \"created_at\": \"2015-07-06T15:33:38-07:00\",\n \"updated_at\": \"2015-07-06T15:33:38-07:00\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id?exclude=consequat ut&exclude=quis aute dolore ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id"
									],
									"query": [
										{
											"key": "exclude",
											"value": "consequat ut"
										},
										{
											"key": "exclude",
											"value": "quis aute dolore ullamco"
										}
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id?exclude=consequat ut&exclude=quis aute dolore ullamco",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id"
									],
									"query": [
										{
											"key": "exclude",
											"value": "consequat ut"
										},
										{
											"key": "exclude",
											"value": "quis aute dolore ullamco"
										}
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get large files",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/import/large_files",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"import",
								"large_files"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "List files larger than 100MB found during the import"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/import/large_files",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"import",
										"large_files"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"ref_name\": \"refs/heads/master\",\n  \"path\": \"foo/bar/1\",\n  \"oid\": \"d3d9446802a44259755d38e6d163e820\",\n  \"size\": 10485760\n },\n {\n  \"ref_name\": \"refs/heads/master\",\n  \"path\": \"foo/bar/2\",\n  \"oid\": \"6512bd43d9caa6e02c990b0a82652dca\",\n  \"size\": 11534336\n },\n {\n  \"ref_name\": \"refs/heads/master\",\n  \"path\": \"foo/bar/3\",\n  \"oid\": \"c20ad4d76fe97759aa27a0c99bff6710\",\n  \"size\": 12582912\n }\n]"
						}
					]
				},
				{
					"name": "Unlock an organization repository",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/migrations/:migration_id/repos/:repo_name/lock",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"migrations",
								":migration_id",
								"repos",
								":repo_name",
								"lock"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "migration_id",
									"value": "41891364",
									"description": "(Required) migration_id parameter"
								},
								{
									"key": "repo_name",
									"value": "aliquip sint",
									"description": "(Required) repo_name parameter"
								}
							]
						},
						"description": "Unlocks a repository that was locked for migration. You should unlock each migrated repository and [delete them](https://developer.github.com/v3/repos/#delete-a-repository) when the migration is complete and you no longer need the source data."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/migrations/:migration_id/repos/:repo_name/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"migrations",
										":migration_id",
										"repos",
										":repo_name",
										"lock"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "migration_id"
										},
										{
											"key": "repo_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/migrations/:migration_id/repos/:repo_name/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"migrations",
										":migration_id",
										"repos",
										":repo_name",
										"lock"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "migration_id"
										},
										{
											"key": "repo_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Unlock a user repository",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/migrations/:migration_id/repos/:repo_name/lock",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"migrations",
								":migration_id",
								"repos",
								":repo_name",
								"lock"
							],
							"variable": [
								{
									"key": "migration_id",
									"value": "41891364",
									"description": "(Required) migration_id parameter"
								},
								{
									"key": "repo_name",
									"value": "aliquip sint",
									"description": "(Required) repo_name parameter"
								}
							]
						},
						"description": "Unlocks a repository. You can lock repositories when you [start a user migration](https://developer.github.com/v3/migrations/users/#start-a-user-migration). Once the migration is complete you can unlock each repository to begin using it again or [delete the repository](https://developer.github.com/v3/repos/#delete-a-repository) if you no longer need the source data. Returns a status of `404 Not Found` if the repository is not locked."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/repos/:repo_name/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"repos",
										":repo_name",
										"lock"
									],
									"variable": [
										{
											"key": "migration_id"
										},
										{
											"key": "repo_name"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/repos/:repo_name/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"repos",
										":repo_name",
										"lock"
									],
									"variable": [
										{
											"key": "migration_id"
										},
										{
											"key": "repo_name"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/repos/:repo_name/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"repos",
										":repo_name",
										"lock"
									],
									"variable": [
										{
											"key": "migration_id"
										},
										{
											"key": "repo_name"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/repos/:repo_name/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"repos",
										":repo_name",
										"lock"
									],
									"variable": [
										{
											"key": "migration_id"
										},
										{
											"key": "repo_name"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/repos/:repo_name/lock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"repos",
										":repo_name",
										"lock"
									],
									"variable": [
										{
											"key": "migration_id"
										},
										{
											"key": "repo_name"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get an import status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/import",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"import"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "View the progress of an import.\n\n**Import status**\n\nThis section includes details about the possible values of the `status` field of the Import Progress response.\n\nAn import that does not have errors will progress through these steps:\n\n*   `detecting` - the \"detection\" step of the import is in progress because the request did not include a `vcs` parameter. The import is identifying the type of source control present at the URL.\n*   `importing` - the \"raw\" step of the import is in progress. This is where commit data is fetched from the original repository. The import progress response will include `commit_count` (the total number of raw commits that will be imported) and `percent` (0 - 100, the current progress through the import).\n*   `mapping` - the \"rewrite\" step of the import is in progress. This is where SVN branches are converted to Git branches, and where author updates are applied. The import progress response does not include progress information.\n*   `pushing` - the \"push\" step of the import is in progress. This is where the importer updates the repository on GitHub. The import progress response will include `push_percent`, which is the percent value reported by `git push` when it is \"Writing objects\".\n*   `complete` - the import is complete, and the repository is ready on GitHub.\n\nIf there are problems, you will see one of these in the `status` field:\n\n*   `auth_failed` - the import requires authentication in order to connect to the original repository. To update authentication for the import, please see the [Update an import](https://developer.github.com/v3/migrations/source_imports/#update-an-import) section.\n*   `error` - the import encountered an error. The import progress response will include the `failed_step` and an error message. Contact [GitHub Support](https://github.com/contact) or [GitHub Premium Support](https://premium.githubsupport.com) for more information.\n*   `detection_needs_auth` - the importer requires authentication for the originating repository to continue detection. To update authentication for the import, please see the [Update an import](https://developer.github.com/v3/migrations/source_imports/#update-an-import) section.\n*   `detection_found_nothing` - the importer didn't recognize any source control at the URL. To resolve, [Cancel the import](https://developer.github.com/v3/migrations/source_imports/#cancel-an-import) and [retry](https://developer.github.com/v3/migrations/source_imports/#start-an-import) with the correct URL.\n*   `detection_found_multiple` - the importer found several projects or repositories at the provided URL. When this is the case, the Import Progress response will also include a `project_choices` field with the possible project choices as values. To update project choice, please see the [Update an import](https://developer.github.com/v3/migrations/source_imports/#update-an-import) section.\n\n**The project_choices field**\n\nWhen multiple projects are found at the provided URL, the response hash will include a `project_choices` field, the value of which is an array of hashes each representing a project choice. The exact key/value pairs of the project hashes will differ depending on the version control type.\n\n**Git LFS related fields**\n\nThis section includes details about Git LFS related fields that may be present in the Import Progress response.\n\n*   `use_lfs` - describes whether the import has been opted in or out of using Git LFS. The value can be `opt_in`, `opt_out`, or `undecided` if no action has been taken.\n*   `has_large_files` - the boolean value describing whether files larger than 100MB were found during the `importing` step.\n*   `large_files_size` - the total size in gigabytes of files larger than 100MB found in the originating repository.\n*   `large_files_count` - the total number of files larger than 100MB found in the originating repository. To see a list of these files, make a \"Get Large Files\" request."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"import"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"import"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"vcs\": \"subversion\",\n \"use_lfs\": \"opt_in\",\n \"vcs_url\": \"http://svn.mycompany.com/svn/myproject\",\n \"status\": \"complete\",\n \"status_text\": \"Done\",\n \"has_large_files\": true,\n \"large_files_size\": 132331036,\n \"large_files_count\": 1,\n \"authors_count\": 4,\n \"url\": \"https://api.github.com/repos/octocat/socm/import\",\n \"html_url\": \"https://import.github.com/octocat/socm/import\",\n \"authors_url\": \"https://api.github.com/repos/octocat/socm/import/authors\",\n \"repository_url\": \"https://api.github.com/repos/octocat/socm\"\n}"
						}
					]
				},
				{
					"name": "Update an import",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vcs_username\": \"octocat\",\n    \"vcs_password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/import",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"import"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "An import can be updated with credentials or a project choice by passing in the appropriate parameters in this API\nrequest. If no parameters are provided, the import will be restarted."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"vcs_username\": \"octocat\",\n    \"vcs_password\": \"secret\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"import"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"vcs\": \"subversion\",\n \"use_lfs\": \"undecided\",\n \"vcs_url\": \"http://svn.mycompany.com/svn/myproject\",\n \"status\": \"detecting\",\n \"url\": \"https://api.github.com/repos/octocat/socm/import\",\n \"html_url\": \"https://import.github.com/octocat/socm/import\",\n \"authors_url\": \"https://api.github.com/repos/octocat/socm/import/authors\",\n \"repository_url\": \"https://api.github.com/repos/octocat/socm\"\n}"
						}
					]
				},
				{
					"name": "Cancel an import",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/import",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"import"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Stop an import for a repository."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"import"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Start an import",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"vcs\": \"subversion\",\n    \"vcs_url\": \"http://svn.mycompany.com/svn/myproject\",\n    \"vcs_username\": \"octocat\",\n    \"vcs_password\": \"secret\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/import",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"import"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Start a source import to a GitHub repository using GitHub Importer."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"vcs\": \"subversion\",\n    \"vcs_url\": \"http://svn.mycompany.com/svn/myproject\",\n    \"vcs_username\": \"octocat\",\n    \"vcs_password\": \"secret\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"import"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"vcs\": \"subversion\",\n \"use_lfs\": \"undecided\",\n \"vcs_url\": \"http://svn.mycompany.com/svn/myproject\",\n \"status\": \"importing\",\n \"status_text\": \"Importing...\",\n \"has_large_files\": false,\n \"large_files_size\": 0,\n \"large_files_count\": 0,\n \"authors_count\": 0,\n \"commit_count\": 1042,\n \"url\": \"https://api.github.com/repos/octocat/socm/import\",\n \"html_url\": \"https://import.github.com/octocat/socm/import\",\n \"authors_url\": \"https://api.github.com/repos/octocat/socm/import/authors\",\n \"repository_url\": \"https://api.github.com/repos/octocat/socm\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"vcs\": \"subversion\",\n    \"vcs_url\": \"http://svn.mycompany.com/svn/myproject\",\n    \"vcs_username\": \"octocat\",\n    \"vcs_password\": \"secret\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"import"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"vcs\": \"subversion\",\n    \"vcs_url\": \"http://svn.mycompany.com/svn/myproject\",\n    \"vcs_username\": \"octocat\",\n    \"vcs_password\": \"secret\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/import",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"import"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List repositories for a user migration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/migrations/:migration_id/repositories?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"migrations",
								":migration_id",
								"repositories"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "migration_id",
									"value": "41891364",
									"description": "(Required) migration_id parameter"
								}
							]
						},
						"description": "Lists all the repositories for this user migration."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/repositories?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"repositories"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"template_repository\": \"octocat/template\",\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"delete_branch_on_merge\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"spdx_id\": \"MIT\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n  }\n }\n]"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/repositories?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"repositories"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List repositories in an organization migration",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/migrations/:migration_id/repositories?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"migrations",
								":migration_id",
								"repositories"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "migration_id",
									"value": "41891364",
									"description": "(Required) migration_id parameter"
								}
							]
						},
						"description": "List all the repositories for this organization migration."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/migrations/:migration_id/repositories?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"migrations",
										":migration_id",
										"repositories"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"template_repository\": \"octocat/template\",\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"delete_branch_on_merge\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"spdx_id\": \"MIT\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n  }\n }\n]"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/migrations/:migration_id/repositories?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"migrations",
										":migration_id",
										"repositories"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Start a user migration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"repositories\": [\n        \"acme/widgets\",\n        \"acme/widgets\"\n    ],\n    \"lock_repositories\": true,\n    \"exclude_attachments\": true,\n    \"exclude\": [\n        \"repositories\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/migrations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"migrations"
							]
						},
						"description": "Initiates the generation of a user migration archive."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositories\": [\n        \"acme/widgets\",\n        \"acme/widgets\"\n    ],\n    \"lock_repositories\": true,\n    \"exclude_attachments\": true,\n    \"exclude\": [\n        \"repositories\",\n        \"repositories\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/migrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositories\": [\n        \"acme/widgets\",\n        \"acme/widgets\"\n    ],\n    \"lock_repositories\": true,\n    \"exclude_attachments\": true,\n    \"exclude\": [\n        \"repositories\",\n        \"repositories\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/migrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositories\": [\n        \"acme/widgets\",\n        \"acme/widgets\"\n    ],\n    \"lock_repositories\": true,\n    \"exclude_attachments\": true,\n    \"exclude\": [\n        \"repositories\",\n        \"repositories\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/migrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositories\": [\n        \"acme/widgets\",\n        \"acme/widgets\"\n    ],\n    \"lock_repositories\": true,\n    \"exclude_attachments\": true,\n    \"exclude\": [\n        \"repositories\",\n        \"repositories\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/migrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"repositories\": [\n        \"acme/widgets\",\n        \"acme/widgets\"\n    ],\n    \"lock_repositories\": true,\n    \"exclude_attachments\": true,\n    \"exclude\": [\n        \"repositories\",\n        \"repositories\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/migrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 79,\n \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n \"owner\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"guid\": \"0b989ba4-242f-11e5-81e1-c7b6966d2516\",\n \"state\": \"pending\",\n \"lock_repositories\": true,\n \"exclude_attachments\": false,\n \"repositories\": [\n  {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"is_template\": true,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"visibility\": \"public\",\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"template_repository\": null,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"delete_branch_on_merge\": true,\n   \"allow_merge_commit\": true,\n   \"subscribers_count\": 42,\n   \"network_count\": 0,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n    \"html_url\": \"https://api.github.com/licenses/mit\"\n   },\n   \"forks\": 1,\n   \"open_issues\": 1,\n   \"watchers\": 1\n  }\n ],\n \"url\": \"https://api.github.com/orgs/octo-org/migrations/79\",\n \"created_at\": \"2015-07-06T15:33:38-07:00\",\n \"updated_at\": \"2015-07-06T15:33:38-07:00\"\n}"
						}
					]
				},
				{
					"name": "List user migrations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/migrations?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"migrations"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Lists all migrations a user has started."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 79,\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"guid\": \"0b989ba4-242f-11e5-81e1-c7b6966d2516\",\n  \"state\": \"pending\",\n  \"lock_repositories\": true,\n  \"exclude_attachments\": false,\n  \"repositories\": [\n   {\n    \"id\": 1296269,\n    \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n    \"name\": \"Hello-World\",\n    \"full_name\": \"octocat/Hello-World\",\n    \"owner\": {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    },\n    \"private\": false,\n    \"html_url\": \"https://github.com/octocat/Hello-World\",\n    \"description\": \"This your first repo!\",\n    \"fork\": false,\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n    \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n    \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n    \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n    \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n    \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n    \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n    \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n    \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n    \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n    \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n    \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n    \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n    \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n    \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n    \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n    \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n    \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n    \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n    \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n    \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n    \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n    \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n    \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n    \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n    \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n    \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n    \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n    \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n    \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n    \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n    \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n    \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n    \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n    \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n    \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n    \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n    \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n    \"homepage\": \"https://github.com\",\n    \"language\": null,\n    \"forks_count\": 9,\n    \"stargazers_count\": 80,\n    \"watchers_count\": 80,\n    \"size\": 108,\n    \"default_branch\": \"master\",\n    \"open_issues_count\": 0,\n    \"is_template\": true,\n    \"topics\": [\n     \"octocat\",\n     \"atom\",\n     \"electron\",\n     \"api\"\n    ],\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n    \"has_pages\": false,\n    \"has_downloads\": true,\n    \"archived\": false,\n    \"disabled\": false,\n    \"visibility\": \"public\",\n    \"pushed_at\": \"2011-01-26T19:06:43Z\",\n    \"created_at\": \"2011-01-26T19:01:12Z\",\n    \"updated_at\": \"2011-01-26T19:14:43Z\",\n    \"permissions\": {\n     \"admin\": false,\n     \"push\": false,\n     \"pull\": true\n    },\n    \"allow_rebase_merge\": true,\n    \"template_repository\": null,\n    \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n    \"allow_squash_merge\": true,\n    \"delete_branch_on_merge\": true,\n    \"allow_merge_commit\": true,\n    \"subscribers_count\": 42,\n    \"network_count\": 0,\n    \"license\": {\n     \"key\": \"mit\",\n     \"name\": \"MIT License\",\n     \"url\": \"https://api.github.com/licenses/mit\",\n     \"spdx_id\": \"MIT\",\n     \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n     \"html_url\": \"https://api.github.com/licenses/mit\"\n    },\n    \"forks\": 1,\n    \"open_issues\": 1,\n    \"watchers\": 1\n   }\n  ],\n  \"url\": \"https://api.github.com/orgs/octo-org/migrations/79\",\n  \"created_at\": \"2015-07-06T15:33:38-07:00\",\n  \"updated_at\": \"2015-07-06T15:33:38-07:00\",\n  \"node_id\": \"MDQ6VXNlcjE=\"\n }\n]"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Download an organization migration archive",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/migrations/:migration_id/archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"migrations",
								":migration_id",
								"archive"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "migration_id",
									"value": "41891364",
									"description": "(Required) migration_id parameter"
								}
							]
						},
						"description": "Fetches the URL to a migration archive."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/migrations/:migration_id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"migrations",
										":migration_id",
										"archive"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/migrations/:migration_id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"migrations",
										":migration_id",
										"archive"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an organization migration archive",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/migrations/:migration_id/archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"migrations",
								":migration_id",
								"archive"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "migration_id",
									"value": "41891364",
									"description": "(Required) migration_id parameter"
								}
							]
						},
						"description": "Deletes a previous migration archive. Migration archives are automatically deleted after seven days."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/migrations/:migration_id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"migrations",
										":migration_id",
										"archive"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/migrations/:migration_id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"migrations",
										":migration_id",
										"archive"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get an organization migration status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/migrations/:migration_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"migrations",
								":migration_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "migration_id",
									"value": "41891364",
									"description": "(Required) migration_id parameter"
								}
							]
						},
						"description": "Fetches the status of a migration.\n\nThe `state` of a migration can be one of the following values:\n\n*   `pending`, which means the migration hasn't started yet.\n*   `exporting`, which means the migration is in progress.\n*   `exported`, which means the migration finished successfully.\n*   `failed`, which means the migration failed."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/migrations/:migration_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"migrations",
										":migration_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "*   `pending`, which means the migration hasn't started yet.\n*   `exporting`, which means the migration is in progress.\n*   `exported`, which means the migration finished successfully.\n*   `failed`, which means the migration failed.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/migrations/:migration_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"migrations",
										":migration_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 79,\n \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n \"owner\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": true\n },\n \"guid\": \"0b989ba4-242f-11e5-81e1-c7b6966d2516\",\n \"state\": \"exported\",\n \"lock_repositories\": true,\n \"exclude_attachments\": false,\n \"repositories\": [\n  {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"is_template\": true,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"visibility\": \"public\",\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"template_repository\": null,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"delete_branch_on_merge\": true,\n   \"allow_merge_commit\": true,\n   \"subscribers_count\": 42,\n   \"network_count\": 0,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n    \"html_url\": \"https://api.github.com/licenses/mit\"\n   },\n   \"forks\": 1,\n   \"open_issues\": 1,\n   \"watchers\": 1\n  }\n ],\n \"url\": \"https://api.github.com/orgs/octo-org/migrations/79\",\n \"created_at\": \"2015-07-06T15:33:38-07:00\",\n \"updated_at\": \"2015-07-06T15:33:38-07:00\"\n}"
						}
					]
				},
				{
					"name": "Delete a user migration archive",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/migrations/:migration_id/archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"migrations",
								":migration_id",
								"archive"
							],
							"variable": [
								{
									"key": "migration_id",
									"value": "41891364",
									"description": "(Required) migration_id parameter"
								}
							]
						},
						"description": "Deletes a previous migration archive. Downloadable migration archives are automatically deleted after seven days. Migration metadata, which is returned in the [List user migrations](https://developer.github.com/v3/migrations/users/#list-user-migrations) and [Get a user migration status](https://developer.github.com/v3/migrations/users/#get-a-user-migration-status) endpoints, will continue to be available even after an archive is deleted."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"archive"
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"archive"
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"archive"
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"archive"
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"archive"
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Download a user migration archive",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/migrations/:migration_id/archive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"migrations",
								":migration_id",
								"archive"
							],
							"variable": [
								{
									"key": "migration_id",
									"value": "41891364",
									"description": "(Required) migration_id parameter"
								}
							]
						},
						"description": "Fetches the URL to download the migration archive as a `tar.gz` file. Depending on the resources your repository uses, the migration archive can contain JSON files with data for these objects:\n\n*   attachments\n*   bases\n*   commit\\_comments\n*   issue\\_comments\n*   issue\\_events\n*   issues\n*   milestones\n*   organizations\n*   projects\n*   protected\\_branches\n*   pull\\_request\\_reviews\n*   pull\\_requests\n*   releases\n*   repositories\n*   review\\_comments\n*   schema\n*   users\n\nThe archive will also contain an `attachments` directory that includes all attachment files uploaded to GitHub.com and a `repositories` directory that contains the repository's Git data."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"archive"
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"archive"
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"archive"
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/migrations/:migration_id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"migrations",
										":migration_id",
										"archive"
									],
									"variable": [
										{
											"key": "migration_id"
										}
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Map a commit author",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"hubot@github.com\",\n    \"name\": \"Hubot the Robot\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/import/authors/:author_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"import",
								"authors",
								":author_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "author_id",
									"value": "41891364",
									"description": "(Required) author_id parameter"
								}
							]
						},
						"description": "Update an author's identity for the import. Your application can continue updating authors any time before you push new commits to the repository."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"hubot@github.com\",\n    \"name\": \"Hubot the Robot\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/import/authors/:author_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"import",
										"authors",
										":author_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "author_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"hubot@github.com\",\n    \"name\": \"Hubot the Robot\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/import/authors/:author_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"import",
										"authors",
										":author_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "author_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"hubot@github.com\",\n    \"name\": \"Hubot the Robot\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/import/authors/:author_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"import",
										"authors",
										":author_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "author_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 2268557,\n \"remote_id\": \"nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef\",\n \"remote_name\": \"nobody\",\n \"email\": \"hubot@github.com\",\n \"name\": \"Hubot\",\n \"url\": \"https://api.github.com/repos/octocat/socm/import/authors/2268557\",\n \"import_url\": \"https://api.github.com/repos/octocat/socm/import\"\n}"
						}
					]
				},
				{
					"name": "Get commit authors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/import/authors?since=aliquip sint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"import",
								"authors"
							],
							"query": [
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Each type of source control system represents authors in a different way. For example, a Git commit author has a display name and an email address, but a Subversion commit author just has a username. The GitHub Importer will make the author information valid, but the author might not be correct. For example, it will change the bare Subversion username `hubot` into something like `hubot <hubot@12341234-abab-fefe-8787-fedcba987654>`.\n\nThis endpoint and the [Map a commit author](https://developer.github.com/v3/migrations/source_imports/#map-a-commit-author) endpoint allow you to provide correct Git author information."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/import/authors?since=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"import",
										"authors"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/import/authors?since=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"import",
										"authors"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 2268557,\n  \"remote_id\": \"nobody@fc7da526-431c-80fe-3c8c-c148ff18d7ef\",\n  \"remote_name\": \"nobody\",\n  \"email\": \"hubot@github.com\",\n  \"name\": \"Hubot\",\n  \"url\": \"https://api.github.com/repos/octocat/socm/import/authors/2268557\",\n  \"import_url\": \"https://api.github.com/repos/octocat/socm/import\"\n },\n {\n  \"id\": 2268558,\n  \"remote_id\": \"svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef\",\n  \"remote_name\": \"svner\",\n  \"email\": \"svner@fc7da526-431c-80fe-3c8c-c148ff18d7ef\",\n  \"name\": \"svner\",\n  \"url\": \"https://api.github.com/repos/octocat/socm/import/authors/2268558\",\n  \"import_url\": \"https://api.github.com/repos/octocat/socm/import\"\n },\n {\n  \"id\": 2268559,\n  \"remote_id\": \"svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef\",\n  \"remote_name\": \"svner@example.com\",\n  \"email\": \"svner@example.com@fc7da526-431c-80fe-3c8c-c148ff18d7ef\",\n  \"name\": \"svner@example.com\",\n  \"url\": \"https://api.github.com/repos/octocat/socm/import/authors/2268559\",\n  \"import_url\": \"https://api.github.com/repos/octocat/socm/import\"\n }\n]"
						}
					]
				},
				{
					"name": "Update Git LFS preference",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"use_lfs\": \"opt_in\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/import/lfs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"import",
								"lfs"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "You can import repositories from Subversion, Mercurial, and TFS that include files larger than 100MB. This ability is powered by [Git LFS](https://git-lfs.github.com). You can learn more about our LFS feature and working with large files [on our help site](https://help.github.com/articles/versioning-large-files/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"use_lfs\": \"opt_in\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/import/lfs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"import",
										"lfs"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"vcs\": \"subversion\",\n \"use_lfs\": \"opt_in\",\n \"vcs_url\": \"http://svn.mycompany.com/svn/myproject\",\n \"status\": \"complete\",\n \"status_text\": \"Done\",\n \"has_large_files\": true,\n \"large_files_size\": 132331036,\n \"large_files_count\": 1,\n \"authors_count\": 4,\n \"url\": \"https://api.github.com/repos/octocat/socm/import\",\n \"html_url\": \"https://import.github.com/octocat/socm/import\",\n \"authors_url\": \"https://api.github.com/repos/octocat/socm/import/authors\",\n \"repository_url\": \"https://api.github.com/repos/octocat/socm\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"use_lfs\": \"opt_in\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/import/lfs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"import",
										"lfs"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				}
			],
			"description": "Move projects to or from GitHub.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "oauth-authorizations",
			"item": [
				{
					"name": "List your grants",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/applications/grants?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications",
								"grants"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nYou can use this API to list the set of OAuth applications that have been granted access to your account. Unlike the [list your authorizations](https://developer.github.com/v3/oauth_authorizations/#list-your-authorizations) API, this API does not manage individual tokens. This API will return one entry for each OAuth application that has been granted access to your account, regardless of the number of tokens an application has generated for your user. The list of OAuth applications returned matches what is shown on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized). The `scopes` returned are the union of scopes authorized for the application. For example, if an application has one token with `repo` scope and another token with `user` scope, the grant will return `[\"repo\", \"user\"]`."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/grants?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"grants"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/grants?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"grants"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/grants?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"grants"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"url\": \"https://api.github.com/applications/grants/1\",\n  \"app\": {\n   \"url\": \"http://my-github-app.com\",\n   \"name\": \"my github app\",\n   \"client_id\": \"abcde12345fghij67890\"\n  },\n  \"created_at\": \"2011-09-06T17:26:27Z\",\n  \"updated_at\": \"2011-09-06T20:39:23Z\",\n  \"scopes\": [\n   \"public_repo\"\n  ]\n }\n]"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/grants?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"grants"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/grants?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"grants"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Delete a grant",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/applications/grants/:grant_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications",
								"grants",
								":grant_id"
							],
							"variable": [
								{
									"key": "grant_id",
									"value": "41891364",
									"description": "(Required) grant_id parameter"
								}
							]
						},
						"description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nDeleting an OAuth application's grant will also delete all OAuth tokens associated with the application for your user. Once deleted, the application has no access to your account and is no longer listed on [the application authorizations settings screen within GitHub](https://github.com/settings/applications#authorized)."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/grants/:grant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"grants",
										":grant_id"
									],
									"variable": [
										{
											"key": "grant_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/grants/:grant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"grants",
										":grant_id"
									],
									"variable": [
										{
											"key": "grant_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/grants/:grant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"grants",
										":grant_id"
									],
									"variable": [
										{
											"key": "grant_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/grants/:grant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"grants",
										":grant_id"
									],
									"variable": [
										{
											"key": "grant_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get a single grant",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/applications/grants/:grant_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"applications",
								"grants",
								":grant_id"
							],
							"variable": [
								{
									"key": "grant_id",
									"value": "41891364",
									"description": "(Required) grant_id parameter"
								}
							]
						},
						"description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/grants/:grant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"grants",
										":grant_id"
									],
									"variable": [
										{
											"key": "grant_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/grants/:grant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"grants",
										":grant_id"
									],
									"variable": [
										{
											"key": "grant_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/grants/:grant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"grants",
										":grant_id"
									],
									"variable": [
										{
											"key": "grant_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/applications/grants/:grant_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"applications",
										"grants",
										":grant_id"
									],
									"variable": [
										{
											"key": "grant_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"url\": \"https://api.github.com/applications/grants/1\",\n \"app\": {\n  \"url\": \"http://my-github-app.com\",\n  \"name\": \"my github app\",\n  \"client_id\": \"abcde12345fghij67890\"\n },\n \"created_at\": \"2011-09-06T17:26:27Z\",\n \"updated_at\": \"2011-09-06T20:39:23Z\",\n \"scopes\": [\n  \"public_repo\"\n ]\n}"
						}
					]
				},
				{
					"name": "Create a new authorization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"ea proident occaecat in commodo\",\n    \"client_id\": \"eu \",\n    \"client_secret\": \"v\",\n    \"fingerprint\": \"esse ea ullamco eu voluptate\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/authorizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorizations"
							]
						},
						"description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nCreates OAuth tokens using [Basic Authentication](https://developer.github.com/v3/auth#basic-authentication). If you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"\n\nTo create tokens for a particular OAuth application using this endpoint, you must authenticate as the user you want to create an authorization for and provide the app's client ID and secret, found on your OAuth application's settings page. If your OAuth application intends to create multiple tokens for one user, use `fingerprint` to differentiate between them.\n\nYou can also create tokens on GitHub from the [personal access tokens settings](https://github.com/settings/tokens) page. Read more about these tokens in [the GitHub Help documentation](https://help.github.com/articles/creating-an-access-token-for-command-line-use).\n\nOrganizations that enforce SAML SSO require personal access tokens to be allowed. Read more about allowing tokens in [the GitHub Help documentation](https://help.github.com/articles/about-identity-and-access-management-with-saml-single-sign-on)."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"velit do Lorem minim reprehenderit\",\n    \"client_id\": \"ci\",\n    \"client_secret\": \"mini\",\n    \"fingerprint\": \"veniam aute ull\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"velit do Lorem minim reprehenderit\",\n    \"client_id\": \"ci\",\n    \"client_secret\": \"mini\",\n    \"fingerprint\": \"veniam aute ull\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"velit do Lorem minim reprehenderit\",\n    \"client_id\": \"ci\",\n    \"client_secret\": \"mini\",\n    \"fingerprint\": \"veniam aute ull\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"url\": \"https://api.github.com/authorizations/1\",\n \"scopes\": [\n  \"public_repo\"\n ],\n \"token\": \"abcdefgh12345678\",\n \"token_last_eight\": \"12345678\",\n \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\n \"app\": {\n  \"url\": \"http://my-github-app.com\",\n  \"name\": \"my github app\",\n  \"client_id\": \"abcde12345fghij67890\"\n },\n \"note\": \"optional note\",\n \"note_url\": \"http://optional/note/url\",\n \"updated_at\": \"2011-09-06T20:39:23Z\",\n \"created_at\": \"2011-09-06T17:26:27Z\",\n \"fingerprint\": \"\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"velit do Lorem minim reprehenderit\",\n    \"client_id\": \"ci\",\n    \"client_secret\": \"mini\",\n    \"fingerprint\": \"veniam aute ull\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"velit do Lorem minim reprehenderit\",\n    \"client_id\": \"ci\",\n    \"client_secret\": \"mini\",\n    \"fingerprint\": \"veniam aute ull\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations"
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"velit do Lorem minim reprehenderit\",\n    \"client_id\": \"ci\",\n    \"client_secret\": \"mini\",\n    \"fingerprint\": \"veniam aute ull\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List your authorizations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/authorizations?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorizations"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorizations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorizations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"url\": \"https://api.github.com/authorizations/1\",\n  \"scopes\": [\n   \"public_repo\"\n  ],\n  \"token\": \"\",\n  \"token_last_eight\": \"12345678\",\n  \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\n  \"app\": {\n   \"url\": \"http://my-github-app.com\",\n   \"name\": \"my github app\",\n   \"client_id\": \"abcde12345fghij67890\"\n  },\n  \"note\": \"optional note\",\n  \"note_url\": \"http://optional/note/url\",\n  \"updated_at\": \"2011-09-06T20:39:23Z\",\n  \"created_at\": \"2011-09-06T17:26:27Z\",\n  \"fingerprint\": \"jklmnop12345678\"\n }\n]"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorizations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorizations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorizations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get-or-create an authorization for a specific app and fingerprint",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_secret\": \"c\",\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"irure incididunt dolore\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/authorizations/clients/:client_id/:fingerprint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorizations",
								"clients",
								":client_id",
								":fingerprint"
							],
							"variable": [
								{
									"key": "client_id",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "fingerprint",
									"value": "aliquip sint",
									"description": "(Required) fingerprint parameter"
								}
							]
						},
						"description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nThis method will create a new authorization for the specified OAuth application, only if an authorization for that application and fingerprint do not already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. `fingerprint` is a unique string to distinguish an authorization from others created for the same client ID and user. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\""
					},
					"response": [
						{
							"name": "Response if returning an existing token",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_secret\": \"cu\",\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"reprehenderit in\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations/clients/:client_id/:fingerprint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										"clients",
										":client_id",
										":fingerprint"
									],
									"variable": [
										{
											"key": "client_id"
										},
										{
											"key": "fingerprint"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"url\": \"https://api.github.com/authorizations/1\",\n \"scopes\": [\n  \"public_repo\"\n ],\n \"token\": \"\",\n \"token_last_eight\": \"12345678\",\n \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\n \"app\": {\n  \"url\": \"http://my-github-app.com\",\n  \"name\": \"my github app\",\n  \"client_id\": \"abcde12345fghij67890\"\n },\n \"note\": \"optional note\",\n \"note_url\": \"http://optional/note/url\",\n \"updated_at\": \"2011-09-06T20:39:23Z\",\n \"created_at\": \"2011-09-06T17:26:27Z\",\n \"fingerprint\": \"jklmnop12345678\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_secret\": \"cu\",\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"reprehenderit in\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations/clients/:client_id/:fingerprint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										"clients",
										":client_id",
										":fingerprint"
									],
									"variable": [
										{
											"key": "client_id"
										},
										{
											"key": "fingerprint"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Response if returning a new token",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_secret\": \"cu\",\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"reprehenderit in\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations/clients/:client_id/:fingerprint",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										"clients",
										":client_id",
										":fingerprint"
									],
									"variable": [
										{
											"key": "client_id"
										},
										{
											"key": "fingerprint"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"url\": \"https://api.github.com/authorizations/1\",\n \"scopes\": [\n  \"public_repo\"\n ],\n \"token\": \"abcdefgh12345678\",\n \"token_last_eight\": \"12345678\",\n \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\n \"app\": {\n  \"url\": \"http://my-github-app.com\",\n  \"name\": \"my github app\",\n  \"client_id\": \"abcde12345fghij67890\"\n },\n \"note\": \"optional note\",\n \"note_url\": \"http://optional/note/url\",\n \"updated_at\": \"2011-09-06T20:39:23Z\",\n \"created_at\": \"2011-09-06T17:26:27Z\",\n \"fingerprint\": \"jklmnop12345678\"\n}"
						}
					]
				},
				{
					"name": "Delete an authorization",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/authorizations/:authorization_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorizations",
								":authorization_id"
							],
							"variable": [
								{
									"key": "authorization_id",
									"value": "41891364",
									"description": "(Required) authorization_id parameter"
								}
							]
						},
						"description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorizations/:authorization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										":authorization_id"
									],
									"variable": [
										{
											"key": "authorization_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorizations/:authorization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										":authorization_id"
									],
									"variable": [
										{
											"key": "authorization_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorizations/:authorization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										":authorization_id"
									],
									"variable": [
										{
											"key": "authorization_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorizations/:authorization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										":authorization_id"
									],
									"variable": [
										{
											"key": "authorization_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get a single authorization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/authorizations/:authorization_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorizations",
								":authorization_id"
							],
							"variable": [
								{
									"key": "authorization_id",
									"value": "41891364",
									"description": "(Required) authorization_id parameter"
								}
							]
						},
						"description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorizations/:authorization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										":authorization_id"
									],
									"variable": [
										{
											"key": "authorization_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"url\": \"https://api.github.com/authorizations/1\",\n \"scopes\": [\n  \"public_repo\"\n ],\n \"token\": \"\",\n \"token_last_eight\": \"12345678\",\n \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\n \"app\": {\n  \"url\": \"http://my-github-app.com\",\n  \"name\": \"my github app\",\n  \"client_id\": \"abcde12345fghij67890\"\n },\n \"note\": \"optional note\",\n \"note_url\": \"http://optional/note/url\",\n \"updated_at\": \"2011-09-06T20:39:23Z\",\n \"created_at\": \"2011-09-06T17:26:27Z\",\n \"fingerprint\": \"jklmnop12345678\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorizations/:authorization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										":authorization_id"
									],
									"variable": [
										{
											"key": "authorization_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorizations/:authorization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										":authorization_id"
									],
									"variable": [
										{
											"key": "authorization_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/authorizations/:authorization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										":authorization_id"
									],
									"variable": [
										{
											"key": "authorization_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update an existing authorization",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"add_scopes\": [\n        \"occaecat cillum\",\n        \"in aliquip\"\n    ],\n    \"remove_scopes\": [\n        \"ex enim irure amet\",\n        \"laboris fugiat\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"Excepteur Duis ad labore\",\n    \"fingerprint\": \"ea\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/authorizations/:authorization_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorizations",
								":authorization_id"
							],
							"variable": [
								{
									"key": "authorization_id",
									"value": "41891364",
									"description": "(Required) authorization_id parameter"
								}
							]
						},
						"description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"\n\nYou can only send one of these scope keys at a time."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"add_scopes\": [\n        \"quis\",\n        \"elit aliquip Excepteur Duis\"\n    ],\n    \"remove_scopes\": [\n        \"s\",\n        \"fugiat\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"laborum Ut\",\n    \"fingerprint\": \"la\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations/:authorization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										":authorization_id"
									],
									"variable": [
										{
											"key": "authorization_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"add_scopes\": [\n        \"quis\",\n        \"elit aliquip Excepteur Duis\"\n    ],\n    \"remove_scopes\": [\n        \"s\",\n        \"fugiat\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"laborum Ut\",\n    \"fingerprint\": \"la\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations/:authorization_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										":authorization_id"
									],
									"variable": [
										{
											"key": "authorization_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"url\": \"https://api.github.com/authorizations/1\",\n \"scopes\": [\n  \"public_repo\"\n ],\n \"token\": \"\",\n \"token_last_eight\": \"12345678\",\n \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\n \"app\": {\n  \"url\": \"http://my-github-app.com\",\n  \"name\": \"my github app\",\n  \"client_id\": \"abcde12345fghij67890\"\n },\n \"note\": \"optional note\",\n \"note_url\": \"http://optional/note/url\",\n \"updated_at\": \"2011-09-06T20:39:23Z\",\n \"created_at\": \"2011-09-06T17:26:27Z\",\n \"fingerprint\": \"jklmnop12345678\"\n}"
						}
					]
				},
				{
					"name": "Get-or-create an authorization for a specific app",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"client_secret\": \"adip\",\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"mollit aliqua nisi sunt\",\n    \"fingerprint\": \"officia\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/authorizations/clients/:client_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"authorizations",
								"clients",
								":client_id"
							],
							"variable": [
								{
									"key": "client_id",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).\n\n**Warning:** Apps must use the [web application flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow) to obtain OAuth tokens that work with GitHub SAML organizations. OAuth tokens created using the Authorizations API will be unable to access GitHub SAML organizations. For more information, see the [blog post](https://developer.github.com/changes/2019-11-05-deprecated-passwords-and-authorizations-api).\n\nCreates a new authorization for the specified OAuth application, only if an authorization for that application doesn't already exist for the user. The URL includes the 20 character client ID for the OAuth app that is requesting the token. It returns the user's existing authorization for the application if one is present. Otherwise, it creates and returns a new one.\n\nIf you have two-factor authentication setup, Basic Authentication for this endpoint requires that you use a one-time password (OTP) and your username and password instead of tokens. For more information, see \"[Working with two-factor authentication](https://developer.github.com/v3/auth/#working-with-two-factor-authentication).\"\n\n**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/)."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_secret\": \"comm\",\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"ipsum qui\",\n    \"fingerprint\": \"sunt do\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations/clients/:client_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										"clients",
										":client_id"
									],
									"variable": [
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_secret\": \"comm\",\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"ipsum qui\",\n    \"fingerprint\": \"sunt do\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations/clients/:client_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										"clients",
										":client_id"
									],
									"variable": [
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_secret\": \"comm\",\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"ipsum qui\",\n    \"fingerprint\": \"sunt do\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations/clients/:client_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										"clients",
										":client_id"
									],
									"variable": [
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "**Deprecation Notice:** GitHub will discontinue the [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/), which is used by integrations to create personal access tokens and OAuth tokens, and you must now create these tokens using our [web application flow](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#web-application-flow). The [OAuth Authorizations API](https://developer.github.com/v3/oauth_authorizations/) will be removed on November, 13, 2020. For more information, including scheduled brownouts, see the [blog post](https://developer.github.com/changes/2020-02-14-deprecating-oauth-auth-endpoint/).",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_secret\": \"comm\",\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"ipsum qui\",\n    \"fingerprint\": \"sunt do\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations/clients/:client_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										"clients",
										":client_id"
									],
									"variable": [
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"url\": \"https://api.github.com/authorizations/1\",\n \"scopes\": [\n  \"public_repo\"\n ],\n \"token\": \"abcdefgh12345678\",\n \"token_last_eight\": \"12345678\",\n \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\n \"app\": {\n  \"url\": \"http://my-github-app.com\",\n  \"name\": \"my github app\",\n  \"client_id\": \"abcde12345fghij67890\"\n },\n \"note\": \"optional note\",\n \"note_url\": \"http://optional/note/url\",\n \"updated_at\": \"2011-09-06T20:39:23Z\",\n \"created_at\": \"2011-09-06T17:26:27Z\",\n \"fingerprint\": \"\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_secret\": \"comm\",\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"ipsum qui\",\n    \"fingerprint\": \"sunt do\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations/clients/:client_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										"clients",
										":client_id"
									],
									"variable": [
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Response if returning an existing token",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"client_secret\": \"comm\",\n    \"scopes\": [\n        \"public_repo\",\n        \"user\"\n    ],\n    \"note\": \"Update all gems\",\n    \"note_url\": \"ipsum qui\",\n    \"fingerprint\": \"sunt do\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/authorizations/clients/:client_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"authorizations",
										"clients",
										":client_id"
									],
									"variable": [
										{
											"key": "client_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"url\": \"https://api.github.com/authorizations/1\",\n \"scopes\": [\n  \"public_repo\"\n ],\n \"token\": \"\",\n \"token_last_eight\": \"12345678\",\n \"hashed_token\": \"25f94a2a5c7fbaf499c665bc73d67c1c87e496da8985131633ee0a95819db2e8\",\n \"app\": {\n  \"url\": \"http://my-github-app.com\",\n  \"name\": \"my github app\",\n  \"client_id\": \"abcde12345fghij67890\"\n },\n \"note\": \"optional note\",\n \"note_url\": \"http://optional/note/url\",\n \"updated_at\": \"2011-09-06T20:39:23Z\",\n \"created_at\": \"2011-09-06T17:26:27Z\",\n \"fingerprint\": \"\"\n}"
						}
					]
				}
			],
			"description": "Manage access of OAuth applications",
			"protocolProfileBehavior": {}
		},
		{
			"name": "orgs",
			"item": [
				{
					"name": "List SAML SSO authorizations for an organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/credential-authorizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"credential-authorizations"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products).\n\nAn authenticated organization owner with the `read:org` scope can list all credential authorizations for an organization that uses SAML single sign-on (SSO). The credentials are either personal access tokens or SSH keys that organization members have authorized for the organization. For more information, see [About authentication with SAML single sign-on](https://help.github.com/en/articles/about-authentication-with-saml-single-sign-on)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/credential-authorizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"credential-authorizations"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"credential_id\": 161195,\n  \"credential_type\": \"personal access token\",\n  \"token_last_eight\": \"71c3fc11\",\n  \"credential_authorized_at\": \"2011-01-26T19:06:43Z\",\n  \"scopes\": [\n   \"user\",\n   \"repo\"\n  ]\n },\n {\n  \"login\": \"hubot\",\n  \"credential_id\": 161196,\n  \"credential_type\": \"personal access token\",\n  \"token_last_eight\": \"12345678\",\n  \"credential_authorized_at\": \"2019-03-29T19:06:43Z\",\n  \"scopes\": [\n   \"repo\"\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "List organization invitation teams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/invitations/:invitation_id/teams?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"invitations",
								":invitation_id",
								"teams"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "invitation_id",
									"value": "41891364",
									"description": "(Required) invitation_id parameter"
								}
							]
						},
						"description": "List all teams associated with an invitation. In order to see invitations in an organization, the authenticated user must be an organization owner."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/invitations/:invitation_id/teams?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"invitations",
										":invitation_id",
										"teams"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "invitation_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/invitations/:invitation_id/teams?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"invitations",
										":invitation_id",
										"teams"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "invitation_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDQ6VGVhbTE=\",\n  \"url\": \"https://api.github.com/teams/1\",\n  \"html_url\": \"https://api.github.com/teams/justice-league\",\n  \"name\": \"Justice League\",\n  \"slug\": \"justice-league\",\n  \"description\": \"A great team.\",\n  \"privacy\": \"closed\",\n  \"permission\": \"admin\",\n  \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n  \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n  \"parent\": null\n }\n]"
						}
					]
				},
				{
					"name": "List organization memberships for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/memberships/orgs?state=active&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"memberships",
								"orgs"
							],
							"query": [
								{
									"key": "state",
									"value": "active",
									"description": "Indicates the state of the memberships to return. Can be either `active` or `pending`. If not specified, the API returns both active and pending memberships."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						}
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/memberships/orgs?state=pending&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"memberships",
										"orgs"
									],
									"query": [
										{
											"key": "state",
											"value": "pending"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/memberships/orgs?state=pending&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"memberships",
										"orgs"
									],
									"query": [
										{
											"key": "state",
											"value": "pending"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/memberships/orgs?state=pending&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"memberships",
										"orgs"
									],
									"query": [
										{
											"key": "state",
											"value": "pending"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/memberships/orgs?state=pending&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"memberships",
										"orgs"
									],
									"query": [
										{
											"key": "state",
											"value": "pending"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/orgs/octocat/memberships/defunkt\",\n  \"state\": \"active\",\n  \"role\": \"admin\",\n  \"organization_url\": \"https://api.github.com/orgs/octocat\",\n  \"organization\": {\n   \"login\": \"github\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n   \"url\": \"https://api.github.com/orgs/github\",\n   \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n   \"events_url\": \"https://api.github.com/orgs/github/events\",\n   \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n   \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n   \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n   \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"description\": \"A great organization\"\n  },\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  }\n },\n {\n  \"url\": \"https://api.github.com/orgs/invitocat/memberships/defunkt\",\n  \"state\": \"pending\",\n  \"role\": \"admin\",\n  \"organization_url\": \"https://api.github.com/orgs/invitocat\",\n  \"organization\": {\n   \"login\": \"github\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n   \"url\": \"https://api.github.com/orgs/github\",\n   \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n   \"events_url\": \"https://api.github.com/orgs/github/events\",\n   \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n   \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n   \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n   \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"description\": \"A great organization\"\n  },\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  }\n }\n]"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/memberships/orgs?state=pending&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"memberships",
										"orgs"
									],
									"query": [
										{
											"key": "state",
											"value": "pending"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Remove outside collaborator from an organization",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/outside_collaborators/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"outside_collaborators",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Removing a user from this list will remove them from all the organization's repositories."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/outside_collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"outside_collaborators",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response if user is a member of the organization",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/outside_collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"outside_collaborators",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"You cannot specify an organization member to remove as an outside collaborator.\",\n \"documentation_url\": \"https://developer.github.com/v3/orgs/outside_collaborators/#remove-outside-collaborator\"\n}"
						}
					]
				},
				{
					"name": "Convert an organization member to outside collaborator",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/outside_collaborators/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"outside_collaborators",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "When an organization member is converted to an outside collaborator, they'll only have access to the repositories that their current team membership allows. The user will no longer be a member of the organization. For more information, see \"[Converting an organization member to an outside collaborator](https://help.github.com/articles/converting-an-organization-member-to-an-outside-collaborator/)\"."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/outside_collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"outside_collaborators",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "User was converted",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/outside_collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"outside_collaborators",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/outside_collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"outside_collaborators",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Cannot convert the last owner to an outside collaborator\",\n \"documentation_url\": \"https://developer.github.com/v3/orgs/outside_collaborators/#convert-member-to-outside-collaborator\"\n}"
						},
						{
							"name": "User is getting converted asynchronously",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/outside_collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"outside_collaborators",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get an organization membership for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/memberships/orgs/:org",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"memberships",
								"orgs",
								":org"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/memberships/orgs/:org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"memberships",
										"orgs",
										":org"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/orgs/invitocat/memberships/defunkt\",\n \"state\": \"pending\",\n \"role\": \"admin\",\n \"organization_url\": \"https://api.github.com/orgs/invitocat\",\n \"organization\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n  \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n  \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n  \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"description\": \"A great organization\"\n },\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/memberships/orgs/:org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"memberships",
										"orgs",
										":org"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/memberships/orgs/:org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"memberships",
										"orgs",
										":org"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update an organization membership for the authenticated user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"state\": \"active\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/memberships/orgs/:org",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"memberships",
								"orgs",
								":org"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"state\": \"active\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/memberships/orgs/:org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"memberships",
										"orgs",
										":org"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"state\": \"active\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/memberships/orgs/:org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"memberships",
										"orgs",
										":org"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"state\": \"active\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/memberships/orgs/:org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"memberships",
										"orgs",
										":org"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/orgs/octocat/memberships/defunkt\",\n \"state\": \"active\",\n \"role\": \"admin\",\n \"organization_url\": \"https://api.github.com/orgs/octocat\",\n \"organization\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n  \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n  \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n  \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"description\": \"A great organization\"\n },\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"state\": \"active\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/memberships/orgs/:org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"memberships",
										"orgs",
										":org"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get organization membership for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/memberships/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"memberships",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "In order to get a user's membership with an organization, the authenticated user must be an organization member."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/orgs/octocat/memberships/defunkt\",\n \"state\": \"active\",\n \"role\": \"admin\",\n \"organization_url\": \"https://api.github.com/orgs/octocat\",\n \"organization\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n  \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n  \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n  \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"description\": \"A great organization\"\n },\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n}"
						}
					]
				},
				{
					"name": "Remove organization membership for a user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/memberships/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"memberships",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "In order to remove a user's membership with an organization, the authenticated user must be an organization owner.\n\nIf the specified user is an active member of the organization, this will remove them from the organization. If the specified user has been invited to the organization, this will cancel their invitation. The specified user will receive an email notification in both cases."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Set organization membership for a user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\": \"member\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/memberships/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"memberships",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Only authenticated organization owners can add a member to the organization or update the member's role.\n\n*   If the authenticated user is _adding_ a member to the organization, the invited user will receive an email inviting them to the organization. The user's [membership status](https://developer.github.com/v3/orgs/members/#get-organization-membership-for-a-user) will be `pending` until they accept the invitation.\n    \n*   Authenticated users can _update_ a user's membership by passing the `role` parameter. If the authenticated user changes a member's role to `admin`, the affected user will receive an email notifying them that they've been made an organization owner. If the authenticated user changes an owner's role to `member`, no email will be sent.\n\n**Rate limits**\n\nTo prevent abuse, the authenticated user is limited to 50 organization invitations per 24 hour period. If the organization is more than one month old or on a paid plan, the limit is 500 invitations per 24 hour period."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"role\": \"member\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/orgs/invitocat/memberships/defunkt\",\n \"state\": \"pending\",\n \"role\": \"admin\",\n \"organization_url\": \"https://api.github.com/orgs/invitocat\",\n \"organization\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n  \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n  \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n  \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"description\": \"A great organization\"\n },\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"role\": \"member\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"role\": \"member\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get an organization webhook",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/hooks/:hook_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"hooks",
								":hook_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "hook_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"url\": \"https://api.github.com/orgs/octocat/hooks/1\",\n \"ping_url\": \"https://api.github.com/orgs/octocat/hooks/1/pings\",\n \"name\": \"web\",\n \"events\": [\n  \"push\",\n  \"pull_request\"\n ],\n \"active\": true,\n \"config\": {\n  \"url\": \"http://example.com\",\n  \"content_type\": \"json\"\n },\n \"updated_at\": \"2011-09-06T20:39:23Z\",\n \"created_at\": \"2011-09-06T17:26:27Z\",\n \"type\": \"Organization\"\n}"
						}
					]
				},
				{
					"name": "Delete an organization webhook",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/hooks/:hook_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"hooks",
								":hook_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "hook_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update an organization webhook",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": true,\n    \"events\": [\n        \"pull_request\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/hooks/:hook_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"hooks",
								":hook_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "hook_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": true,\n    \"events\": [\n        \"pull_request\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"url\": \"https://api.github.com/orgs/octocat/hooks/1\",\n \"ping_url\": \"https://api.github.com/orgs/octocat/hooks/1/pings\",\n \"name\": \"web\",\n \"events\": [\n  \"pull_request\"\n ],\n \"active\": true,\n \"config\": {\n  \"url\": \"http://example.com\",\n  \"content_type\": \"json\"\n },\n \"updated_at\": \"2011-09-06T20:39:23Z\",\n \"created_at\": \"2011-09-06T17:26:27Z\",\n \"type\": \"Organization\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": true,\n    \"events\": [\n        \"pull_request\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": true,\n    \"events\": [\n        \"pull_request\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List organizations for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/orgs?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"orgs"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "List [public organization memberships](https://help.github.com/articles/publicizing-or-concealing-organization-membership) for the specified user.\n\nThis method only lists _public_ memberships, regardless of authentication. If you need to fetch all of the organization memberships (public and private) for the authenticated user, use the [List organizations for the authenticated user](https://developer.github.com/v3/orgs/#list-organizations-for-the-authenticated-user) API instead."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/orgs?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"orgs"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n  \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n  \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n  \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"description\": \"A great organization\"\n }\n]"
						}
					]
				},
				{
					"name": "Get an organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "To see many of the organization response values, you need to be an authenticated organization owner with the `admin:org` scope. When the value of `two_factor_requirement_enabled` is `true`, the organization requires all members, billing managers, and outside collaborators to enable [two-factor authentication](https://help.github.com/articles/securing-your-account-with-two-factor-authentication-2fa/).\n\nGitHub Apps with the `Organization plan` permission can use this endpoint to retrieve information about an organization's GitHub plan. See \"[Authenticating with GitHub Apps](https://developer.github.com/apps/building-github-apps/authenticating-with-github-apps/)\" for details. For an example response, see \"[Response with GitHub plan information](https://developer.github.com/v3/orgs/#response-with-github-plan-information).\""
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"login\": \"github\",\n \"id\": 1,\n \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n \"url\": \"https://api.github.com/orgs/github\",\n \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n \"events_url\": \"https://api.github.com/orgs/github/events\",\n \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n \"description\": \"A great organization\",\n \"name\": \"github\",\n \"company\": \"GitHub\",\n \"blog\": \"https://github.com/blog\",\n \"location\": \"San Francisco\",\n \"email\": \"octocat@github.com\",\n \"twitter_username\": \"github\",\n \"is_verified\": true,\n \"has_organization_projects\": true,\n \"has_repository_projects\": true,\n \"public_repos\": 2,\n \"public_gists\": 1,\n \"followers\": 20,\n \"following\": 0,\n \"html_url\": \"https://github.com/octocat\",\n \"created_at\": \"2008-01-14T04:33:35Z\",\n \"updated_at\": \"2014-03-03T18:58:10Z\",\n \"type\": \"Organization\",\n \"total_private_repos\": 100,\n \"owned_private_repos\": 100,\n \"private_gists\": 81,\n \"disk_usage\": 10000,\n \"collaborators\": 8,\n \"billing_email\": \"mona@github.com\",\n \"plan\": {\n  \"name\": \"Medium\",\n  \"space\": 400,\n  \"private_repos\": 20\n },\n \"default_repository_permission\": \"read\",\n \"members_can_create_repositories\": true,\n \"two_factor_requirement_enabled\": true,\n \"members_allowed_repository_creation_type\": \"all\",\n \"members_can_create_public_repositories\": false,\n \"members_can_create_private_repositories\": false,\n \"members_can_create_internal_repositories\": false\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update an organization",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"billing_email\": \"mona@github.com\",\n    \"company\": \"GitHub\",\n    \"email\": \"mona@github.com\",\n    \"twitter_username\": \"github\",\n    \"location\": \"San Francisco\",\n    \"name\": \"github\",\n    \"description\": \"GitHub, the company.\",\n    \"default_repository_permission\": \"read\",\n    \"members_can_create_repositories\": true,\n    \"members_allowed_repository_creation_type\": \"all\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Parameter Deprecation Notice:** GitHub will replace and discontinue `members_allowed_repository_creation_type` in favor of more granular permissions. The new input parameters are `members_can_create_public_repositories`, `members_can_create_private_repositories` for all organizations and `members_can_create_internal_repositories` for organizations associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+. For more information, see the [blog post](https://developer.github.com/changes/2019-12-03-internal-visibility-changes).\n\nEnables an authenticated organization owner with the `admin:org` scope to update the organization's profile and member privileges."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"billing_email\": \"mona@github.com\",\n    \"company\": \"GitHub\",\n    \"email\": \"mona@github.com\",\n    \"twitter_username\": \"github\",\n    \"location\": \"San Francisco\",\n    \"name\": \"github\",\n    \"description\": \"GitHub, the company.\",\n    \"default_repository_permission\": \"read\",\n    \"members_can_create_repositories\": true,\n    \"members_allowed_repository_creation_type\": \"all\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"login\": \"github\",\n \"id\": 1,\n \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n \"url\": \"https://api.github.com/orgs/github\",\n \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n \"events_url\": \"https://api.github.com/orgs/github/events\",\n \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n \"description\": \"A great organization\",\n \"name\": \"github\",\n \"company\": \"GitHub\",\n \"blog\": \"https://github.com/blog\",\n \"location\": \"San Francisco\",\n \"email\": \"octocat@github.com\",\n \"twitter_username\": \"github\",\n \"is_verified\": true,\n \"has_organization_projects\": true,\n \"has_repository_projects\": true,\n \"public_repos\": 2,\n \"public_gists\": 1,\n \"followers\": 20,\n \"following\": 0,\n \"html_url\": \"https://github.com/octocat\",\n \"created_at\": \"2008-01-14T04:33:35Z\",\n \"type\": \"Organization\",\n \"total_private_repos\": 100,\n \"owned_private_repos\": 100,\n \"private_gists\": 81,\n \"disk_usage\": 10000,\n \"collaborators\": 8,\n \"billing_email\": \"mona@github.com\",\n \"plan\": {\n  \"name\": \"Medium\",\n  \"space\": 400,\n  \"private_repos\": 20\n },\n \"default_repository_permission\": \"read\",\n \"members_can_create_repositories\": true,\n \"two_factor_requirement_enabled\": true,\n \"members_allowed_repository_creation_type\": \"all\",\n \"members_can_create_public_repositories\": false,\n \"members_can_create_private_repositories\": false,\n \"members_can_create_internal_repositories\": false,\n \"updated_at\": \"2014-03-03T18:58:10Z\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"billing_email\": \"mona@github.com\",\n    \"company\": \"GitHub\",\n    \"email\": \"mona@github.com\",\n    \"twitter_username\": \"github\",\n    \"location\": \"San Francisco\",\n    \"name\": \"github\",\n    \"description\": \"GitHub, the company.\",\n    \"default_repository_permission\": \"read\",\n    \"members_can_create_repositories\": true,\n    \"members_allowed_repository_creation_type\": \"all\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"billing_email\": \"mona@github.com\",\n    \"company\": \"GitHub\",\n    \"email\": \"mona@github.com\",\n    \"twitter_username\": \"github\",\n    \"location\": \"San Francisco\",\n    \"name\": \"github\",\n    \"description\": \"GitHub, the company.\",\n    \"default_repository_permission\": \"read\",\n    \"members_can_create_repositories\": true,\n    \"members_allowed_repository_creation_type\": \"all\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"billing_email\": \"mona@github.com\",\n    \"company\": \"GitHub\",\n    \"email\": \"mona@github.com\",\n    \"twitter_username\": \"github\",\n    \"location\": \"San Francisco\",\n    \"name\": \"github\",\n    \"description\": \"GitHub, the company.\",\n    \"default_repository_permission\": \"read\",\n    \"members_can_create_repositories\": true,\n    \"members_allowed_repository_creation_type\": \"all\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						}
					]
				},
				{
					"name": "Ping an organization webhook",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/hooks/:hook_id/pings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"hooks",
								":hook_id",
								"pings"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "hook_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "This will trigger a [ping event](https://developer.github.com/webhooks/#ping-event) to be sent to the hook."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/hooks/:hook_id/pings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"hooks",
										":hook_id",
										"pings"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/hooks/:hook_id/pings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"hooks",
										":hook_id",
										"pings"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Check organization membership for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/members/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"members",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Check if a user is, publicly or privately, a member of the organization."
					},
					"response": [
						{
							"name": "Response if requester is an organization member and user is a member",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"members",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response if requester is an organization member and user is not a member",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"members",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response if requester is not an organization member",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"members",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove an organization member",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/members/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"members",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Removing a user from this list will remove them from all teams and they will no longer have any access to the organization's repositories."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"members",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"members",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List app installations for an organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/installations?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"installations"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists all GitHub Apps in an organization. The installation count includes all GitHub Apps installed on repositories in the organization. You must be an organization owner with `admin:read` scope to use this endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/installations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"installations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 1,\n \"installations\": [\n  {\n   \"id\": 25381,\n   \"account\": {\n    \"login\": \"octo-org\",\n    \"id\": 6811672,\n    \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjY4MTE2NzI=\",\n    \"avatar_url\": \"https://avatars3.githubusercontent.com/u/6811672?v=4\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octo-org\",\n    \"html_url\": \"https://github.com/octo-org\",\n    \"followers_url\": \"https://api.github.com/users/octo-org/followers\",\n    \"following_url\": \"https://api.github.com/users/octo-org/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octo-org/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octo-org/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octo-org/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octo-org/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octo-org/repos\",\n    \"events_url\": \"https://api.github.com/users/octo-org/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octo-org/received_events\",\n    \"type\": \"Organization\",\n    \"site_admin\": false\n   },\n   \"repository_selection\": \"selected\",\n   \"access_tokens_url\": \"https://api.github.com/app/installations/25381/access_tokens\",\n   \"repositories_url\": \"https://api.github.com/installation/repositories\",\n   \"html_url\": \"https://github.com/organizations/octo-org/settings/installations/25381\",\n   \"app_id\": 2218,\n   \"target_id\": 6811672,\n   \"target_type\": \"Organization\",\n   \"permissions\": {\n    \"deployments\": \"write\",\n    \"metadata\": \"read\",\n    \"pull_requests\": \"read\",\n    \"statuses\": \"read\"\n   },\n   \"events\": [\n    \"deployment\",\n    \"deployment_status\"\n   ],\n   \"created_at\": \"2017-05-16T08:47:09.000-07:00\",\n   \"updated_at\": \"2017-06-06T11:23:23.000-07:00\",\n   \"single_file_name\": null,\n   \"app_slug\": \"github-actions\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Remove public organization membership for the authenticated user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/public_members/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"public_members",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/public_members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"public_members",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Set public organization membership for the authenticated user",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/public_members/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"public_members",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "The user can publicize their own membership. (A user cannot publicize the membership for another user.)\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\""
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/public_members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"public_members",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/public_members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"public_members",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check public organization membership for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/public_members/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"public_members",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Response if user is not a public member",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/public_members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"public_members",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response if user is a public member",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/public_members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"public_members",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List outside collaborators for an organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/outside_collaborators?filter=2fa_disabled&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"outside_collaborators"
							],
							"query": [
								{
									"key": "filter",
									"value": "2fa_disabled",
									"description": "Filter the list of outside collaborators. Can be one of:  \n\\* `2fa_disabled`: Outside collaborators without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled.  \n\\* `all`: All outside collaborators."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "List all users who are outside collaborators of an organization."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/outside_collaborators?filter=2fa_disabled&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"outside_collaborators"
									],
									"query": [
										{
											"key": "filter",
											"value": "2fa_disabled"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						}
					]
				},
				{
					"name": "List pending organization invitations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/invitations?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"invitations"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/invitations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"invitations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"login\": \"monalisa\",\n  \"email\": \"octocat@github.com\",\n  \"role\": \"direct_member\",\n  \"created_at\": \"2016-11-30T06:46:10-08:00\",\n  \"inviter\": {\n   \"login\": \"other_user\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/other_user\",\n   \"html_url\": \"https://github.com/other_user\",\n   \"followers_url\": \"https://api.github.com/users/other_user/followers\",\n   \"following_url\": \"https://api.github.com/users/other_user/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/other_user/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/other_user/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/other_user/orgs\",\n   \"repos_url\": \"https://api.github.com/users/other_user/repos\",\n   \"events_url\": \"https://api.github.com/users/other_user/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/other_user/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"team_count\": 2,\n  \"invitation_team_url\": \"https://api.github.com/organizations/2/invitations/1/teams\"\n }\n]"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/invitations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"invitations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Create an organization invitation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"octocat@github.com\",\n    \"role\": \"direct_member\",\n    \"team_ids\": [\n        12,\n        26\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/invitations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"invitations"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Invite people to an organization by using their GitHub user ID or their email address. In order to create invitations in an organization, the authenticated user must be an organization owner.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"octocat@github.com\",\n    \"role\": \"direct_member\",\n    \"team_ids\": [\n        12,\n        26\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/invitations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"invitations"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"octocat@github.com\",\n    \"role\": \"direct_member\",\n    \"team_ids\": [\n        12,\n        26\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/invitations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"invitations"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"octocat@github.com\",\n    \"role\": \"direct_member\",\n    \"team_ids\": [\n        12,\n        26\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/invitations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"invitations"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"login\": \"monalisa\",\n \"email\": \"octocat@github.com\",\n \"role\": \"direct_member\",\n \"created_at\": \"2016-11-30T06:46:10-08:00\",\n \"inviter\": {\n  \"login\": \"other_user\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/other_user\",\n  \"html_url\": \"https://github.com/other_user\",\n  \"followers_url\": \"https://api.github.com/users/other_user/followers\",\n  \"following_url\": \"https://api.github.com/users/other_user/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/other_user/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/other_user/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/other_user/orgs\",\n  \"repos_url\": \"https://api.github.com/users/other_user/repos\",\n  \"events_url\": \"https://api.github.com/users/other_user/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/other_user/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"team_count\": 2,\n \"invitation_team_url\": \"https://api.github.com/organizations/2/invitations/1/teams\"\n}"
						}
					]
				},
				{
					"name": "List organizations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/organizations?since=aliquip sint&per_page=-27113311",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							],
							"query": [
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								}
							]
						},
						"description": "Lists all organizations, in the order that they were created on GitHub.\n\n**Note:** Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of organizations."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations?since=nisi reprehenderit&per_page=-27113311",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n  \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n  \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n  \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"description\": \"A great organization\"\n }\n]"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/organizations?since=nisi reprehenderit&per_page=-27113311",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List organization webhooks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/hooks?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"hooks"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/hooks?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"hooks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/hooks?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"hooks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"url\": \"https://api.github.com/orgs/octocat/hooks/1\",\n  \"ping_url\": \"https://api.github.com/orgs/octocat/hooks/1/pings\",\n  \"name\": \"web\",\n  \"events\": [\n   \"push\",\n   \"pull_request\"\n  ],\n  \"active\": true,\n  \"config\": {\n   \"url\": \"http://example.com\",\n   \"content_type\": \"json\"\n  },\n  \"updated_at\": \"2011-09-06T20:39:23Z\",\n  \"created_at\": \"2011-09-06T17:26:27Z\",\n  \"type\": \"Organization\"\n }\n]"
						}
					]
				},
				{
					"name": "Create an organization webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"web\",\n    \"active\": true,\n    \"events\": [\n        \"push\",\n        \"pull_request\"\n    ],\n    \"config\": {\n        \"url\": \"http://example.com/webhook\",\n        \"content_type\": \"json\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/hooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"hooks"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Here's how you can create a hook that posts payloads in JSON format:"
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"web\",\n    \"active\": true,\n    \"events\": [\n        \"push\",\n        \"pull_request\"\n    ],\n    \"config\": {\n        \"url\": \"http://example.com/webhook\",\n        \"content_type\": \"json\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"hooks"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"web\",\n    \"active\": true,\n    \"events\": [\n        \"push\",\n        \"pull_request\"\n    ],\n    \"config\": {\n        \"url\": \"http://example.com/webhook\",\n        \"content_type\": \"json\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"hooks"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"web\",\n    \"active\": true,\n    \"events\": [\n        \"push\",\n        \"pull_request\"\n    ],\n    \"config\": {\n        \"url\": \"http://example.com/webhook\",\n        \"content_type\": \"json\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"hooks"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"url\": \"https://api.github.com/orgs/octocat/hooks/1\",\n \"ping_url\": \"https://api.github.com/orgs/octocat/hooks/1/pings\",\n \"name\": \"web\",\n \"events\": [\n  \"push\",\n  \"pull_request\"\n ],\n \"active\": true,\n \"config\": {\n  \"url\": \"http://example.com\",\n  \"content_type\": \"json\"\n },\n \"updated_at\": \"2011-09-06T20:39:23Z\",\n \"created_at\": \"2011-09-06T17:26:27Z\",\n \"type\": \"Organization\"\n}"
						}
					]
				},
				{
					"name": "List users blocked by an organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/blocks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"blocks"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "List the users blocked by an organization."
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/blocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"blocks"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/blocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"blocks"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						}
					]
				},
				{
					"name": "Unblock a user from an organization",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/blocks/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"blocks",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Block a user from an organization",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/blocks/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"blocks",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Check if a user is blocked by an organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/blocks/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"blocks",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "If the user is blocked:",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "If the user is not blocked:",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List organization members",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/members?filter=2fa_disabled&role=member&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"members"
							],
							"query": [
								{
									"key": "filter",
									"value": "2fa_disabled",
									"description": "Filter members returned in the list. Can be one of:  \n\\* `2fa_disabled` - Members without [two-factor authentication](https://github.com/blog/1614-two-factor-authentication) enabled. Available for organization owners.  \n\\* `all` - All members the authenticated user can see."
								},
								{
									"key": "role",
									"value": "member",
									"description": "Filter members returned by their role. Can be one of:  \n\\* `all` - All members of the organization, regardless of role.  \n\\* `admin` - Organization owners.  \n\\* `member` - Non-owner organization members."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "List all users who are members of an organization. If the authenticated user is also a member of this organization then both concealed and public members will be returned."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/members?filter=2fa_disabled&role=member&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"members"
									],
									"query": [
										{
											"key": "filter",
											"value": "2fa_disabled"
										},
										{
											"key": "role",
											"value": "member"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/members?filter=2fa_disabled&role=member&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"members"
									],
									"query": [
										{
											"key": "filter",
											"value": "2fa_disabled"
										},
										{
											"key": "role",
											"value": "member"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						},
						{
							"name": "Response if requester is not an organization member",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/members?filter=2fa_disabled&role=member&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"members"
									],
									"query": [
										{
											"key": "filter",
											"value": "2fa_disabled"
										},
										{
											"key": "role",
											"value": "member"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List organizations for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/orgs?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"orgs"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "List organizations for the authenticated user.\n\n**OAuth scope requirements**\n\nThis only lists organizations that your authorization allows you to operate on in some way (e.g., you can list teams with `read:org` scope, you can publicize your organization membership with `user` scope, etc.). Therefore, this API requires at least `user` or `read:org` scope. OAuth requests with insufficient scope receive a `403 Forbidden` response."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/orgs?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"orgs"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n  \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n  \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n  \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"description\": \"A great organization\"\n }\n]"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/orgs?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"orgs"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/orgs?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"orgs"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/orgs?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"orgs"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Remove a SAML SSO authorization for an organization",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/credential-authorizations/:credential_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"credential-authorizations",
								":credential_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "credential_id",
									"value": "41891364",
									"description": "(Required) credential_id parameter"
								}
							]
						},
						"description": "Listing and deleting credential authorizations is available to organizations with GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products).\n\nAn authenticated organization owner with the `admin:org` scope can remove a credential authorization for an organization that uses SAML SSO. Once you remove someone's credential authorization, they will need to create a new personal access token or SSH key and authorize it for the organization they want to access."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/credential-authorizations/:credential_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"credential-authorizations",
										":credential_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "credential_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/credential-authorizations/:credential_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"credential-authorizations",
										":credential_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "credential_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List public organization members",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/public_members?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"public_members"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Members of an organization can choose to have their membership publicized or not."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/public_members?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"public_members"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						}
					]
				}
			],
			"description": "Interact with GitHub Orgs.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "projects",
			"item": [
				{
					"name": "List organization projects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/projects?state=all&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"projects"
							],
							"query": [
								{
									"key": "state",
									"value": "all",
									"description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists the projects in an organization. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/projects?state=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"projects"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/projects?state=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"projects"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"owner_url\": \"https://api.github.com/orgs/octocat\",\n  \"url\": \"https://api.github.com/projects/1002605\",\n  \"html_url\": \"https://github.com/orgs/api-playground/projects/1\",\n  \"columns_url\": \"https://api.github.com/projects/1002605/columns\",\n  \"id\": 1002605,\n  \"node_id\": \"MDc6UHJvamVjdDEwMDI2MDU=\",\n  \"name\": \"Organization Roadmap\",\n  \"body\": \"High-level roadmap for the upcoming year.\",\n  \"number\": 1,\n  \"state\": \"open\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"created_at\": \"2011-04-11T20:09:31Z\",\n  \"updated_at\": \"2014-03-04T18:58:10Z\"\n }\n]"
						}
					]
				},
				{
					"name": "Create an organization project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Organization Roadmap\",\n    \"body\": \"High-level roadmap for the upcoming year.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"projects"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Creates an organization project board. Returns a `404 Not Found` status if projects are disabled in the organization. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Organization Roadmap\",\n    \"body\": \"High-level roadmap for the upcoming year.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"projects"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"owner_url\": \"https://api.github.com/orgs/octocat\",\n \"url\": \"https://api.github.com/projects/1002605\",\n \"html_url\": \"https://github.com/orgs/api-playground/projects/1\",\n \"columns_url\": \"https://api.github.com/projects/1002605/columns\",\n \"id\": 1002605,\n \"node_id\": \"MDc6UHJvamVjdDEwMDI2MDU=\",\n \"name\": \"Organization Roadmap\",\n \"body\": \"High-level roadmap for the upcoming year.\",\n \"number\": 1,\n \"state\": \"open\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-11T20:09:31Z\",\n \"updated_at\": \"2014-03-04T18:58:10Z\"\n}"
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Organization Roadmap\",\n    \"body\": \"High-level roadmap for the upcoming year.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"projects"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Organization Roadmap\",\n    \"body\": \"High-level roadmap for the upcoming year.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"projects"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Organization Roadmap\",\n    \"body\": \"High-level roadmap for the upcoming year.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"projects"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Organization Roadmap\",\n    \"body\": \"High-level roadmap for the upcoming year.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"projects"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Organization Roadmap\",\n    \"body\": \"High-level roadmap for the upcoming year.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"projects"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Move a project column",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"position\": \"last\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/projects/columns/:column_id/moves",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"columns",
								":column_id",
								"moves"
							],
							"variable": [
								{
									"key": "column_id",
									"value": "41891364",
									"description": "(Required) column_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"position\": \"last\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id/moves",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id",
										"moves"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"position\": \"last\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id/moves",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id",
										"moves"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"position\": \"last\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id/moves",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id",
										"moves"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"position\": \"last\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id/moves",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id",
										"moves"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"position\": \"last\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id/moves",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id",
										"moves"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update an existing project card",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"note\": \"Update all gems\",\n    \"archived\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"columns",
								"cards",
								":card_id"
							],
							"variable": [
								{
									"key": "card_id",
									"value": "41891364",
									"description": "(Required) card_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"note\": \"Update all gems\",\n    \"archived\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"note\": \"Update all gems\",\n    \"archived\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"note\": \"Update all gems\",\n    \"archived\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"note\": \"Update all gems\",\n    \"archived\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"note\": \"Update all gems\",\n    \"archived\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"note\": \"Update all gems\",\n    \"archived\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/projects/columns/cards/1478\",\n \"id\": 1478,\n \"node_id\": \"MDExOlByb2plY3RDYXJkMTQ3OA==\",\n \"note\": \"Add payload for delete Project column\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2016-09-05T14:21:06Z\",\n \"updated_at\": \"2016-09-05T14:20:22Z\",\n \"archived\": false,\n \"column_url\": \"https://api.github.com/projects/columns/367\",\n \"content_url\": \"https://api.github.com/repos/api-playground/projects-test/issues/3\",\n \"project_url\": \"https://api.github.com/projects/120\"\n}"
						}
					]
				},
				{
					"name": "Get a project card",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"columns",
								"cards",
								":card_id"
							],
							"variable": [
								{
									"key": "card_id",
									"value": "41891364",
									"description": "(Required) card_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/projects/columns/cards/1478\",\n \"id\": 1478,\n \"node_id\": \"MDExOlByb2plY3RDYXJkMTQ3OA==\",\n \"note\": \"Add payload for delete Project column\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2016-09-05T14:21:06Z\",\n \"updated_at\": \"2016-09-05T14:20:22Z\",\n \"archived\": false,\n \"column_url\": \"https://api.github.com/projects/columns/367\",\n \"content_url\": \"https://api.github.com/repos/api-playground/projects-test/issues/3\",\n \"project_url\": \"https://api.github.com/projects/120\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Delete a project card",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"columns",
								"cards",
								":card_id"
							],
							"variable": [
								{
									"key": "card_id",
									"value": "41891364",
									"description": "(Required) card_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Lorem\",\n \"documentation_url\": \"ad nisi eiusmod elit\",\n \"errors\": [\n  \"officia ullamco nisi\",\n  \"labore elit cupidatat ullamco dolore\"\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a project column",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/columns/:column_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"columns",
								":column_id"
							],
							"variable": [
								{
									"key": "column_id",
									"value": "41891364",
									"description": "(Required) column_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/projects/columns/367\",\n \"project_url\": \"https://api.github.com/projects/120\",\n \"cards_url\": \"https://api.github.com/projects/columns/367/cards\",\n \"id\": 367,\n \"node_id\": \"MDEzOlByb2plY3RDb2x1bW4zNjc=\",\n \"name\": \"To Do\",\n \"created_at\": \"2016-09-05T14:18:44Z\",\n \"updated_at\": \"2016-09-05T14:22:28Z\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update an existing project column",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Remaining tasks\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/projects/columns/:column_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"columns",
								":column_id"
							],
							"variable": [
								{
									"key": "column_id",
									"value": "41891364",
									"description": "(Required) column_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Remaining tasks\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/projects/columns/367\",\n \"project_url\": \"https://api.github.com/projects/120\",\n \"cards_url\": \"https://api.github.com/projects/columns/367/cards\",\n \"id\": 367,\n \"node_id\": \"MDEzOlByb2plY3RDb2x1bW4zNjc=\",\n \"name\": \"To Do\",\n \"created_at\": \"2016-09-05T14:18:44Z\",\n \"updated_at\": \"2016-09-05T14:22:28Z\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Remaining tasks\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Remaining tasks\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Remaining tasks\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a project column",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/columns/:column_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"columns",
								":column_id"
							],
							"variable": [
								{
									"key": "column_id",
									"value": "41891364",
									"description": "(Required) column_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List user projects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/projects?state=all&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"projects"
							],
							"query": [
								{
									"key": "state",
									"value": "all",
									"description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/projects?state=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"projects"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/projects?state=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"projects"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"owner_url\": \"https://api.github.com/users/octocat\",\n  \"url\": \"https://api.github.com/projects/1002603\",\n  \"html_url\": \"https://github.com/users/octocat/projects/1\",\n  \"columns_url\": \"https://api.github.com/projects/1002603/columns\",\n  \"id\": 1002603,\n  \"node_id\": \"MDc6UHJvamVjdDEwMDI2MDM=\",\n  \"name\": \"My Projects\",\n  \"body\": \"A board to manage my personal projects.\",\n  \"number\": 1,\n  \"state\": \"open\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"created_at\": \"2011-04-10T20:09:31Z\",\n  \"updated_at\": \"2014-03-03T18:58:10Z\"\n }\n]"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/projects?state=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"projects"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a project",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/:project_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":project_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Deletes a project board. Returns a `404 Not Found` status if projects are disabled."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Lorem\",\n \"documentation_url\": \"ad nisi eiusmod elit\",\n \"errors\": [\n  \"officia ullamco nisi\",\n  \"labore elit cupidatat ullamco dolore\"\n ]\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Delete Success",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/:project_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":project_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Gets a project by its `id`. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"owner_url\": \"https://api.github.com/repos/api-playground/projects-test\",\n \"url\": \"https://api.github.com/projects/1002604\",\n \"html_url\": \"https://github.com/api-playground/projects-test/projects/1\",\n \"columns_url\": \"https://api.github.com/projects/1002604/columns\",\n \"id\": 1002604,\n \"node_id\": \"MDc6UHJvamVjdDEwMDI2MDQ=\",\n \"name\": \"Projects Documentation\",\n \"body\": \"Developer documentation project for the developer site.\",\n \"number\": 1,\n \"state\": \"open\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-10T20:09:31Z\",\n \"updated_at\": \"2014-03-03T18:58:10Z\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update a project",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Week One Sprint\",\n    \"body\": \"This project represents the sprint of the first week in January\",\n    \"state\": \"open\",\n    \"organization_permission\": \"admin\",\n    \"private\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/projects/:project_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":project_id"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Updates a project board's information. Returns a `404 Not Found` status if projects are disabled. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Week One Sprint\",\n    \"body\": \"This project represents the sprint of the first week in January\",\n    \"state\": \"open\",\n    \"organization_permission\": \"admin\",\n    \"private\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Week One Sprint\",\n    \"body\": \"This project represents the sprint of the first week in January\",\n    \"state\": \"open\",\n    \"organization_permission\": \"admin\",\n    \"private\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Response if the authenticated user does not have access to the project",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Week One Sprint\",\n    \"body\": \"This project represents the sprint of the first week in January\",\n    \"state\": \"open\",\n    \"organization_permission\": \"admin\",\n    \"private\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Week One Sprint\",\n    \"body\": \"This project represents the sprint of the first week in January\",\n    \"state\": \"open\",\n    \"organization_permission\": \"admin\",\n    \"private\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Lorem\",\n \"documentation_url\": \"ad nisi eiusmod elit\",\n \"errors\": [\n  \"officia ullamco nisi\",\n  \"labore elit cupidatat ullamco dolore\"\n ]\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Week One Sprint\",\n    \"body\": \"This project represents the sprint of the first week in January\",\n    \"state\": \"open\",\n    \"organization_permission\": \"admin\",\n    \"private\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Week One Sprint\",\n    \"body\": \"This project represents the sprint of the first week in January\",\n    \"state\": \"open\",\n    \"organization_permission\": \"admin\",\n    \"private\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Week One Sprint\",\n    \"body\": \"This project represents the sprint of the first week in January\",\n    \"state\": \"open\",\n    \"organization_permission\": \"admin\",\n    \"private\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"owner_url\": \"https://api.github.com/repos/api-playground/projects-test\",\n \"url\": \"https://api.github.com/projects/1002604\",\n \"html_url\": \"https://github.com/api-playground/projects-test/projects/1\",\n \"columns_url\": \"https://api.github.com/projects/1002604/columns\",\n \"id\": 1002604,\n \"node_id\": \"MDc6UHJvamVjdDEwMDI2MDQ=\",\n \"name\": \"Projects Documentation\",\n \"body\": \"Developer documentation project for the developer site.\",\n \"number\": 1,\n \"state\": \"open\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-10T20:09:31Z\",\n \"updated_at\": \"2014-03-03T18:58:10Z\"\n}"
						}
					]
				},
				{
					"name": "List project columns",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/:project_id/columns?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":project_id",
								"columns"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "project_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/columns?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"columns"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/columns?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"columns"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/columns?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"columns"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/columns?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"columns"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/projects/columns/367\",\n  \"project_url\": \"https://api.github.com/projects/120\",\n  \"cards_url\": \"https://api.github.com/projects/columns/367/cards\",\n  \"id\": 367,\n  \"node_id\": \"MDEzOlByb2plY3RDb2x1bW4zNjc=\",\n  \"name\": \"To Do\",\n  \"created_at\": \"2016-09-05T14:18:44Z\",\n  \"updated_at\": \"2016-09-05T14:22:28Z\"\n }\n]"
						}
					]
				},
				{
					"name": "Create a project column",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Remaining tasks\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/projects/:project_id/columns",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":project_id",
								"columns"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Remaining tasks\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/columns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"columns"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/projects/columns/367\",\n \"project_url\": \"https://api.github.com/projects/120\",\n \"cards_url\": \"https://api.github.com/projects/columns/367/cards\",\n \"id\": 367,\n \"node_id\": \"MDEzOlByb2plY3RDb2x1bW4zNjc=\",\n \"name\": \"To Do\",\n \"created_at\": \"2016-09-05T14:18:44Z\",\n \"updated_at\": \"2016-09-05T14:22:28Z\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Remaining tasks\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/columns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"columns"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Remaining tasks\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/columns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"columns"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Remaining tasks\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/columns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"columns"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Remaining tasks\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/columns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"columns"
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Create a project card",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"note\": \"Update all gems\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/projects/columns/:column_id/cards",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"columns",
								":column_id",
								"cards"
							],
							"variable": [
								{
									"key": "column_id",
									"value": "41891364",
									"description": "(Required) column_id parameter"
								}
							]
						},
						"description": "**Note**: GitHub's REST API v3 considers every pull request an issue, but not every issue is a pull request. For this reason, \"Issues\" endpoints may return both issues and pull requests in the response. You can identify pull requests by the `pull_request` key.\n\nBe aware that the `id` of a pull request returned from \"Issues\" endpoints will be an _issue id_. To find out the pull request id, use the \"[List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests)\" endpoint."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"note\": \"Update all gems\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id",
										"cards"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"note\": \"Update all gems\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id",
										"cards"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"note\": \"Update all gems\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id",
										"cards"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"Lorem voluptate mollit laboris\",\n \"message\": \"sit la\",\n \"documentation_url\": \"velit dolor ipsum\",\n \"errors\": [\n  {\n   \"code\": \"anim culpa\",\n   \"message\": \"ex aute\"\n  },\n  {\n   \"code\": \"ea cillum\",\n   \"message\": \"eu dolor\"\n  }\n ]\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"note\": \"Update all gems\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id",
										"cards"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"note\": \"Update all gems\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id",
										"cards"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"note\": \"Update all gems\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id/cards",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id",
										"cards"
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/projects/columns/cards/1478\",\n \"id\": 1478,\n \"node_id\": \"MDExOlByb2plY3RDYXJkMTQ3OA==\",\n \"note\": \"Add payload for delete Project column\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2016-09-05T14:21:06Z\",\n \"updated_at\": \"2016-09-05T14:20:22Z\",\n \"archived\": false,\n \"column_url\": \"https://api.github.com/projects/columns/367\",\n \"content_url\": \"https://api.github.com/repos/api-playground/projects-test/issues/3\",\n \"project_url\": \"https://api.github.com/projects/120\"\n}"
						}
					]
				},
				{
					"name": "List project cards",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/columns/:column_id/cards?archived_state=all&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"columns",
								":column_id",
								"cards"
							],
							"query": [
								{
									"key": "archived_state",
									"value": "all",
									"description": "Filters the project cards that are returned by the card's state. Can be one of `all`,`archived`, or `not_archived`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "column_id",
									"value": "41891364",
									"description": "(Required) column_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id/cards?archived_state=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id",
										"cards"
									],
									"query": [
										{
											"key": "archived_state",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id/cards?archived_state=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id",
										"cards"
									],
									"query": [
										{
											"key": "archived_state",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id/cards?archived_state=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id",
										"cards"
									],
									"query": [
										{
											"key": "archived_state",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/columns/:column_id/cards?archived_state=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										":column_id",
										"cards"
									],
									"query": [
										{
											"key": "archived_state",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "column_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/projects/columns/cards/1478\",\n  \"id\": 1478,\n  \"node_id\": \"MDExOlByb2plY3RDYXJkMTQ3OA==\",\n  \"note\": \"Add payload for delete Project column\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"created_at\": \"2016-09-05T14:21:06Z\",\n  \"updated_at\": \"2016-09-05T14:20:22Z\",\n  \"archived\": false,\n  \"column_url\": \"https://api.github.com/projects/columns/367\",\n  \"content_url\": \"https://api.github.com/repos/api-playground/projects-test/issues/3\",\n  \"project_url\": \"https://api.github.com/projects/120\"\n }\n]"
						}
					]
				},
				{
					"name": "Create a user project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Week One Sprint\",\n    \"body\": \"This project represents the sprint of the first week in January\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"projects"
							]
						}
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Week One Sprint\",\n    \"body\": \"This project represents the sprint of the first week in January\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"projects"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Week One Sprint\",\n    \"body\": \"This project represents the sprint of the first week in January\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"projects"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Week One Sprint\",\n    \"body\": \"This project represents the sprint of the first week in January\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"projects"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Week One Sprint\",\n    \"body\": \"This project represents the sprint of the first week in January\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"projects"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Week One Sprint\",\n    \"body\": \"This project represents the sprint of the first week in January\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"projects"
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Week One Sprint\",\n    \"body\": \"This project represents the sprint of the first week in January\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"projects"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"owner_url\": \"https://api.github.com/users/octocat\",\n \"url\": \"https://api.github.com/projects/1002603\",\n \"html_url\": \"https://github.com/users/octocat/projects/1\",\n \"columns_url\": \"https://api.github.com/projects/1002603/columns\",\n \"id\": 1002603,\n \"node_id\": \"MDc6UHJvamVjdDEwMDI2MDM=\",\n \"name\": \"My Projects\",\n \"body\": \"A board to manage my personal projects.\",\n \"number\": 1,\n \"state\": \"open\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-10T20:09:31Z\",\n \"updated_at\": \"2014-03-03T18:58:10Z\"\n}"
						}
					]
				},
				{
					"name": "Remove user as a collaborator",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":project_id",
								"collaborators",
								":username"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Removes a collaborator from an organization project. You must be an organization owner or a project `admin` to remove a collaborator."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Add project collaborator",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"permission\": \"write\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":project_id",
								"collaborators",
								":username"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Adds a collaborator to an organization project and sets their permission level. You must be an organization owner or a project `admin` to add a collaborator."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"write\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"write\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"write\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"write\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"write\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"write\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"write\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get project permission for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username/permission",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":project_id",
								"collaborators",
								":username",
								"permission"
							],
							"variable": [
								{
									"key": "project_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns the collaborator's permission level for an organization project. Possible values for the `permission` key: `admin`, `write`, `read`, `none`. You must be an organization owner or a project `admin` to review a user's permission level."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username/permission",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username",
										"permission"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"permission\": \"admin\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username/permission",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username",
										"permission"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username/permission",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username",
										"permission"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username/permission",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username",
										"permission"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username/permission",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username",
										"permission"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username/permission",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username",
										"permission"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators/:username/permission",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators",
										":username",
										"permission"
									],
									"variable": [
										{
											"key": "project_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						}
					]
				},
				{
					"name": "Create a repository project",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Projects Documentation\",\n    \"body\": \"Developer documentation project for the developer site.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/projects",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"projects"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Creates a repository project board. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Projects Documentation\",\n    \"body\": \"Developer documentation project for the developer site.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"projects"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"owner_url\": \"https://api.github.com/repos/api-playground/projects-test\",\n \"url\": \"https://api.github.com/projects/1002604\",\n \"html_url\": \"https://github.com/api-playground/projects-test/projects/1\",\n \"columns_url\": \"https://api.github.com/projects/1002604/columns\",\n \"id\": 1002604,\n \"node_id\": \"MDc6UHJvamVjdDEwMDI2MDQ=\",\n \"name\": \"Projects Documentation\",\n \"body\": \"Developer documentation project for the developer site.\",\n \"number\": 1,\n \"state\": \"open\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-10T20:09:31Z\",\n \"updated_at\": \"2014-03-03T18:58:10Z\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Projects Documentation\",\n    \"body\": \"Developer documentation project for the developer site.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"projects"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Projects Documentation\",\n    \"body\": \"Developer documentation project for the developer site.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"projects"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Projects Documentation\",\n    \"body\": \"Developer documentation project for the developer site.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"projects"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Projects Documentation\",\n    \"body\": \"Developer documentation project for the developer site.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"projects"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Projects Documentation\",\n    \"body\": \"Developer documentation project for the developer site.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"projects"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List repository projects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/projects?state=all&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"projects"
							],
							"query": [
								{
									"key": "state",
									"value": "all",
									"description": "Indicates the state of the projects to return. Can be either `open`, `closed`, or `all`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists the projects in a repository. Returns a `404 Not Found` status if projects are disabled in the repository. If you do not have sufficient privileges to perform this action, a `401 Unauthorized` or `410 Gone` status is returned."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/projects?state=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"projects"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/projects?state=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"projects"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/projects?state=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"projects"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/projects?state=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"projects"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/projects?state=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"projects"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"owner_url\": \"https://api.github.com/repos/api-playground/projects-test\",\n  \"url\": \"https://api.github.com/projects/1002604\",\n  \"html_url\": \"https://github.com/api-playground/projects-test/projects/1\",\n  \"columns_url\": \"https://api.github.com/projects/1002604/columns\",\n  \"id\": 1002604,\n  \"node_id\": \"MDc6UHJvamVjdDEwMDI2MDQ=\",\n  \"name\": \"Projects Documentation\",\n  \"body\": \"Developer documentation project for the developer site.\",\n  \"number\": 1,\n  \"state\": \"open\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"created_at\": \"2011-04-10T20:09:31Z\",\n  \"updated_at\": \"2014-03-03T18:58:10Z\"\n }\n]"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/projects?state=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"projects"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Move a project card",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"position\": \"bottom\",\n    \"column_id\": 42\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/projects/columns/cards/:card_id/moves",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"columns",
								"cards",
								":card_id",
								"moves"
							],
							"variable": [
								{
									"key": "card_id",
									"value": "41891364",
									"description": "(Required) card_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"position\": \"bottom\",\n    \"column_id\": 42\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id/moves",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id",
										"moves"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"position\": \"bottom\",\n    \"column_id\": 42\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id/moves",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id",
										"moves"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"Lorem voluptate mollit laboris\",\n \"message\": \"sit la\",\n \"documentation_url\": \"velit dolor ipsum\",\n \"errors\": [\n  {\n   \"code\": \"anim culpa\",\n   \"message\": \"ex aute\"\n  },\n  {\n   \"code\": \"ea cillum\",\n   \"message\": \"eu dolor\"\n  }\n ]\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"position\": \"bottom\",\n    \"column_id\": 42\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id/moves",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id",
										"moves"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"position\": \"bottom\",\n    \"column_id\": 42\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id/moves",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id",
										"moves"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"position\": \"bottom\",\n    \"column_id\": 42\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id/moves",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id",
										"moves"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Lorem in in dolor\",\n \"documentation_url\": \"enim non\",\n \"errors\": [\n  {\n   \"code\": \"nulla tempor deserunt\",\n   \"message\": \"mollit elit\",\n   \"resource\": \"id ex pariatur in\",\n   \"field\": \"enim pariatur aute dolor deserunt\"\n  },\n  {\n   \"code\": \"est eu \",\n   \"message\": \"esse consequat exercitation\",\n   \"resource\": \"est commodo exercitation\",\n   \"field\": \"cillum lab\"\n  }\n ]\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"position\": \"bottom\",\n    \"column_id\": 42\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/projects/columns/cards/:card_id/moves",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										"columns",
										"cards",
										":card_id",
										"moves"
									],
									"variable": [
										{
											"key": "card_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List project collaborators",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/:project_id/collaborators?affiliation=all&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								":project_id",
								"collaborators"
							],
							"query": [
								{
									"key": "affiliation",
									"value": "all",
									"description": "Filters the collaborators by their affiliation. Can be one of:  \n\\* `outside`: Outside collaborators of a project that are not a member of the project's organization.  \n\\* `direct`: Collaborators with permissions to a project, regardless of organization membership status.  \n\\* `all`: All collaborators the authenticated user can see."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "project_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists the collaborators for an organization project. For a project, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners. You must be an organization owner or a project `admin` to list collaborators."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators?affiliation=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators"
									],
									"query": [
										{
											"key": "affiliation",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators?affiliation=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators"
									],
									"query": [
										{
											"key": "affiliation",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators?affiliation=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators"
									],
									"query": [
										{
											"key": "affiliation",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators?affiliation=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators"
									],
									"query": [
										{
											"key": "affiliation",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators?affiliation=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators"
									],
									"query": [
										{
											"key": "affiliation",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators?affiliation=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators"
									],
									"query": [
										{
											"key": "affiliation",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:project_id/collaborators?affiliation=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":project_id",
										"collaborators"
									],
									"query": [
										{
											"key": "affiliation",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Interact with GitHub Projects.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "pulls",
			"item": [
				{
					"name": "Delete a review comment for a pull request",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								"comments",
								":comment_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						},
						"description": "Deletes a review comment."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a review comment for a pull request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								"comments",
								":comment_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						},
						"description": "**Note:** Multi-line comments on pull requests are currently in public beta and subject to change.\n\nProvides details for a review comment.\n\n**Multi-line comment summary**\n\n**Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for full details.\n\nUse the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.\n\nIf you use the `comfort-fade` preview header, your response will show:\n\n*   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.\n*   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.\n\nIf you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:\n\n*   For multi-line comments, the last line of the comment range for the `position` attribute.\n*   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://developer.github.com/v3/pulls/comments/#parameters-2) table.\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\",\n \"pull_request_review_id\": 42,\n \"id\": 10,\n \"node_id\": \"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\",\n \"diff_hunk\": \"@@ -16,33 +16,40 @@ public class Connection : IConnection...\",\n \"path\": \"file1.txt\",\n \"position\": 1,\n \"original_position\": 4,\n \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"original_commit_id\": \"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\",\n \"in_reply_to_id\": 8,\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Great stuff!\",\n \"created_at\": \"2011-04-14T16:00:49Z\",\n \"updated_at\": \"2011-04-14T16:00:49Z\",\n \"html_url\": \"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\",\n \"pull_request_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1\",\n \"author_association\": \"NONE\",\n \"_links\": {\n  \"self\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"\n  },\n  \"html\": {\n   \"href\": \"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"\n  },\n  \"pull_request\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1\"\n  }\n },\n \"start_line\": 1,\n \"original_start_line\": 1,\n \"start_side\": \"RIGHT\",\n \"line\": 2,\n \"original_line\": 2,\n \"side\": \"RIGHT\"\n}"
						}
					]
				},
				{
					"name": "Update a review comment for a pull request",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"I like this too!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								"comments",
								":comment_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						},
						"description": "**Note:** Multi-line comments on pull requests are currently in public beta and subject to change.\n\nEnables you to edit a review comment.\n\n**Multi-line comment summary**\n\n**Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for full details.\n\nUse the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.\n\nIf you use the `comfort-fade` preview header, your response will show:\n\n*   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.\n*   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.\n\nIf you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:\n\n*   For multi-line comments, the last line of the comment range for the `position` attribute.\n*   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://developer.github.com/v3/pulls/comments/#parameters-2) table."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"I like this too!\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\",\n \"pull_request_review_id\": 42,\n \"id\": 10,\n \"node_id\": \"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\",\n \"diff_hunk\": \"@@ -16,33 +16,40 @@ public class Connection : IConnection...\",\n \"path\": \"file1.txt\",\n \"position\": 1,\n \"original_position\": 4,\n \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"original_commit_id\": \"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\",\n \"in_reply_to_id\": 8,\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Great stuff!\",\n \"created_at\": \"2011-04-14T16:00:49Z\",\n \"updated_at\": \"2011-04-14T16:00:49Z\",\n \"html_url\": \"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\",\n \"pull_request_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1\",\n \"author_association\": \"NONE\",\n \"_links\": {\n  \"self\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"\n  },\n  \"html\": {\n   \"href\": \"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"\n  },\n  \"pull_request\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1\"\n  }\n },\n \"start_line\": 1,\n \"original_start_line\": 1,\n \"start_side\": \"RIGHT\",\n \"line\": 2,\n \"original_line\": 2,\n \"side\": \"RIGHT\"\n}"
						}
					]
				},
				{
					"name": "List review comments on a pull request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/comments?sort=created&direction=asc&since=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"comments"
							],
							"query": [
								{
									"key": "sort",
									"value": "created",
									"description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to)."
								},
								{
									"key": "direction",
									"value": "asc",
									"description": "Can be either `asc` or `desc`. Ignored without `sort` parameter."
								},
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Note:** Multi-line comments on pull requests are currently in public beta and subject to change.\n\nLists all review comments for a pull request. By default, review comments are in ascending order by ID.\n\n**Multi-line comment summary**\n\n**Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for full details.\n\nUse the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.\n\nIf you use the `comfort-fade` preview header, your response will show:\n\n*   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.\n*   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.\n\nIf you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:\n\n*   For multi-line comments, the last line of the comment range for the `position` attribute.\n*   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://developer.github.com/v3/pulls/comments/#parameters-2) table.\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/comments?sort=created&direction=asc&since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"comments"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\",\n  \"pull_request_review_id\": 42,\n  \"id\": 10,\n  \"node_id\": \"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\",\n  \"diff_hunk\": \"@@ -16,33 +16,40 @@ public class Connection : IConnection...\",\n  \"path\": \"file1.txt\",\n  \"position\": 1,\n  \"original_position\": 4,\n  \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"original_commit_id\": \"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\",\n  \"in_reply_to_id\": 8,\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"body\": \"Great stuff!\",\n  \"created_at\": \"2011-04-14T16:00:49Z\",\n  \"updated_at\": \"2011-04-14T16:00:49Z\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\",\n  \"pull_request_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1\",\n  \"author_association\": \"NONE\",\n  \"_links\": {\n   \"self\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"\n   },\n   \"html\": {\n    \"href\": \"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"\n   },\n   \"pull_request\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1\"\n   }\n  },\n  \"start_line\": 1,\n  \"original_start_line\": 1,\n  \"start_side\": \"RIGHT\",\n  \"line\": 2,\n  \"original_line\": 2,\n  \"side\": \"RIGHT\"\n }\n]"
						}
					]
				},
				{
					"name": "Create a review comment for a pull request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"Let's add this deleted line back.\",\n    \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n    \"path\": \"file1.txt\",\n    \"line\": 5,\n    \"side\": \"LEFT\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"comments"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Note:** Multi-line comments on pull requests are currently in public beta and subject to change.\n\nCreates a review comment in the pull request diff. To add a regular comment to a pull request timeline, see \"[Create an issue comment](https://developer.github.com/v3/issues/comments/#create-an-issue-comment).\" We recommend creating a review comment using `line`, `side`, and optionally `start_line` and `start_side` if your comment applies to more than one line in the pull request diff.\n\nYou can still create a review comment using the `position` parameter. When you use `position`, the `line`, `side`, `start_line`, and `start_side` parameters are not required. For more information, see [Multi-line comment summary](https://developer.github.com/v3/pulls/comments/#multi-line-comment-summary-3).\n\n**Note:** The position value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.\n\n**Multi-line comment summary**\n\n**Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for full details.\n\nUse the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.\n\nIf you use the `comfort-fade` preview header, your response will show:\n\n*   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.\n*   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.\n\nIf you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:\n\n*   For multi-line comments, the last line of the comment range for the `position` attribute.\n*   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://developer.github.com/v3/pulls/comments/#parameters-2) table."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Let's add this deleted line back.\",\n    \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n    \"path\": \"file1.txt\",\n    \"line\": 5,\n    \"side\": \"LEFT\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"comments"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Let's add this deleted line back.\",\n    \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n    \"path\": \"file1.txt\",\n    \"line\": 5,\n    \"side\": \"LEFT\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"comments"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Let's add this deleted line back.\",\n    \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n    \"path\": \"file1.txt\",\n    \"line\": 5,\n    \"side\": \"LEFT\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"comments"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\",\n \"pull_request_review_id\": 42,\n \"id\": 10,\n \"node_id\": \"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\",\n \"diff_hunk\": \"@@ -16,33 +16,40 @@ public class Connection : IConnection...\",\n \"path\": \"file1.txt\",\n \"position\": 1,\n \"original_position\": 4,\n \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"original_commit_id\": \"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\",\n \"in_reply_to_id\": 8,\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Great stuff!\",\n \"created_at\": \"2011-04-14T16:00:49Z\",\n \"updated_at\": \"2011-04-14T16:00:49Z\",\n \"html_url\": \"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\",\n \"pull_request_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1\",\n \"author_association\": \"NONE\",\n \"_links\": {\n  \"self\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"\n  },\n  \"html\": {\n   \"href\": \"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"\n  },\n  \"pull_request\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1\"\n  }\n },\n \"start_line\": 1,\n \"original_start_line\": 1,\n \"start_side\": \"RIGHT\",\n \"line\": 2,\n \"original_line\": 2,\n \"side\": \"RIGHT\"\n}"
						}
					]
				},
				{
					"name": "List review comments in a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments?sort=created&direction=asc&since=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								"comments"
							],
							"query": [
								{
									"key": "sort",
									"value": "created",
									"description": "One of `created` (when the repository was starred) or `updated` (when it was last pushed to)."
								},
								{
									"key": "direction",
									"value": "asc",
									"description": "Can be either `asc` or `desc`. Ignored without `sort` parameter."
								},
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Note:** Multi-line comments on pull requests are currently in public beta and subject to change.\n\nLists review comments for all pull requests in a repository. By default, review comments are in ascending order by ID.\n\n**Multi-line comment summary**\n\n**Note:** New parameters and response fields are available for developers to preview. During the preview period, these response fields may change without advance notice. Please see the [blog post](https://developer.github.com/changes/2019-10-03-multi-line-comments) for full details.\n\nUse the `comfort-fade` preview header and the `line` parameter to show multi-line comment-supported fields in the response.\n\nIf you use the `comfort-fade` preview header, your response will show:\n\n*   For multi-line comments, values for `start_line`, `original_start_line`, `start_side`, `line`, `original_line`, and `side`.\n*   For single-line comments, values for `line`, `original_line`, and `side` and a `null` value for `start_line`, `original_start_line`, and `start_side`.\n\nIf you don't use the `comfort-fade` preview header, multi-line and single-line comments will appear the same way in the response with a single `position` attribute. Your response will show:\n\n*   For multi-line comments, the last line of the comment range for the `position` attribute.\n*   For single-line comments, the diff-positioned way of referencing comments for the `position` attribute. For more information, see `position` in the [input parameters](https://developer.github.com/v3/pulls/comments/#parameters-2) table.\n\nThe `reactions` key will have the following payload where `url` can be used to construct the API location for [listing and creating](https://developer.github.com/v3/reactions) reactions."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments?sort=created&direction=asc&since=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										"comments"
									],
									"query": [
										{
											"key": "sort",
											"value": "created"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\",\n  \"pull_request_review_id\": 42,\n  \"id\": 10,\n  \"node_id\": \"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\",\n  \"diff_hunk\": \"@@ -16,33 +16,40 @@ public class Connection : IConnection...\",\n  \"path\": \"file1.txt\",\n  \"position\": 1,\n  \"original_position\": 4,\n  \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"original_commit_id\": \"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\",\n  \"in_reply_to_id\": 8,\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"body\": \"Great stuff!\",\n  \"created_at\": \"2011-04-14T16:00:49Z\",\n  \"updated_at\": \"2011-04-14T16:00:49Z\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\",\n  \"pull_request_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1\",\n  \"author_association\": \"NONE\",\n  \"_links\": {\n   \"self\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"\n   },\n   \"html\": {\n    \"href\": \"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"\n   },\n   \"pull_request\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1\"\n   }\n  },\n  \"start_line\": 1,\n  \"original_start_line\": 1,\n  \"start_side\": \"RIGHT\",\n  \"line\": 2,\n  \"original_line\": 2,\n  \"side\": \"RIGHT\"\n }\n]"
						}
					]
				},
				{
					"name": "Update a review for a pull request",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"This is close to perfect! Please address the suggested inline change. And add more about this.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"reviews",
								":review_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "review_id",
									"value": "41891364",
									"description": "(Required) review_id parameter"
								}
							]
						},
						"description": "Update the review summary comment with new text."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"This is close to perfect! Please address the suggested inline change. And add more about this.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 80,\n \"node_id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"This is close to perfect! Please address the suggested inline change. And add more about this.\",\n \"state\": \"CHANGES_REQUESTED\",\n \"html_url\": \"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\",\n \"pull_request_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/12\",\n \"_links\": {\n  \"html\": {\n   \"href\": \"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"\n  },\n  \"pull_request\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/12\"\n  }\n },\n \"submitted_at\": \"2019-11-17T17:43:43Z\",\n \"commit_id\": \"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\n \"author_association\": \"collaborator\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"This is close to perfect! Please address the suggested inline change. And add more about this.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a review for a pull request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"reviews",
								":review_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "review_id",
									"value": "41891364",
									"description": "(Required) review_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 80,\n \"node_id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Here is the body for the review.\",\n \"state\": \"APPROVED\",\n \"html_url\": \"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\",\n \"pull_request_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/12\",\n \"_links\": {\n  \"html\": {\n   \"href\": \"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"\n  },\n  \"pull_request\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/12\"\n  }\n },\n \"submitted_at\": \"2019-11-17T17:43:43Z\",\n \"commit_id\": \"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\n \"author_association\": \"collaborator\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Delete a pending review for a pull request",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"reviews",
								":review_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "review_id",
									"value": "41891364",
									"description": "(Required) review_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 80,\n \"node_id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"This is close to perfect! Please address the suggested inline change.\",\n \"state\": \"CHANGES_REQUESTED\",\n \"html_url\": \"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\",\n \"pull_request_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/12\",\n \"_links\": {\n  \"html\": {\n   \"href\": \"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"\n  },\n  \"pull_request\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/12\"\n  }\n },\n \"submitted_at\": \"2019-11-17T17:43:43Z\",\n \"commit_id\": \"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\n \"author_association\": \"collaborator\"\n}"
						}
					]
				},
				{
					"name": "Dismiss a review for a pull request",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"pariatur pr\",\n    \"event\": \"\\\"APPROVE\\\"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/dismissals",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"reviews",
								":review_id",
								"dismissals"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "review_id",
									"value": "41891364",
									"description": "(Required) review_id parameter"
								}
							]
						},
						"description": "**Note:** To dismiss a pull request review on a [protected branch](https://developer.github.com/v3/repos/branches/), you must be a repository administrator or be included in the list of people or teams who can dismiss pull request reviews."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"pariatur pr\",\n    \"event\": \"\\\"APPROVE\\\"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/dismissals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id",
										"dismissals"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 80,\n \"node_id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Here is the body for the review.\",\n \"state\": \"DISMISSED\",\n \"html_url\": \"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\",\n \"pull_request_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/12\",\n \"_links\": {\n  \"html\": {\n   \"href\": \"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"\n  },\n  \"pull_request\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/12\"\n  }\n },\n \"submitted_at\": \"2019-11-17T17:43:43Z\",\n \"commit_id\": \"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\n \"author_association\": \"collaborator\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"pariatur pr\",\n    \"event\": \"\\\"APPROVE\\\"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/dismissals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id",
										"dismissals"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"pariatur pr\",\n    \"event\": \"\\\"APPROVE\\\"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/dismissals",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id",
										"dismissals"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						}
					]
				},
				{
					"name": "List requested reviewers for a pull request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/requested_reviewers?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"requested_reviewers"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/requested_reviewers?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"requested_reviewers"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"users\": [\n  {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  }\n ],\n \"teams\": [\n  {\n   \"id\": 1,\n   \"node_id\": \"MDQ6VGVhbTE=\",\n   \"url\": \"https://api.github.com/teams/1\",\n   \"html_url\": \"https://api.github.com/teams/justice-league\",\n   \"name\": \"Justice League\",\n   \"slug\": \"justice-league\",\n   \"description\": \"A great team.\",\n   \"privacy\": \"closed\",\n   \"permission\": \"admin\",\n   \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n   \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n   \"parent\": null\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Request reviewers for a pull request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reviewers\": [\n        \"octocat\",\n        \"hubot\",\n        \"other_user\"\n    ],\n    \"team_reviewers\": [\n        \"justice-league\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/requested_reviewers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"requested_reviewers"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reviewers\": [\n        \"octocat\",\n        \"hubot\",\n        \"other_user\"\n    ],\n    \"team_reviewers\": [\n        \"justice-league\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/requested_reviewers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"requested_reviewers"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reviewers\": [\n        \"octocat\",\n        \"hubot\",\n        \"other_user\"\n    ],\n    \"team_reviewers\": [\n        \"justice-league\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/requested_reviewers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"requested_reviewers"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n \"id\": 1,\n \"node_id\": \"MDExOlB1bGxSZXF1ZXN0MQ==\",\n \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\",\n \"issue_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\",\n \"review_comments_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\",\n \"review_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"number\": 1347,\n \"state\": \"open\",\n \"locked\": true,\n \"title\": \"Amazing new feature\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Please pull these awesome changes in!\",\n \"labels\": [\n  {\n   \"id\": 208045946,\n   \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n   \"name\": \"bug\",\n   \"description\": \"Something isn't working\",\n   \"color\": \"f29513\",\n   \"default\": true\n  }\n ],\n \"milestone\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n  \"id\": 1002604,\n  \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n  \"number\": 1,\n  \"state\": \"open\",\n  \"title\": \"v1.0\",\n  \"description\": \"Tracking milestone for version 1.0\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"open_issues\": 4,\n  \"closed_issues\": 8,\n  \"created_at\": \"2011-04-10T20:09:31Z\",\n  \"updated_at\": \"2014-03-03T18:58:10Z\",\n  \"closed_at\": \"2013-02-12T13:22:01Z\",\n  \"due_on\": \"2012-10-09T23:39:01Z\"\n },\n \"active_lock_reason\": \"too heated\",\n \"created_at\": \"2011-01-26T19:01:12Z\",\n \"updated_at\": \"2011-01-26T19:01:12Z\",\n \"closed_at\": \"2011-01-26T19:01:12Z\",\n \"merged_at\": \"2011-01-26T19:01:12Z\",\n \"merge_commit_sha\": \"e5bd3914e2e596debea16f433f57875b5b90bcd6\",\n \"assignee\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"assignees\": [\n  {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  {\n   \"login\": \"hubot\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/hubot_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/hubot\",\n   \"html_url\": \"https://github.com/hubot\",\n   \"followers_url\": \"https://api.github.com/users/hubot/followers\",\n   \"following_url\": \"https://api.github.com/users/hubot/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/hubot/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/hubot/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/hubot/orgs\",\n   \"repos_url\": \"https://api.github.com/users/hubot/repos\",\n   \"events_url\": \"https://api.github.com/users/hubot/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/hubot/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  }\n ],\n \"requested_reviewers\": [\n  {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  {\n   \"login\": \"hubot\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/hubot_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/hubot\",\n   \"html_url\": \"https://github.com/hubot\",\n   \"followers_url\": \"https://api.github.com/users/hubot/followers\",\n   \"following_url\": \"https://api.github.com/users/hubot/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/hubot/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/hubot/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/hubot/orgs\",\n   \"repos_url\": \"https://api.github.com/users/hubot/repos\",\n   \"events_url\": \"https://api.github.com/users/hubot/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/hubot/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  },\n  {\n   \"login\": \"other_user\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/other_user\",\n   \"html_url\": \"https://github.com/other_user\",\n   \"followers_url\": \"https://api.github.com/users/other_user/followers\",\n   \"following_url\": \"https://api.github.com/users/other_user/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/other_user/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/other_user/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/other_user/orgs\",\n   \"repos_url\": \"https://api.github.com/users/other_user/repos\",\n   \"events_url\": \"https://api.github.com/users/other_user/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/other_user/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  }\n ],\n \"requested_teams\": [\n  {\n   \"id\": 1,\n   \"node_id\": \"MDQ6VGVhbTE=\",\n   \"url\": \"https://api.github.com/teams/1\",\n   \"html_url\": \"https://api.github.com/teams/justice-league\",\n   \"name\": \"Justice League\",\n   \"slug\": \"justice-league\",\n   \"description\": \"A great team.\",\n   \"privacy\": \"closed\",\n   \"permission\": \"admin\",\n   \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n   \"repositories_url\": \"https://api.github.com/teams/1/repos\"\n  }\n ],\n \"head\": {\n  \"label\": \"octocat:new-topic\",\n  \"ref\": \"new-topic\",\n  \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"repo\": {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"is_template\": true,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"visibility\": \"public\",\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"template_repository\": null,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"delete_branch_on_merge\": true,\n   \"allow_merge_commit\": true,\n   \"subscribers_count\": 42,\n   \"network_count\": 0,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n    \"html_url\": \"https://github.com/licenses/mit\"\n   },\n   \"forks\": 1,\n   \"open_issues\": 1,\n   \"watchers\": 1\n  }\n },\n \"base\": {\n  \"label\": \"octocat:master\",\n  \"ref\": \"master\",\n  \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"repo\": {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"is_template\": true,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"visibility\": \"public\",\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"template_repository\": null,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"delete_branch_on_merge\": true,\n   \"allow_merge_commit\": true,\n   \"subscribers_count\": 42,\n   \"network_count\": 0,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n    \"html_url\": \"https://api.github.com/licenses/mit\"\n   },\n   \"forks\": 1,\n   \"open_issues\": 1,\n   \"watchers\": 1\n  }\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"\n  },\n  \"html\": {\n   \"href\": \"https://github.com/octocat/Hello-World/pull/1347\"\n  },\n  \"issue\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\"\n  },\n  \"comments\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"\n  },\n  \"review_comments\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"\n  },\n  \"review_comment\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"\n  },\n  \"commits\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"\n  },\n  \"statuses\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n  }\n },\n \"author_association\": \"OWNER\",\n \"draft\": false\n}"
						},
						{
							"name": "Response if user is not a collaborator",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reviewers\": [\n        \"octocat\",\n        \"hubot\",\n        \"other_user\"\n    ],\n    \"team_reviewers\": [\n        \"justice-league\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/requested_reviewers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"requested_reviewers"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove requested reviewers from a pull request",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reviewers\": [\n        \"octocat\",\n        \"hubot\",\n        \"other_user\"\n    ],\n    \"team_reviewers\": [\n        \"justice-league\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/requested_reviewers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"requested_reviewers"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reviewers\": [\n        \"octocat\",\n        \"hubot\",\n        \"other_user\"\n    ],\n    \"team_reviewers\": [\n        \"justice-league\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/requested_reviewers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"requested_reviewers"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reviewers\": [\n        \"octocat\",\n        \"hubot\",\n        \"other_user\"\n    ],\n    \"team_reviewers\": [\n        \"justice-league\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/requested_reviewers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"requested_reviewers"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a pull request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists details of a pull request by providing its number.\n\nWhen you get, [create](https://developer.github.com/v3/pulls/#create-a-pull-request), or [edit](https://developer.github.com/v3/pulls/#update-a-pull-request) a pull request, GitHub creates a merge commit to test whether the pull request can be automatically merged into the base branch. This test commit is not added to the base branch or the head branch. You can review the status of the test commit using the `mergeable` key. For more information, see \"[Checking mergeability of pull requests](https://developer.github.com/v3/git/#checking-mergeability-of-pull-requests)\".\n\nThe value of the `mergeable` attribute can be `true`, `false`, or `null`. If the value is `null`, then GitHub has started a background job to compute the mergeability. After giving the job time to complete, resubmit the request. When the job finishes, you will see a non-`null` value for the `mergeable` attribute in the response. If `mergeable` is `true`, then `merge_commit_sha` will be the SHA of the _test_ merge commit.\n\nThe value of the `merge_commit_sha` attribute changes depending on the state of the pull request. Before merging a pull request, the `merge_commit_sha` attribute holds the SHA of the _test_ merge commit. After merging a pull request, the `merge_commit_sha` attribute changes depending on how you merged the pull request:\n\n*   If merged as a [merge commit](https://help.github.com/articles/about-merge-methods-on-github/), `merge_commit_sha` represents the SHA of the merge commit.\n*   If merged via a [squash](https://help.github.com/articles/about-merge-methods-on-github/#squashing-your-merge-commits), `merge_commit_sha` represents the SHA of the squashed commit on the base branch.\n*   If [rebased](https://help.github.com/articles/about-merge-methods-on-github/#rebasing-and-merging-your-commits), `merge_commit_sha` represents the commit that the base branch was updated to.\n\nPass the appropriate [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats."
					},
					"response": [
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Pass the appropriate [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n \"id\": 1,\n \"node_id\": \"MDExOlB1bGxSZXF1ZXN0MQ==\",\n \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\",\n \"issue_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\",\n \"review_comments_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\",\n \"review_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"number\": 1347,\n \"state\": \"open\",\n \"locked\": true,\n \"title\": \"Amazing new feature\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Please pull these awesome changes in!\",\n \"labels\": [\n  {\n   \"id\": 208045946,\n   \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n   \"name\": \"bug\",\n   \"description\": \"Something isn't working\",\n   \"color\": \"f29513\",\n   \"default\": true\n  }\n ],\n \"milestone\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n  \"id\": 1002604,\n  \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n  \"number\": 1,\n  \"state\": \"open\",\n  \"title\": \"v1.0\",\n  \"description\": \"Tracking milestone for version 1.0\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"open_issues\": 4,\n  \"closed_issues\": 8,\n  \"created_at\": \"2011-04-10T20:09:31Z\",\n  \"updated_at\": \"2014-03-03T18:58:10Z\",\n  \"closed_at\": \"2013-02-12T13:22:01Z\",\n  \"due_on\": \"2012-10-09T23:39:01Z\"\n },\n \"active_lock_reason\": \"too heated\",\n \"created_at\": \"2011-01-26T19:01:12Z\",\n \"updated_at\": \"2011-01-26T19:01:12Z\",\n \"closed_at\": \"2011-01-26T19:01:12Z\",\n \"merged_at\": \"2011-01-26T19:01:12Z\",\n \"merge_commit_sha\": \"e5bd3914e2e596debea16f433f57875b5b90bcd6\",\n \"assignee\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"assignees\": [\n  {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  {\n   \"login\": \"hubot\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/hubot_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/hubot\",\n   \"html_url\": \"https://github.com/hubot\",\n   \"followers_url\": \"https://api.github.com/users/hubot/followers\",\n   \"following_url\": \"https://api.github.com/users/hubot/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/hubot/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/hubot/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/hubot/orgs\",\n   \"repos_url\": \"https://api.github.com/users/hubot/repos\",\n   \"events_url\": \"https://api.github.com/users/hubot/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/hubot/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  }\n ],\n \"requested_reviewers\": [\n  {\n   \"login\": \"other_user\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/other_user\",\n   \"html_url\": \"https://github.com/other_user\",\n   \"followers_url\": \"https://api.github.com/users/other_user/followers\",\n   \"following_url\": \"https://api.github.com/users/other_user/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/other_user/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/other_user/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/other_user/orgs\",\n   \"repos_url\": \"https://api.github.com/users/other_user/repos\",\n   \"events_url\": \"https://api.github.com/users/other_user/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/other_user/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  }\n ],\n \"requested_teams\": [\n  {\n   \"id\": 1,\n   \"node_id\": \"MDQ6VGVhbTE=\",\n   \"url\": \"https://api.github.com/teams/1\",\n   \"html_url\": \"https://api.github.com/teams/justice-league\",\n   \"name\": \"Justice League\",\n   \"slug\": \"justice-league\",\n   \"description\": \"A great team.\",\n   \"privacy\": \"closed\",\n   \"permission\": \"admin\",\n   \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n   \"repositories_url\": \"https://api.github.com/teams/1/repos\"\n  }\n ],\n \"head\": {\n  \"label\": \"octocat:new-topic\",\n  \"ref\": \"new-topic\",\n  \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"repo\": {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"allow_merge_commit\": true,\n   \"forks\": 123,\n   \"open_issues\": 123,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n   },\n   \"watchers\": 123\n  }\n },\n \"base\": {\n  \"label\": \"octocat:master\",\n  \"ref\": \"master\",\n  \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"repo\": {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"allow_merge_commit\": true,\n   \"forks\": 123,\n   \"open_issues\": 123,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n   },\n   \"watchers\": 123\n  }\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"\n  },\n  \"html\": {\n   \"href\": \"https://github.com/octocat/Hello-World/pull/1347\"\n  },\n  \"issue\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\"\n  },\n  \"comments\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"\n  },\n  \"review_comments\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"\n  },\n  \"review_comment\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"\n  },\n  \"commits\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"\n  },\n  \"statuses\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n  }\n },\n \"author_association\": \"OWNER\",\n \"draft\": false,\n \"merged\": false,\n \"mergeable\": true,\n \"rebaseable\": true,\n \"mergeable_state\": \"clean\",\n \"merged_by\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"comments\": 10,\n \"review_comments\": 0,\n \"maintainer_can_modify\": true,\n \"commits\": 3,\n \"additions\": 100,\n \"deletions\": 3,\n \"changed_files\": 5\n}"
						}
					]
				},
				{
					"name": "Update a pull request",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"new title\",\n    \"body\": \"updated body\",\n    \"state\": \"open\",\n    \"base\": \"master\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"new title\",\n    \"body\": \"updated body\",\n    \"state\": \"open\",\n    \"base\": \"master\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"new title\",\n    \"body\": \"updated body\",\n    \"state\": \"open\",\n    \"base\": \"master\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"new title\",\n    \"body\": \"updated body\",\n    \"state\": \"open\",\n    \"base\": \"master\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n \"id\": 1,\n \"node_id\": \"MDExOlB1bGxSZXF1ZXN0MQ==\",\n \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\",\n \"issue_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\",\n \"review_comments_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\",\n \"review_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"number\": 1347,\n \"state\": \"open\",\n \"locked\": true,\n \"title\": \"Amazing new feature\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Please pull these awesome changes in!\",\n \"labels\": [\n  {\n   \"id\": 208045946,\n   \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n   \"name\": \"bug\",\n   \"description\": \"Something isn't working\",\n   \"color\": \"f29513\",\n   \"default\": true\n  }\n ],\n \"milestone\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n  \"id\": 1002604,\n  \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n  \"number\": 1,\n  \"state\": \"open\",\n  \"title\": \"v1.0\",\n  \"description\": \"Tracking milestone for version 1.0\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"open_issues\": 4,\n  \"closed_issues\": 8,\n  \"created_at\": \"2011-04-10T20:09:31Z\",\n  \"updated_at\": \"2014-03-03T18:58:10Z\",\n  \"closed_at\": \"2013-02-12T13:22:01Z\",\n  \"due_on\": \"2012-10-09T23:39:01Z\"\n },\n \"active_lock_reason\": \"too heated\",\n \"created_at\": \"2011-01-26T19:01:12Z\",\n \"updated_at\": \"2011-01-26T19:01:12Z\",\n \"closed_at\": \"2011-01-26T19:01:12Z\",\n \"merged_at\": \"2011-01-26T19:01:12Z\",\n \"merge_commit_sha\": \"e5bd3914e2e596debea16f433f57875b5b90bcd6\",\n \"assignee\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"assignees\": [\n  {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  {\n   \"login\": \"hubot\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/hubot_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/hubot\",\n   \"html_url\": \"https://github.com/hubot\",\n   \"followers_url\": \"https://api.github.com/users/hubot/followers\",\n   \"following_url\": \"https://api.github.com/users/hubot/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/hubot/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/hubot/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/hubot/orgs\",\n   \"repos_url\": \"https://api.github.com/users/hubot/repos\",\n   \"events_url\": \"https://api.github.com/users/hubot/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/hubot/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  }\n ],\n \"requested_reviewers\": [\n  {\n   \"login\": \"other_user\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/other_user\",\n   \"html_url\": \"https://github.com/other_user\",\n   \"followers_url\": \"https://api.github.com/users/other_user/followers\",\n   \"following_url\": \"https://api.github.com/users/other_user/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/other_user/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/other_user/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/other_user/orgs\",\n   \"repos_url\": \"https://api.github.com/users/other_user/repos\",\n   \"events_url\": \"https://api.github.com/users/other_user/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/other_user/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  }\n ],\n \"requested_teams\": [\n  {\n   \"id\": 1,\n   \"node_id\": \"MDQ6VGVhbTE=\",\n   \"url\": \"https://api.github.com/teams/1\",\n   \"html_url\": \"https://api.github.com/teams/justice-league\",\n   \"name\": \"Justice League\",\n   \"slug\": \"justice-league\",\n   \"description\": \"A great team.\",\n   \"privacy\": \"closed\",\n   \"permission\": \"admin\",\n   \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n   \"repositories_url\": \"https://api.github.com/teams/1/repos\"\n  }\n ],\n \"head\": {\n  \"label\": \"octocat:new-topic\",\n  \"ref\": \"new-topic\",\n  \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"repo\": {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"allow_merge_commit\": true,\n   \"forks\": 123,\n   \"open_issues\": 123,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n   },\n   \"watchers\": 123\n  }\n },\n \"base\": {\n  \"label\": \"octocat:master\",\n  \"ref\": \"master\",\n  \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"repo\": {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"allow_merge_commit\": true,\n   \"forks\": 123,\n   \"open_issues\": 123,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n   },\n   \"watchers\": 123\n  }\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"\n  },\n  \"html\": {\n   \"href\": \"https://github.com/octocat/Hello-World/pull/1347\"\n  },\n  \"issue\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\"\n  },\n  \"comments\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"\n  },\n  \"review_comments\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"\n  },\n  \"review_comment\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"\n  },\n  \"commits\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"\n  },\n  \"statuses\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n  }\n },\n \"author_association\": \"OWNER\",\n \"draft\": false,\n \"merged\": false,\n \"mergeable\": true,\n \"rebaseable\": true,\n \"mergeable_state\": \"clean\",\n \"merged_by\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"comments\": 10,\n \"review_comments\": 0,\n \"maintainer_can_modify\": true,\n \"commits\": 3,\n \"additions\": 100,\n \"deletions\": 3,\n \"changed_files\": 5\n}"
						}
					]
				},
				{
					"name": "Create a review for a pull request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"commit_id\": \"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\n    \"body\": \"This is close to perfect! Please address the suggested inline change.\",\n    \"event\": \"REQUEST_CHANGES\",\n    \"comments\": [\n        {\n            \"path\": \"file.md\",\n            \"position\": 6,\n            \"body\": \"Please add more information here, and fix this typo.\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"reviews"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.\n\nPull request reviews created in the `PENDING` state do not include the `submitted_at` property in the response.\n\n**Note:** To comment on a specific line in a file, you need to first determine the _position_ of that line in the diff. The GitHub REST API v3 offers the `application/vnd.github.v3.diff` [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests). To see a pull request diff, add this media type to the `Accept` header of a call to the [single pull request](https://developer.github.com/v3/pulls/#get-a-pull-request) endpoint.\n\nThe `position` value equals the number of lines down from the first \"@@\" hunk header in the file you want to add a comment. The line just below the \"@@\" line is position 1, the next line is position 2, and so on. The position in the diff continues to increase through lines of whitespace and additional hunks until the beginning of a new file."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"commit_id\": \"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\n    \"body\": \"This is close to perfect! Please address the suggested inline change.\",\n    \"event\": \"REQUEST_CHANGES\",\n    \"comments\": [\n        {\n            \"path\": \"file.md\",\n            \"position\": 6,\n            \"body\": \"Please add more information here, and fix this typo.\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 80,\n \"node_id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"This is close to perfect! Please address the suggested inline change.\",\n \"state\": \"CHANGES_REQUESTED\",\n \"html_url\": \"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\",\n \"pull_request_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/12\",\n \"_links\": {\n  \"html\": {\n   \"href\": \"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"\n  },\n  \"pull_request\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/12\"\n  }\n },\n \"submitted_at\": \"2019-11-17T17:43:43Z\",\n \"commit_id\": \"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\n \"author_association\": \"collaborator\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"commit_id\": \"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\n    \"body\": \"This is close to perfect! Please address the suggested inline change.\",\n    \"event\": \"REQUEST_CHANGES\",\n    \"comments\": [\n        {\n            \"path\": \"file.md\",\n            \"position\": 6,\n            \"body\": \"Please add more information here, and fix this typo.\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"commit_id\": \"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\n    \"body\": \"This is close to perfect! Please address the suggested inline change.\",\n    \"event\": \"REQUEST_CHANGES\",\n    \"comments\": [\n        {\n            \"path\": \"file.md\",\n            \"position\": 6,\n            \"body\": \"Please add more information here, and fix this typo.\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						}
					]
				},
				{
					"name": "List reviews for a pull request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"reviews"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "The list of reviews returns in chronological order."
					},
					"response": [
						{
							"name": "The list of reviews returns in chronological order.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 80,\n  \"node_id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"body\": \"Here is the body for the review.\",\n  \"state\": \"APPROVED\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\",\n  \"pull_request_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/12\",\n  \"_links\": {\n   \"html\": {\n    \"href\": \"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"\n   },\n   \"pull_request\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/12\"\n   }\n  },\n  \"submitted_at\": \"2019-11-17T17:43:43Z\",\n  \"commit_id\": \"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\n  \"author_association\": \"collaborator\"\n }\n]"
						}
					]
				},
				{
					"name": "Check if a pull request has been merged",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/merge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"merge"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Response if pull request has not been merged",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/merge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"merge"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response if pull request has been merged",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/merge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"merge"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Merge a pull request",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"commit_title\": \"c\",\n    \"commit_message\": \"ea reprehenderit\",\n    \"sha\": \"ea tempor magna quis\",\n    \"merge_method\": \"squash\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/merge",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"merge"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details."
					},
					"response": [
						{
							"name": "Response if merge cannot be performed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"commit_title\": \"c\",\n    \"commit_message\": \"ea reprehenderit\",\n    \"sha\": \"ea tempor magna quis\",\n    \"merge_method\": \"squash\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/merge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"merge"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Pull Request is not mergeable\",\n \"documentation_url\": \"https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button\"\n}"
						},
						{
							"name": "Response if sha was provided and pull request head did not match",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"commit_title\": \"c\",\n    \"commit_message\": \"ea reprehenderit\",\n    \"sha\": \"ea tempor magna quis\",\n    \"merge_method\": \"squash\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/merge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"merge"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Head branch was modified. Review and try the merge again.\",\n \"documentation_url\": \"https://developer.github.com/v3/pulls/#merge-a-pull-request-merge-button\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"commit_title\": \"c\",\n    \"commit_message\": \"ea reprehenderit\",\n    \"sha\": \"ea tempor magna quis\",\n    \"merge_method\": \"squash\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/merge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"merge"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Response if merge was successful",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"commit_title\": \"c\",\n    \"commit_message\": \"ea reprehenderit\",\n    \"sha\": \"ea tempor magna quis\",\n    \"merge_method\": \"squash\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/merge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"merge"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"merged\": true,\n \"message\": \"Pull Request successfully merged\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"commit_title\": \"c\",\n    \"commit_message\": \"ea reprehenderit\",\n    \"sha\": \"ea tempor magna quis\",\n    \"merge_method\": \"squash\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/merge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"merge"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"commit_title\": \"c\",\n    \"commit_message\": \"ea reprehenderit\",\n    \"sha\": \"ea tempor magna quis\",\n    \"merge_method\": \"squash\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/merge",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"merge"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update a pull request branch",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"expected_head_sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/update-branch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"update-branch"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Updates the pull request branch with the latest upstream changes by merging HEAD from the base branch into the pull request branch."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expected_head_sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/update-branch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"update-branch"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expected_head_sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/update-branch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"update-branch"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Updating pull request branch.\",\n \"url\": \"https://github.com/repos/octocat/Hello-World/pulls/53\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expected_head_sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/update-branch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"update-branch"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"expected_head_sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/update-branch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"update-branch"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						}
					]
				},
				{
					"name": "List pull requests files",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/files?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"files"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Note:** Responses include a maximum of 3000 files. The paginated response returns 30 files per page by default."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/files?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"files"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/files?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"files"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"sha\": \"bbcd538c8e72b8c175046e27cc8f907076331401\",\n  \"filename\": \"file1.txt\",\n  \"status\": \"added\",\n  \"additions\": 103,\n  \"deletions\": 21,\n  \"changes\": 124,\n  \"blob_url\": \"https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt\",\n  \"raw_url\": \"https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"patch\": \"@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test\"\n }\n]"
						},
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/files?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"files"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List pull requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls?state=all&head=aliquip sint&base=aliquip sint&sort=long-running&direction=asc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls"
							],
							"query": [
								{
									"key": "state",
									"value": "all",
									"description": "Either `open`, `closed`, or `all` to filter by state."
								},
								{
									"key": "head",
									"value": "aliquip sint",
									"description": "Filter pulls by head user or head organization and branch name in the format of `user:ref-name` or `organization:ref-name`. For example: `github:new-script-format` or `octocat:test-branch`."
								},
								{
									"key": "base",
									"value": "aliquip sint",
									"description": "Filter pulls by base branch name. Example: `gh-pages`."
								},
								{
									"key": "sort",
									"value": "long-running",
									"description": "What to sort results by. Can be either `created`, `updated`, `popularity` (comment count) or `long-running` (age, filtering by pulls updated in the last month)."
								},
								{
									"key": "direction",
									"value": "asc",
									"description": "The direction of the sort. Can be either `asc` or `desc`. Default: `desc` when sort is `created` or sort is not specified, otherwise `asc`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls?state=all&head=nisi reprehenderit&base=nisi reprehenderit&sort=long-running&direction=asc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "head",
											"value": "nisi reprehenderit"
										},
										{
											"key": "base",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "long-running"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n  \"id\": 1,\n  \"node_id\": \"MDExOlB1bGxSZXF1ZXN0MQ==\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n  \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n  \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\",\n  \"issue_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\",\n  \"review_comments_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\",\n  \"review_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"number\": 1347,\n  \"state\": \"open\",\n  \"locked\": true,\n  \"title\": \"Amazing new feature\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"body\": \"Please pull these awesome changes in!\",\n  \"labels\": [\n   {\n    \"id\": 208045946,\n    \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n    \"name\": \"bug\",\n    \"description\": \"Something isn't working\",\n    \"color\": \"f29513\",\n    \"default\": true\n   }\n  ],\n  \"milestone\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n   \"id\": 1002604,\n   \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n   \"number\": 1,\n   \"state\": \"open\",\n   \"title\": \"v1.0\",\n   \"description\": \"Tracking milestone for version 1.0\",\n   \"creator\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"open_issues\": 4,\n   \"closed_issues\": 8,\n   \"created_at\": \"2011-04-10T20:09:31Z\",\n   \"updated_at\": \"2014-03-03T18:58:10Z\",\n   \"closed_at\": \"2013-02-12T13:22:01Z\",\n   \"due_on\": \"2012-10-09T23:39:01Z\"\n  },\n  \"active_lock_reason\": \"too heated\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:01:12Z\",\n  \"closed_at\": \"2011-01-26T19:01:12Z\",\n  \"merged_at\": \"2011-01-26T19:01:12Z\",\n  \"merge_commit_sha\": \"e5bd3914e2e596debea16f433f57875b5b90bcd6\",\n  \"assignee\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"assignees\": [\n   {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   {\n    \"login\": \"hubot\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/hubot_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/hubot\",\n    \"html_url\": \"https://github.com/hubot\",\n    \"followers_url\": \"https://api.github.com/users/hubot/followers\",\n    \"following_url\": \"https://api.github.com/users/hubot/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/hubot/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/hubot/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/hubot/orgs\",\n    \"repos_url\": \"https://api.github.com/users/hubot/repos\",\n    \"events_url\": \"https://api.github.com/users/hubot/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/hubot/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": true\n   }\n  ],\n  \"requested_reviewers\": [\n   {\n    \"login\": \"other_user\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/other_user\",\n    \"html_url\": \"https://github.com/other_user\",\n    \"followers_url\": \"https://api.github.com/users/other_user/followers\",\n    \"following_url\": \"https://api.github.com/users/other_user/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/other_user/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/other_user/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/other_user/orgs\",\n    \"repos_url\": \"https://api.github.com/users/other_user/repos\",\n    \"events_url\": \"https://api.github.com/users/other_user/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/other_user/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   }\n  ],\n  \"requested_teams\": [\n   {\n    \"id\": 1,\n    \"node_id\": \"MDQ6VGVhbTE=\",\n    \"url\": \"https://api.github.com/teams/1\",\n    \"html_url\": \"https://api.github.com/teams/justice-league\",\n    \"name\": \"Justice League\",\n    \"slug\": \"justice-league\",\n    \"description\": \"A great team.\",\n    \"privacy\": \"closed\",\n    \"permission\": \"admin\",\n    \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n    \"repositories_url\": \"https://api.github.com/teams/1/repos\"\n   }\n  ],\n  \"head\": {\n   \"label\": \"octocat:new-topic\",\n   \"ref\": \"new-topic\",\n   \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"user\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"repo\": {\n    \"id\": 1296269,\n    \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n    \"name\": \"Hello-World\",\n    \"full_name\": \"octocat/Hello-World\",\n    \"owner\": {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    },\n    \"private\": false,\n    \"html_url\": \"https://github.com/octocat/Hello-World\",\n    \"description\": \"This your first repo!\",\n    \"fork\": false,\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n    \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n    \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n    \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n    \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n    \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n    \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n    \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n    \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n    \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n    \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n    \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n    \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n    \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n    \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n    \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n    \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n    \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n    \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n    \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n    \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n    \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n    \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n    \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n    \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n    \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n    \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n    \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n    \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n    \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n    \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n    \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n    \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n    \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n    \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n    \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n    \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n    \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n    \"homepage\": \"https://github.com\",\n    \"language\": null,\n    \"forks_count\": 9,\n    \"stargazers_count\": 80,\n    \"watchers_count\": 80,\n    \"size\": 108,\n    \"default_branch\": \"master\",\n    \"open_issues_count\": 0,\n    \"is_template\": true,\n    \"topics\": [\n     \"octocat\",\n     \"atom\",\n     \"electron\",\n     \"api\"\n    ],\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n    \"has_pages\": false,\n    \"has_downloads\": true,\n    \"archived\": false,\n    \"disabled\": false,\n    \"visibility\": \"public\",\n    \"pushed_at\": \"2011-01-26T19:06:43Z\",\n    \"created_at\": \"2011-01-26T19:01:12Z\",\n    \"updated_at\": \"2011-01-26T19:14:43Z\",\n    \"permissions\": {\n     \"admin\": false,\n     \"push\": false,\n     \"pull\": true\n    },\n    \"allow_rebase_merge\": true,\n    \"template_repository\": null,\n    \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n    \"allow_squash_merge\": true,\n    \"delete_branch_on_merge\": true,\n    \"allow_merge_commit\": true,\n    \"subscribers_count\": 42,\n    \"network_count\": 0,\n    \"license\": {\n     \"key\": \"mit\",\n     \"name\": \"MIT License\",\n     \"url\": \"https://api.github.com/licenses/mit\",\n     \"spdx_id\": \"MIT\",\n     \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n     \"html_url\": \"https://github.com/licenses/mit\"\n    },\n    \"forks\": 1,\n    \"open_issues\": 1,\n    \"watchers\": 1\n   }\n  },\n  \"base\": {\n   \"label\": \"octocat:master\",\n   \"ref\": \"master\",\n   \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"user\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"repo\": {\n    \"id\": 1296269,\n    \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n    \"name\": \"Hello-World\",\n    \"full_name\": \"octocat/Hello-World\",\n    \"owner\": {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    },\n    \"private\": false,\n    \"html_url\": \"https://github.com/octocat/Hello-World\",\n    \"description\": \"This your first repo!\",\n    \"fork\": false,\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n    \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n    \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n    \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n    \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n    \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n    \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n    \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n    \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n    \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n    \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n    \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n    \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n    \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n    \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n    \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n    \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n    \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n    \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n    \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n    \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n    \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n    \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n    \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n    \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n    \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n    \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n    \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n    \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n    \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n    \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n    \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n    \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n    \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n    \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n    \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n    \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n    \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n    \"homepage\": \"https://github.com\",\n    \"language\": null,\n    \"forks_count\": 9,\n    \"stargazers_count\": 80,\n    \"watchers_count\": 80,\n    \"size\": 108,\n    \"default_branch\": \"master\",\n    \"open_issues_count\": 0,\n    \"is_template\": true,\n    \"topics\": [\n     \"octocat\",\n     \"atom\",\n     \"electron\",\n     \"api\"\n    ],\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n    \"has_pages\": false,\n    \"has_downloads\": true,\n    \"archived\": false,\n    \"disabled\": false,\n    \"visibility\": \"public\",\n    \"pushed_at\": \"2011-01-26T19:06:43Z\",\n    \"created_at\": \"2011-01-26T19:01:12Z\",\n    \"updated_at\": \"2011-01-26T19:14:43Z\",\n    \"permissions\": {\n     \"admin\": false,\n     \"push\": false,\n     \"pull\": true\n    },\n    \"allow_rebase_merge\": true,\n    \"template_repository\": null,\n    \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n    \"allow_squash_merge\": true,\n    \"delete_branch_on_merge\": true,\n    \"allow_merge_commit\": true,\n    \"subscribers_count\": 42,\n    \"network_count\": 0,\n    \"license\": {\n     \"key\": \"mit\",\n     \"name\": \"MIT License\",\n     \"url\": \"https://api.github.com/licenses/mit\",\n     \"spdx_id\": \"MIT\",\n     \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n     \"html_url\": \"https://github.com/licenses/mit\"\n    },\n    \"forks\": 1,\n    \"open_issues\": 1,\n    \"watchers\": 1\n   }\n  },\n  \"_links\": {\n   \"self\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"\n   },\n   \"html\": {\n    \"href\": \"https://github.com/octocat/Hello-World/pull/1347\"\n   },\n   \"issue\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\"\n   },\n   \"comments\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"\n   },\n   \"review_comments\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"\n   },\n   \"review_comment\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"\n   },\n   \"commits\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"\n   },\n   \"statuses\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n   }\n  },\n  \"author_association\": \"OWNER\",\n  \"draft\": false\n }\n]"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls?state=all&head=nisi reprehenderit&base=nisi reprehenderit&sort=long-running&direction=asc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "head",
											"value": "nisi reprehenderit"
										},
										{
											"key": "base",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "long-running"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls?state=all&head=nisi reprehenderit&base=nisi reprehenderit&sort=long-running&direction=asc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "head",
											"value": "nisi reprehenderit"
										},
										{
											"key": "base",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "long-running"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a pull request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Amazing new feature\",\n    \"body\": \"Please pull these awesome changes in!\",\n    \"head\": \"octocat:new-feature\",\n    \"base\": \"master\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Draft pull requests are available in public repositories with GitHub Free and GitHub Free for organizations, GitHub Pro, and legacy per-repository billing plans, and in public and private repositories with GitHub Team and GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo open or update a pull request in a public repository, you must have write access to the head or the source branch. For organization-owned repositories, you must be a member of the organization that owns the repository to open or update a pull request.\n\nYou can create a new pull request.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Amazing new feature\",\n    \"body\": \"Please pull these awesome changes in!\",\n    \"head\": \"octocat:new-feature\",\n    \"base\": \"master\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Amazing new feature\",\n    \"body\": \"Please pull these awesome changes in!\",\n    \"head\": \"octocat:new-feature\",\n    \"base\": \"master\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Amazing new feature\",\n    \"body\": \"Please pull these awesome changes in!\",\n    \"head\": \"octocat:new-feature\",\n    \"base\": \"master\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n \"id\": 1,\n \"node_id\": \"MDExOlB1bGxSZXF1ZXN0MQ==\",\n \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\",\n \"issue_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\",\n \"review_comments_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\",\n \"review_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"number\": 1347,\n \"state\": \"open\",\n \"locked\": true,\n \"title\": \"Amazing new feature\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Please pull these awesome changes in!\",\n \"labels\": [\n  {\n   \"id\": 208045946,\n   \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n   \"name\": \"bug\",\n   \"description\": \"Something isn't working\",\n   \"color\": \"f29513\",\n   \"default\": true\n  }\n ],\n \"milestone\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n  \"id\": 1002604,\n  \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n  \"number\": 1,\n  \"state\": \"open\",\n  \"title\": \"v1.0\",\n  \"description\": \"Tracking milestone for version 1.0\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"open_issues\": 4,\n  \"closed_issues\": 8,\n  \"created_at\": \"2011-04-10T20:09:31Z\",\n  \"updated_at\": \"2014-03-03T18:58:10Z\",\n  \"closed_at\": \"2013-02-12T13:22:01Z\",\n  \"due_on\": \"2012-10-09T23:39:01Z\"\n },\n \"active_lock_reason\": \"too heated\",\n \"created_at\": \"2011-01-26T19:01:12Z\",\n \"updated_at\": \"2011-01-26T19:01:12Z\",\n \"closed_at\": \"2011-01-26T19:01:12Z\",\n \"merged_at\": \"2011-01-26T19:01:12Z\",\n \"merge_commit_sha\": \"e5bd3914e2e596debea16f433f57875b5b90bcd6\",\n \"assignee\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"assignees\": [\n  {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  {\n   \"login\": \"hubot\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/hubot_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/hubot\",\n   \"html_url\": \"https://github.com/hubot\",\n   \"followers_url\": \"https://api.github.com/users/hubot/followers\",\n   \"following_url\": \"https://api.github.com/users/hubot/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/hubot/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/hubot/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/hubot/orgs\",\n   \"repos_url\": \"https://api.github.com/users/hubot/repos\",\n   \"events_url\": \"https://api.github.com/users/hubot/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/hubot/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  }\n ],\n \"requested_reviewers\": [\n  {\n   \"login\": \"other_user\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/other_user\",\n   \"html_url\": \"https://github.com/other_user\",\n   \"followers_url\": \"https://api.github.com/users/other_user/followers\",\n   \"following_url\": \"https://api.github.com/users/other_user/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/other_user/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/other_user/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/other_user/orgs\",\n   \"repos_url\": \"https://api.github.com/users/other_user/repos\",\n   \"events_url\": \"https://api.github.com/users/other_user/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/other_user/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  }\n ],\n \"requested_teams\": [\n  {\n   \"id\": 1,\n   \"node_id\": \"MDQ6VGVhbTE=\",\n   \"url\": \"https://api.github.com/teams/1\",\n   \"html_url\": \"https://api.github.com/teams/justice-league\",\n   \"name\": \"Justice League\",\n   \"slug\": \"justice-league\",\n   \"description\": \"A great team.\",\n   \"privacy\": \"closed\",\n   \"permission\": \"admin\",\n   \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n   \"repositories_url\": \"https://api.github.com/teams/1/repos\"\n  }\n ],\n \"head\": {\n  \"label\": \"octocat:new-topic\",\n  \"ref\": \"new-topic\",\n  \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"repo\": {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"allow_merge_commit\": true,\n   \"forks\": 123,\n   \"open_issues\": 123,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n   },\n   \"watchers\": 123\n  }\n },\n \"base\": {\n  \"label\": \"octocat:master\",\n  \"ref\": \"master\",\n  \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"repo\": {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n   \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n   \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n   \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n   \"homepage\": \"https://github.com\",\n   \"language\": null,\n   \"forks_count\": 9,\n   \"stargazers_count\": 80,\n   \"watchers_count\": 80,\n   \"size\": 108,\n   \"default_branch\": \"master\",\n   \"open_issues_count\": 0,\n   \"topics\": [\n    \"octocat\",\n    \"atom\",\n    \"electron\",\n    \"api\"\n   ],\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_wiki\": true,\n   \"has_pages\": false,\n   \"has_downloads\": true,\n   \"archived\": false,\n   \"disabled\": false,\n   \"pushed_at\": \"2011-01-26T19:06:43Z\",\n   \"created_at\": \"2011-01-26T19:01:12Z\",\n   \"updated_at\": \"2011-01-26T19:14:43Z\",\n   \"permissions\": {\n    \"admin\": false,\n    \"push\": false,\n    \"pull\": true\n   },\n   \"allow_rebase_merge\": true,\n   \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n   \"allow_squash_merge\": true,\n   \"allow_merge_commit\": true,\n   \"forks\": 123,\n   \"open_issues\": 123,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n   },\n   \"watchers\": 123\n  }\n },\n \"_links\": {\n  \"self\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"\n  },\n  \"html\": {\n   \"href\": \"https://github.com/octocat/Hello-World/pull/1347\"\n  },\n  \"issue\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\"\n  },\n  \"comments\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"\n  },\n  \"review_comments\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"\n  },\n  \"review_comment\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"\n  },\n  \"commits\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"\n  },\n  \"statuses\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n  }\n },\n \"author_association\": \"OWNER\",\n \"draft\": false,\n \"merged\": false,\n \"mergeable\": true,\n \"rebaseable\": true,\n \"mergeable_state\": \"clean\",\n \"merged_by\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"comments\": 10,\n \"review_comments\": 0,\n \"maintainer_can_modify\": true,\n \"commits\": 3,\n \"additions\": 100,\n \"deletions\": 3,\n \"changed_files\": 5\n}"
						}
					]
				},
				{
					"name": "Create a reply for a review comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"Great stuff!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/comments/:comment_id/replies",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"comments",
								":comment_id",
								"replies"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						},
						"description": "Creates a reply to a review comment for a pull request. For the `comment_id`, provide the ID of the review comment you are replying to. This must be the ID of a _top-level review comment_, not a reply to that comment. Replies to replies are not supported.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Great stuff!\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/comments/:comment_id/replies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"comments",
										":comment_id",
										"replies"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Great stuff!\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/comments/:comment_id/replies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"comments",
										":comment_id",
										"replies"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\",\n \"pull_request_review_id\": 42,\n \"id\": 10,\n \"node_id\": \"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\",\n \"diff_hunk\": \"@@ -16,33 +16,40 @@ public class Connection : IConnection...\",\n \"path\": \"file1.txt\",\n \"position\": 1,\n \"original_position\": 4,\n \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"original_commit_id\": \"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\",\n \"in_reply_to_id\": 426899381,\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Great stuff!\",\n \"created_at\": \"2011-04-14T16:00:49Z\",\n \"updated_at\": \"2011-04-14T16:00:49Z\",\n \"html_url\": \"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\",\n \"pull_request_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1\",\n \"author_association\": \"NONE\",\n \"_links\": {\n  \"self\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"\n  },\n  \"html\": {\n   \"href\": \"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"\n  },\n  \"pull_request\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1\"\n  }\n },\n \"start_line\": 1,\n \"original_start_line\": 1,\n \"start_side\": \"RIGHT\",\n \"line\": 2,\n \"original_line\": 2,\n \"side\": \"RIGHT\"\n}"
						}
					]
				},
				{
					"name": "List commits on a pull request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/commits?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"commits"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists a maximum of 250 commits for a pull request. To receive a complete commit list for pull requests with more than 250 commits, use the [List commits](https://developer.github.com/v3/repos/commits/#list-commits) endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/commits?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"commits"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"tree_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"message\": \"Fix all the bugs\",\n  \"timestamp\": \"2016-10-10T00:00:00Z\",\n  \"author\": {\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"mona@github.com\"\n  },\n  \"committer\": {\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"mona@github.com\"\n  }\n },\n {\n  \"id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"tree_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"message\": \"Fix all the bugs\",\n  \"timestamp\": \"2016-10-10T00:00:00Z\",\n  \"author\": {\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"mona@github.com\"\n  },\n  \"committer\": {\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"mona@github.com\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Submit a review for a pull request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event\": \"REQUEST_CHANGES\",\n    \"body\": \"culpa ex nostrud\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"reviews",
								":review_id",
								"events"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "review_id",
									"value": "41891364",
									"description": "(Required) review_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event\": \"REQUEST_CHANGES\",\n    \"body\": \"culpa ex nostrud\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id",
										"events"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event\": \"REQUEST_CHANGES\",\n    \"body\": \"culpa ex nostrud\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id",
										"events"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event\": \"REQUEST_CHANGES\",\n    \"body\": \"culpa ex nostrud\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id",
										"events"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 80,\n \"node_id\": \"MDE3OlB1bGxSZXF1ZXN0UmV2aWV3ODA=\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Here is the body for the review.\",\n \"state\": \"APPROVED\",\n \"html_url\": \"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\",\n \"pull_request_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/12\",\n \"_links\": {\n  \"html\": {\n   \"href\": \"https://github.com/octocat/Hello-World/pull/12#pullrequestreview-80\"\n  },\n  \"pull_request\": {\n   \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/12\"\n  }\n },\n \"submitted_at\": \"2019-11-17T17:43:43Z\",\n \"commit_id\": \"ecdd80bb57125d7ba9641ffaa4d7d2c19d3f3091\",\n \"author_association\": \"collaborator\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event\": \"REQUEST_CHANGES\",\n    \"body\": \"culpa ex nostrud\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id",
										"events"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List comments for a pull request review",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/comments?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								":pull_number",
								"reviews",
								":review_id",
								"comments"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "pull_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "review_id",
									"value": "41891364",
									"description": "(Required) review_id parameter"
								}
							]
						},
						"description": "List comments for a specific pull request review."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/comments?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id",
										"comments"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/comments?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										":pull_number",
										"reviews",
										":review_id",
										"comments"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "pull_number"
										},
										{
											"key": "review_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\",\n  \"pull_request_review_id\": 42,\n  \"id\": 10,\n  \"node_id\": \"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDEw\",\n  \"diff_hunk\": \"@@ -16,33 +16,40 @@ public class Connection : IConnection...\",\n  \"path\": \"file1.txt\",\n  \"position\": 1,\n  \"original_position\": 4,\n  \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"original_commit_id\": \"9c48853fa3dc5c1c3d6f1f1cd1f2743e72652840\",\n  \"in_reply_to_id\": 8,\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"body\": \"Great stuff!\",\n  \"created_at\": \"2011-04-14T16:00:49Z\",\n  \"updated_at\": \"2011-04-14T16:00:49Z\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\",\n  \"pull_request_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1\",\n  \"author_association\": \"NONE\",\n  \"_links\": {\n   \"self\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments/1\"\n   },\n   \"html\": {\n    \"href\": \"https://github.com/octocat/Hello-World/pull/1#discussion-diff-1\"\n   },\n   \"pull_request\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1\"\n   }\n  }\n }\n]"
						}
					]
				}
			],
			"description": "Interact with GitHub Pull Requests.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "rate-limit",
			"item": [
				{
					"name": "Get rate limit status for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rate_limit",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rate_limit"
							]
						},
						"description": "**Note:** Accessing this endpoint does not count against your REST API rate limit.\n\n**Note:** The `rate` object is deprecated. If you're writing new API client code or updating existing code, you should use the `core` object instead of the `rate` object. The `core` object contains the same information that is present in the `rate` object."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rate_limit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rate_limit"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-RateLimit-Limit",
									"value": "41891364",
									"description": ""
								},
								{
									"key": "X-RateLimit-Remaining",
									"value": "41891364",
									"description": ""
								},
								{
									"key": "X-RateLimit-Reset",
									"value": "41891364",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"resources\": {\n  \"core\": {\n   \"limit\": 5000,\n   \"remaining\": 4999,\n   \"reset\": 1372700873\n  },\n  \"search\": {\n   \"limit\": 30,\n   \"remaining\": 18,\n   \"reset\": 1372697452\n  },\n  \"graphql\": {\n   \"limit\": 5000,\n   \"remaining\": 4993,\n   \"reset\": 1372700389\n  },\n  \"integration_manifest\": {\n   \"limit\": 5000,\n   \"remaining\": 4999,\n   \"reset\": 1551806725\n  }\n },\n \"rate\": {\n  \"limit\": 5000,\n  \"remaining\": 4999,\n  \"reset\": 1372700873\n }\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rate_limit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rate_limit"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/rate_limit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"rate_limit"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Check your current rate limit status",
			"protocolProfileBehavior": {}
		},
		{
			"name": "reactions",
			"item": [
				{
					"name": "List reactions for a team discussion comment (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions?content=confused&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"discussions",
								":discussion_number",
								"comments",
								":comment_number",
								"reactions"
							],
							"query": [
								{
									"key": "content",
									"value": "confused",
									"description": "Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a team discussion comment."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "comment_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion comment`](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment) endpoint.\n\nList the reactions to a [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/). OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"discussions",
										":discussion_number",
										"comments",
										":comment_number",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "discussion_number"
										},
										{
											"key": "comment_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDg6UmVhY3Rpb24x\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"content\": \"heart\",\n  \"created_at\": \"2016-05-20T20:09:31Z\"\n }\n]"
						}
					]
				},
				{
					"name": "Create reaction for a team discussion comment (Legacy)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"heart\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"discussions",
								":discussion_number",
								"comments",
								":comment_number",
								"reactions"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "comment_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create reaction for a team discussion comment`](https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion-comment) endpoint.\n\nCreate a reaction to a [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion comment."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"discussions",
										":discussion_number",
										"comments",
										":comment_number",
										"reactions"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "discussion_number"
										},
										{
											"key": "comment_number"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDg6UmVhY3Rpb24x\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"content\": \"heart\",\n \"created_at\": \"2016-05-20T20:09:31Z\"\n}"
						}
					]
				},
				{
					"name": "List reactions for a team discussion (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/reactions?content=confused&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"discussions",
								":discussion_number",
								"reactions"
							],
							"query": [
								{
									"key": "content",
									"value": "confused",
									"description": "Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a team discussion."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List reactions for a team discussion`](https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion) endpoint.\n\nList the reactions to a [team discussion](https://developer.github.com/v3/teams/discussions/). OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"discussions",
										":discussion_number",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "discussion_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDg6UmVhY3Rpb24x\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"content\": \"heart\",\n  \"created_at\": \"2016-05-20T20:09:31Z\"\n }\n]"
						}
					]
				},
				{
					"name": "Create reaction for a team discussion (Legacy)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"heart\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/reactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"discussions",
								":discussion_number",
								"reactions"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create reaction for a team discussion`](https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion) endpoint.\n\nCreate a reaction to a [team discussion](https://developer.github.com/v3/teams/discussions/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"discussions",
										":discussion_number",
										"reactions"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "discussion_number"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDg6UmVhY3Rpb24x\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"content\": \"heart\",\n \"created_at\": \"2016-05-20T20:09:31Z\"\n}"
						}
					]
				},
				{
					"name": "List reactions for an issue comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id/reactions?content=confused&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								"comments",
								":comment_id",
								"reactions"
							],
							"query": [
								{
									"key": "content",
									"value": "confused",
									"description": "Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to an issue comment."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						},
						"description": "List the reactions to an [issue comment](https://developer.github.com/v3/issues/comments/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments",
										":comment_id",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDg6UmVhY3Rpb24x\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"content\": \"heart\",\n  \"created_at\": \"2016-05-20T20:09:31Z\"\n }\n]"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments",
										":comment_id",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments",
										":comment_id",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						}
					]
				},
				{
					"name": "Create reaction for an issue comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"heart\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id/reactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								"comments",
								":comment_id",
								"reactions"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						},
						"description": "Create a reaction to an [issue comment](https://developer.github.com/v3/issues/comments/). A response with a `Status: 200 OK` means that you already added the reaction type to this issue comment."
					},
					"response": [
						{
							"name": "Reaction created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments",
										":comment_id",
										"reactions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDg6UmVhY3Rpb24x\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"content\": \"heart\",\n \"created_at\": \"2016-05-20T20:09:31Z\"\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments",
										":comment_id",
										"reactions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments",
										":comment_id",
										"reactions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Reaction exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments",
										":comment_id",
										"reactions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDg6UmVhY3Rpb24x\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"content\": \"heart\",\n \"created_at\": \"2016-05-20T20:09:31Z\"\n}"
						}
					]
				},
				{
					"name": "Delete team discussion reaction",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/reactions/:reaction_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions",
								":discussion_number",
								"reactions",
								":reaction_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "reaction_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions/:reaction_id`.\n\nDelete a reaction to a [team discussion](https://developer.github.com/v3/teams/discussions/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/reactions/:reaction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions",
										":discussion_number",
										"reactions",
										":reaction_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "discussion_number"
										},
										{
											"key": "reaction_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List reactions for an issue",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/reactions?content=confused&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"reactions"
							],
							"query": [
								{
									"key": "content",
									"value": "confused",
									"description": "Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to an issue."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						},
						"description": "List the reactions to an [issue](https://developer.github.com/v3/issues/)."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDg6UmVhY3Rpb24x\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"content\": \"heart\",\n  \"created_at\": \"2016-05-20T20:09:31Z\"\n }\n]"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Create reaction for an issue",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"heart\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/reactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"reactions"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								}
							]
						},
						"description": "Create a reaction to an [issue](https://developer.github.com/v3/issues/). A response with a `Status: 200 OK` means that you already added the reaction type to this issue."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"reactions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDg6UmVhY3Rpb24x\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"content\": \"heart\",\n \"created_at\": \"2016-05-20T20:09:31Z\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"reactions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"reactions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						}
					]
				},
				{
					"name": "List reactions for a pull request review comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id/reactions?content=confused&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								"comments",
								":comment_id",
								"reactions"
							],
							"query": [
								{
									"key": "content",
									"value": "confused",
									"description": "Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a pull request review comment."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						},
						"description": "List the reactions to a [pull request review comment](https://developer.github.com/v3/pulls/comments/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										"comments",
										":comment_id",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDg6UmVhY3Rpb24x\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"content\": \"heart\",\n  \"created_at\": \"2016-05-20T20:09:31Z\"\n }\n]"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										"comments",
										":comment_id",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										"comments",
										":comment_id",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Create reaction for a pull request review comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"heart\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id/reactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								"comments",
								":comment_id",
								"reactions"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						},
						"description": "Create a reaction to a [pull request review comment](https://developer.github.com/v3/pulls/comments/). A response with a `Status: 200 OK` means that you already added the reaction type to this pull request review comment."
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										"comments",
										":comment_id",
										"reactions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Reaction created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										"comments",
										":comment_id",
										"reactions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDg6UmVhY3Rpb24x\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"content\": \"heart\",\n \"created_at\": \"2016-05-20T20:09:31Z\"\n}"
						},
						{
							"name": "Reaction exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										"comments",
										":comment_id",
										"reactions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDg6UmVhY3Rpb24x\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"content\": \"heart\",\n \"created_at\": \"2016-05-20T20:09:31Z\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										"comments",
										":comment_id",
										"reactions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a commit comment reaction",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id/reactions/:reaction_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"comments",
								":comment_id",
								"reactions",
								":reaction_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								},
								{
									"key": "reaction_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/comments/:comment_id/reactions/:reaction_id`.\n\nDelete a reaction to a [commit comment](https://developer.github.com/v3/repos/comments/)."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id/reactions/:reaction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"comments",
										":comment_id",
										"reactions",
										":reaction_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										},
										{
											"key": "reaction_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a reaction (Legacy)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/reactions/:reaction_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reactions",
								":reaction_id"
							],
							"variable": [
								{
									"key": "reaction_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Reactions API. We recommend migrating your existing code to use the new delete reactions endpoints. For more information, see this [blog post](https://developer.github.com/changes/2020-02-26-new-delete-reactions-endpoints/).\n\nOAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), when deleting a [team discussion](https://developer.github.com/v3/teams/discussions/) or [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/)."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reactions/:reaction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reactions",
										":reaction_id"
									],
									"variable": [
										{
											"key": "reaction_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reactions/:reaction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reactions",
										":reaction_id"
									],
									"variable": [
										{
											"key": "reaction_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reactions/:reaction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reactions",
										":reaction_id"
									],
									"variable": [
										{
											"key": "reaction_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Gone",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reactions/:reaction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reactions",
										":reaction_id"
									],
									"variable": [
										{
											"key": "reaction_id"
										}
									]
								}
							},
							"status": "Gone",
							"code": 410,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reactions/:reaction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reactions",
										":reaction_id"
									],
									"variable": [
										{
											"key": "reaction_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/reactions/:reaction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reactions",
										":reaction_id"
									],
									"variable": [
										{
											"key": "reaction_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Delete an issue comment reaction",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id/reactions/:reaction_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								"comments",
								":comment_id",
								"reactions",
								":reaction_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								},
								{
									"key": "reaction_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE delete /repositories/:repository_id/issues/comments/:comment_id/reactions/:reaction_id`.\n\nDelete a reaction to an [issue comment](https://developer.github.com/v3/issues/comments/)."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/comments/:comment_id/reactions/:reaction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										"comments",
										":comment_id",
										"reactions",
										":reaction_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										},
										{
											"key": "reaction_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete an issue reaction",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/reactions/:reaction_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"issues",
								":issue_number",
								"reactions",
								":reaction_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "issue_number",
									"value": "41891364",
									"description": "(Required) issue_number parameter"
								},
								{
									"key": "reaction_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/issues/:issue_number/reactions/:reaction_id`.\n\nDelete a reaction to an [issue](https://developer.github.com/v3/issues/)."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/issues/:issue_number/reactions/:reaction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"issues",
										":issue_number",
										"reactions",
										":reaction_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "issue_number"
										},
										{
											"key": "reaction_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete team discussion comment reaction",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number/reactions/:reaction_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions",
								":discussion_number",
								"comments",
								":comment_number",
								"reactions",
								":reaction_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "comment_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "reaction_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Note:** You can also specify a team or organization with `team_id` and `org_id` using the route `DELETE /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions/:reaction_id`.\n\nDelete a reaction to a [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number/reactions/:reaction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions",
										":discussion_number",
										"comments",
										":comment_number",
										"reactions",
										":reaction_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "discussion_number"
										},
										{
											"key": "comment_number"
										},
										{
											"key": "reaction_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create reaction for a team discussion comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"heart\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number/reactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions",
								":discussion_number",
								"comments",
								":comment_number",
								"reactions"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "comment_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Create a reaction to a [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion comment.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions",
										":discussion_number",
										"comments",
										":comment_number",
										"reactions"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "discussion_number"
										},
										{
											"key": "comment_number"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDg6UmVhY3Rpb24x\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"content\": \"heart\",\n \"created_at\": \"2016-05-20T20:09:31Z\"\n}"
						}
					]
				},
				{
					"name": "List reactions for a team discussion comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number/reactions?content=confused&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions",
								":discussion_number",
								"comments",
								":comment_number",
								"reactions"
							],
							"query": [
								{
									"key": "content",
									"value": "confused",
									"description": "Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a team discussion comment."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "comment_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "List the reactions to a [team discussion comment](https://developer.github.com/v3/teams/discussion_comments/). OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/comments/:comment_number/reactions`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions",
										":discussion_number",
										"comments",
										":comment_number",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "discussion_number"
										},
										{
											"key": "comment_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDg6UmVhY3Rpb24x\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"content\": \"heart\",\n  \"created_at\": \"2016-05-20T20:09:31Z\"\n }\n]"
						}
					]
				},
				{
					"name": "Create reaction for a team discussion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"heart\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/reactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions",
								":discussion_number",
								"reactions"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Create a reaction to a [team discussion](https://developer.github.com/v3/teams/discussions/). OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/). A response with a `Status: 200 OK` means that you already added the reaction type to this team discussion.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions",
										":discussion_number",
										"reactions"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "discussion_number"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDg6UmVhY3Rpb24x\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"content\": \"heart\",\n \"created_at\": \"2016-05-20T20:09:31Z\"\n}"
						}
					]
				},
				{
					"name": "List reactions for a team discussion",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/reactions?content=confused&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions",
								":discussion_number",
								"reactions"
							],
							"query": [
								{
									"key": "content",
									"value": "confused",
									"description": "Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a team discussion."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "List the reactions to a [team discussion](https://developer.github.com/v3/teams/discussions/). OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/:org_id/team/:team_id/discussions/:discussion_number/reactions`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions",
										":discussion_number",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "discussion_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDg6UmVhY3Rpb24x\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"content\": \"heart\",\n  \"created_at\": \"2016-05-20T20:09:31Z\"\n }\n]"
						}
					]
				},
				{
					"name": "Delete a pull request comment reaction",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id/reactions/:reaction_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pulls",
								"comments",
								":comment_id",
								"reactions",
								":reaction_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								},
								{
									"key": "reaction_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Note:** You can also specify a repository by `repository_id` using the route `DELETE /repositories/:repository_id/pulls/comments/:comment_id/reactions/:reaction_id.`\n\nDelete a reaction to a [pull request review comment](https://developer.github.com/v3/pulls/comments/)."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pulls/comments/:comment_id/reactions/:reaction_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pulls",
										"comments",
										":comment_id",
										"reactions",
										":reaction_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										},
										{
											"key": "reaction_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List reactions for a commit comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id/reactions?content=confused&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"comments",
								":comment_id",
								"reactions"
							],
							"query": [
								{
									"key": "content",
									"value": "confused",
									"description": "Returns a single [reaction type](https://developer.github.com/v3/reactions/#reaction-types). Omit this parameter to list all reactions to a commit comment."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						},
						"description": "List the reactions to a [commit comment](https://developer.github.com/v3/repos/comments/)."
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"comments",
										":comment_id",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"comments",
										":comment_id",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id/reactions?content=rocket&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"comments",
										":comment_id",
										"reactions"
									],
									"query": [
										{
											"key": "content",
											"value": "rocket"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDg6UmVhY3Rpb24x\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"content\": \"heart\",\n  \"created_at\": \"2016-05-20T20:09:31Z\"\n }\n]"
						}
					]
				},
				{
					"name": "Create reaction for a commit comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"heart\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id/reactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"comments",
								":comment_id",
								"reactions"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						},
						"description": "Create a reaction to a [commit comment](https://developer.github.com/v3/repos/comments/). A response with a `Status: 200 OK` means that you already added the reaction type to this commit comment."
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"comments",
										":comment_id",
										"reactions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"comments",
										":comment_id",
										"reactions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Reaction exists",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"comments",
										":comment_id",
										"reactions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDg6UmVhY3Rpb24x\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"content\": \"heart\",\n \"created_at\": \"2016-05-20T20:09:31Z\"\n}"
						},
						{
							"name": "Reaction created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"heart\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id/reactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"comments",
										":comment_id",
										"reactions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDg6UmVhY3Rpb24x\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"content\": \"heart\",\n \"created_at\": \"2016-05-20T20:09:31Z\"\n}"
						}
					]
				}
			],
			"description": "Interact with reactions to various GitHub entities.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "repos",
			"item": [
				{
					"name": "List organization repositories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/repos?type=internal&sort=updated&direction=asc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"repos"
							],
							"query": [
								{
									"key": "type",
									"value": "internal",
									"description": "Specifies the types of repositories you want returned. Can be one of `all`, `public`, `private`, `forks`, `sources`, `member`, `internal`. Default: `all`. If your organization is associated with an enterprise account using GitHub Enterprise Cloud or GitHub Enterprise Server 2.20+, `type` can also be `internal`."
								},
								{
									"key": "sort",
									"value": "updated",
									"description": "Can be one of `created`, `updated`, `pushed`, `full_name`."
								},
								{
									"key": "direction",
									"value": "asc",
									"description": "Can be one of `asc` or `desc`. Default: when using `full_name`: `asc`, otherwise `desc`"
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists repositories for the specified organization."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/repos?type=sources&sort=updated&direction=asc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"repos"
									],
									"query": [
										{
											"key": "type",
											"value": "sources"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"template_repository\": \"octocat/template\",\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"delete_branch_on_merge\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"spdx_id\": \"MIT\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Create an organization repository",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Hello-World\",\n    \"description\": \"This is your first repository\",\n    \"homepage\": \"https://github.com\",\n    \"private\": false,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/repos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"repos"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Creates a new repository in the specified organization. The authenticated user must be a member of the organization.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Hello-World\",\n    \"description\": \"This is your first repository\",\n    \"homepage\": \"https://github.com\",\n    \"private\": false,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/repos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"repos"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1296269,\n \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n \"name\": \"Hello-World\",\n \"full_name\": \"octocat/Hello-World\",\n \"owner\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"private\": false,\n \"html_url\": \"https://github.com/octocat/Hello-World\",\n \"description\": \"This your first repo!\",\n \"fork\": false,\n \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n \"homepage\": \"https://github.com\",\n \"language\": null,\n \"forks\": 9,\n \"forks_count\": 9,\n \"stargazers_count\": 80,\n \"watchers_count\": 80,\n \"watchers\": 80,\n \"size\": 108,\n \"default_branch\": \"master\",\n \"open_issues\": 0,\n \"open_issues_count\": 0,\n \"is_template\": true,\n \"license\": {\n  \"key\": \"mit\",\n  \"name\": \"MIT License\",\n  \"url\": \"https://api.github.com/licenses/mit\",\n  \"spdx_id\": \"MIT\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n  \"html_url\": \"https://api.github.com/licenses/mit\"\n },\n \"topics\": [\n  \"octocat\",\n  \"atom\",\n  \"electron\",\n  \"api\"\n ],\n \"has_issues\": true,\n \"has_projects\": true,\n \"has_wiki\": true,\n \"has_pages\": false,\n \"has_downloads\": true,\n \"archived\": false,\n \"disabled\": false,\n \"visibility\": \"public\",\n \"pushed_at\": \"2011-01-26T19:06:43Z\",\n \"created_at\": \"2011-01-26T19:01:12Z\",\n \"updated_at\": \"2011-01-26T19:14:43Z\",\n \"permissions\": {\n  \"admin\": false,\n  \"push\": false,\n  \"pull\": true\n },\n \"allow_rebase_merge\": true,\n \"template_repository\": null,\n \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n \"allow_squash_merge\": true,\n \"delete_branch_on_merge\": true,\n \"allow_merge_commit\": true,\n \"subscribers_count\": 42,\n \"network_count\": 0\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Hello-World\",\n    \"description\": \"This is your first repository\",\n    \"homepage\": \"https://github.com\",\n    \"private\": false,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/repos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"repos"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Hello-World\",\n    \"description\": \"This is your first repository\",\n    \"homepage\": \"https://github.com\",\n    \"private\": false,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/repos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"repos"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Remove team access restrictions",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"esse nisi\",\n    \"sit irure exercitation\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"restrictions",
								"teams"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoves the ability of a team to push to this branch. You can also remove push access for child teams.\n\n| Type    | Description                                                                                                                                         |\n| ------- | --------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Teams that should no longer have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |"
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"cupidatat\",\n    \"Excepteur sint\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"teams"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"cupidatat\",\n    \"Excepteur sint\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"teams"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDQ6VGVhbTE=\",\n  \"url\": \"https://api.github.com/teams/1\",\n  \"html_url\": \"https://api.github.com/teams/justice-league\",\n  \"name\": \"Justice League\",\n  \"slug\": \"justice-league\",\n  \"description\": \"A great team.\",\n  \"privacy\": \"closed\",\n  \"permission\": \"admin\",\n  \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n  \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n  \"parent\": null\n }\n]"
						}
					]
				},
				{
					"name": "Set team access restrictions",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"esse nisi\",\n    \"sit irure exercitation\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"restrictions",
								"teams"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReplaces the list of teams that have push access to this branch. This removes all teams that previously had push access and grants push access to the new list of teams. Team restrictions include child teams.\n\n| Type    | Description                                                                                                                                |\n| ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"cupidatat\",\n    \"Excepteur sint\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"teams"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDQ6VGVhbTE=\",\n  \"url\": \"https://api.github.com/teams/1\",\n  \"html_url\": \"https://api.github.com/teams/justice-league\",\n  \"name\": \"Justice League\",\n  \"slug\": \"justice-league\",\n  \"description\": \"A great team.\",\n  \"privacy\": \"closed\",\n  \"permission\": \"admin\",\n  \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n  \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n  \"parent\": null\n }\n]"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"cupidatat\",\n    \"Excepteur sint\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"teams"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Add team access restrictions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"esse nisi\",\n    \"sit irure exercitation\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"restrictions",
								"teams"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nGrants the specified teams push access for this branch. You can also give push access to child teams.\n\n| Type    | Description                                                                                                                                |\n| ------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n| `array` | The teams that can have push access. Use the team's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |"
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"cupidatat\",\n    \"Excepteur sint\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"teams"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"cupidatat\",\n    \"Excepteur sint\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"teams"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDQ6VGVhbTE=\",\n  \"url\": \"https://api.github.com/teams/1\",\n  \"html_url\": \"https://api.github.com/teams/justice-league\",\n  \"name\": \"Justice League\",\n  \"slug\": \"justice-league\",\n  \"description\": \"A great team.\",\n  \"privacy\": \"closed\",\n  \"permission\": \"admin\",\n  \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n  \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n  \"parent\": null\n }\n]"
						}
					]
				},
				{
					"name": "Get teams with access to the protected branch",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"restrictions",
								"teams"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists the teams who have push access to this branch. The list includes child teams."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"teams"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"teams"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDQ6VGVhbTE=\",\n  \"url\": \"https://api.github.com/teams/1\",\n  \"html_url\": \"https://api.github.com/teams/justice-league\",\n  \"name\": \"Justice League\",\n  \"slug\": \"justice-league\",\n  \"description\": \"A great team.\",\n  \"privacy\": \"closed\",\n  \"permission\": \"admin\",\n  \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n  \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n  \"parent\": null\n }\n]"
						}
					]
				},
				{
					"name": "List branches for HEAD commit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:commit_sha/branches-where-head",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"commits",
								":commit_sha",
								"branches-where-head"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "commit_sha",
									"value": "aliquip sint",
									"description": "(Required) commit_sha+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReturns all branches where the given commit SHA is the HEAD, or latest commit for the branch."
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:commit_sha/branches-where-head",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":commit_sha",
										"branches-where-head"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "commit_sha"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:commit_sha/branches-where-head",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":commit_sha",
										"branches-where-head"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "commit_sha"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:commit_sha/branches-where-head",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":commit_sha",
										"branches-where-head"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "commit_sha"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"branch_5\",\n  \"commit\": {\n   \"sha\": \"c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\"\n  },\n  \"protected\": false\n }\n]"
						}
					]
				},
				{
					"name": "Get top referral paths",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/traffic/popular/paths",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"traffic",
								"popular",
								"paths"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Get the top 10 popular contents over the last 14 days."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/traffic/popular/paths",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"traffic",
										"popular",
										"paths"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"path\": \"/github/hubot\",\n  \"title\": \"github/hubot: A customizable life embetterment robot.\",\n  \"count\": 3542,\n  \"uniques\": 2225\n },\n {\n  \"path\": \"/github/hubot/blob/master/docs/scripting.md\",\n  \"title\": \"hubot/scripting.md at master · github/hubot · GitHub\",\n  \"count\": 1707,\n  \"uniques\": 804\n },\n {\n  \"path\": \"/github/hubot/tree/master/docs\",\n  \"title\": \"hubot/docs at master · github/hubot · GitHub\",\n  \"count\": 685,\n  \"uniques\": 435\n },\n {\n  \"path\": \"/github/hubot/tree/master/src\",\n  \"title\": \"hubot/src at master · github/hubot · GitHub\",\n  \"count\": 577,\n  \"uniques\": 347\n },\n {\n  \"path\": \"/github/hubot/blob/master/docs/index.md\",\n  \"title\": \"hubot/index.md at master · github/hubot · GitHub\",\n  \"count\": 379,\n  \"uniques\": 259\n },\n {\n  \"path\": \"/github/hubot/blob/master/docs/adapters.md\",\n  \"title\": \"hubot/adapters.md at master · github/hubot · GitHub\",\n  \"count\": 354,\n  \"uniques\": 201\n },\n {\n  \"path\": \"/github/hubot/tree/master/examples\",\n  \"title\": \"hubot/examples at master · github/hubot · GitHub\",\n  \"count\": 340,\n  \"uniques\": 260\n },\n {\n  \"path\": \"/github/hubot/blob/master/docs/deploying/heroku.md\",\n  \"title\": \"hubot/heroku.md at master · github/hubot · GitHub\",\n  \"count\": 324,\n  \"uniques\": 217\n },\n {\n  \"path\": \"/github/hubot/blob/master/src/robot.coffee\",\n  \"title\": \"hubot/robot.coffee at master · github/hubot · GitHub\",\n  \"count\": 293,\n  \"uniques\": 191\n },\n {\n  \"path\": \"/github/hubot/blob/master/LICENSE.md\",\n  \"title\": \"hubot/LICENSE.md at master · github/hubot · GitHub\",\n  \"count\": 281,\n  \"uniques\": 222\n }\n]"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/traffic/popular/paths",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"traffic",
										"popular",
										"paths"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Delete a deployment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"deployments",
								":deployment_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "deployment_id",
									"value": "41891364",
									"description": "(Required) deployment_id parameter"
								}
							]
						},
						"description": "To ensure there can always be an active deployment, you can only delete an _inactive_ deployment. Anyone with `repo` or `repo_deployment` scopes can delete an inactive deployment.\n\nTo set a deployment as inactive, you must:\n\n*   Create a new deployment that is active so that the system has a record of the current state, then delete the previously active deployment.\n*   Mark the active deployment as inactive by adding any non-successful deployment status.\n\nFor more information, see \"[Create a deployment](https://developer.github.com/v3/repos/deployments/#create-a-deployment)\" and \"[Create a deployment status](https://developer.github.com/v3/repos/deployments/#create-a-deployment-status).\""
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments",
										":deployment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "deployment_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments",
										":deployment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "deployment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments",
										":deployment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "deployment_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						}
					]
				},
				{
					"name": "Get a deployment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"deployments",
								":deployment_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "deployment_id",
									"value": "41891364",
									"description": "(Required) deployment_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments",
										":deployment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "deployment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments",
										":deployment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "deployment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/example/deployments/1\",\n \"id\": 1,\n \"node_id\": \"MDEwOkRlcGxveW1lbnQx\",\n \"sha\": \"a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\n \"ref\": \"topic-branch\",\n \"task\": \"deploy\",\n \"payload\": {},\n \"original_environment\": \"staging\",\n \"environment\": \"production\",\n \"description\": \"Deploy request from hubot\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2012-07-20T01:19:13Z\",\n \"updated_at\": \"2012-07-20T01:19:13Z\",\n \"statuses_url\": \"https://api.github.com/repos/octocat/example/deployments/1/statuses\",\n \"repository_url\": \"https://api.github.com/repos/octocat/example\",\n \"transient_environment\": false,\n \"production_environment\": true\n}"
						}
					]
				},
				{
					"name": "Update a release asset",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"foo-1.0.0-osx.zip\",\n    \"label\": \"Mac binary\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/releases/assets/:asset_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"releases",
								"assets",
								":asset_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "asset_id",
									"value": "41891364",
									"description": "(Required) asset_id parameter"
								}
							]
						},
						"description": "Users with push access to the repository can edit a release asset."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"foo-1.0.0-osx.zip\",\n    \"label\": \"Mac binary\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases/assets/:asset_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases",
										"assets",
										":asset_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "asset_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\n \"browser_download_url\": \"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\n \"id\": 1,\n \"node_id\": \"MDEyOlJlbGVhc2VBc3NldDE=\",\n \"name\": \"example.zip\",\n \"label\": \"short description\",\n \"state\": \"uploaded\",\n \"content_type\": \"application/zip\",\n \"size\": 1024,\n \"download_count\": 42,\n \"created_at\": \"2013-02-27T19:35:32Z\",\n \"updated_at\": \"2013-02-27T19:35:32Z\",\n \"uploader\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n}"
						}
					]
				},
				{
					"name": "Get a release asset",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/releases/assets/:asset_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"releases",
								"assets",
								":asset_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "asset_id",
									"value": "41891364",
									"description": "(Required) asset_id parameter"
								}
							]
						},
						"description": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://developer.github.com/v3/media/#media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response."
					},
					"response": [
						{
							"name": "To download the asset's binary content, set the `Accept` header of the request to [`application/octet-stream`](https://developer.github.com/v3/media/#media-types). The API will either redirect the client to the location, or stream it directly if possible. API clients should handle both a `200` or `302` response.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases/assets/:asset_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases",
										"assets",
										":asset_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "asset_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\n \"browser_download_url\": \"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\n \"id\": 1,\n \"node_id\": \"MDEyOlJlbGVhc2VBc3NldDE=\",\n \"name\": \"example.zip\",\n \"label\": \"short description\",\n \"state\": \"uploaded\",\n \"content_type\": \"application/zip\",\n \"size\": 1024,\n \"download_count\": 42,\n \"created_at\": \"2013-02-27T19:35:32Z\",\n \"updated_at\": \"2013-02-27T19:35:32Z\",\n \"uploader\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases/assets/:asset_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases",
										"assets",
										":asset_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "asset_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases/assets/:asset_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases",
										"assets",
										":asset_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "asset_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases/assets/:asset_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases",
										"assets",
										":asset_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "asset_id"
										}
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a release asset",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/releases/assets/:asset_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"releases",
								"assets",
								":asset_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "asset_id",
									"value": "41891364",
									"description": "(Required) asset_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases/assets/:asset_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases",
										"assets",
										":asset_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "asset_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove status check contexts",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"labore\",\n    \"aliqua sed fugiat\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"required_status_checks",
								"contexts"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"est aliqua\",\n    \"nostr\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks",
										"contexts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"est aliqua\",\n    \"nostr\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks",
										"contexts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n \"continuous-integration/travis-ci\"\n]"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"est aliqua\",\n    \"nostr\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks",
										"contexts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Set status check contexts",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"labore\",\n    \"aliqua sed fugiat\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"required_status_checks",
								"contexts"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"est aliqua\",\n    \"nostr\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks",
										"contexts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n \"continuous-integration/travis-ci\"\n]"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"est aliqua\",\n    \"nostr\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks",
										"contexts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"est aliqua\",\n    \"nostr\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks",
										"contexts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get all status check contexts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"required_status_checks",
								"contexts"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks",
										"contexts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n \"continuous-integration/travis-ci\"\n]"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks",
										"contexts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Add status check contexts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"labore\",\n    \"aliqua sed fugiat\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"required_status_checks",
								"contexts"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"est aliqua\",\n    \"nostr\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks",
										"contexts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"est aliqua\",\n    \"nostr\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks",
										"contexts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"est aliqua\",\n    \"nostr\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks",
										"contexts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"est aliqua\",\n    \"nostr\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks",
										"contexts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n \"continuous-integration/travis-ci\",\n \"continuous-integration/jenkins\"\n]"
						}
					]
				},
				{
					"name": "Get repository content",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path?ref=aliquip sint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"contents",
								":path"
							],
							"query": [
								{
									"key": "ref",
									"value": "aliquip sint",
									"description": "The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)"
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "path",
									"value": "aliquip sint",
									"description": "(Required) path+ parameter"
								}
							]
						},
						"description": "Gets the contents of a file or directory in a repository. Specify the file path or directory in `:path`. If you omit\n`:path`, you will receive the contents of all files in the repository.\n\nFiles and symlinks support [a custom media type](https://developer.github.com/v3/repos/contents/#custom-media-types) for\nretrieving the raw content or rendered HTML (when supported). All content types support [a custom media\ntype](https://developer.github.com/v3/repos/contents/#custom-media-types) to ensure the content is returned in a consistent\nobject format.\n\n**Note**:\n*   To get a repository's contents recursively, you can [recursively get the tree](https://developer.github.com/v3/git/trees/).\n*   This API has an upper limit of 1,000 files for a directory. If you need to retrieve more files, use the [Git Trees\nAPI](https://developer.github.com/v3/git/trees/#get-a-tree).\n*   This API supports files up to 1 megabyte in size.\n\n#### If the content is a directory\nThe response will be an array of objects, one object for each item in the directory.\nWhen listing the contents of a directory, submodules have their \"type\" specified as \"file\". Logically, the value\n_should_ be \"submodule\". This behavior exists in API v3 [for backwards compatibility purposes](https://git.io/v1YCW).\nIn the next major version of the API, the type will be returned as \"submodule\".\n\n#### If the content is a symlink \nIf the requested `:path` points to a symlink, and the symlink's target is a normal file in the repository, then the\nAPI responds with the content of the file (in the format shown in the example. Otherwise, the API responds with an object \ndescribing the symlink itself.\n\n#### If the content is a submodule\nThe `submodule_git_url` identifies the location of the submodule repository, and the `sha` identifies a specific\ncommit within the submodule repository. Git uses the given URL when cloning the submodule repository, and checks out\nthe submodule at that specific commit.\n\nIf the submodule repository is not hosted on github.com, the Git URLs (`git_url` and `_links[\"git\"]`) and the\ngithub.com URLs (`html_url` and `_links[\"html\"]`) will have null values."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path?ref=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contents",
										":path"
									],
									"query": [
										{
											"key": "ref",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "path"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path?ref=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contents",
										":path"
									],
									"query": [
										{
											"key": "ref",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "path"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path?ref=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contents",
										":path"
									],
									"query": [
										{
											"key": "ref",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "path"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"file\",\n \"encoding\": \"base64\",\n \"size\": 5362,\n \"name\": \"README.md\",\n \"path\": \"README.md\",\n \"content\": \"encoded content ...\",\n \"sha\": \"3d21ec53a331a6f037a91c368710b99387d012c1\",\n \"url\": \"https://api.github.com/repos/octokit/octokit.rb/contents/README.md\",\n \"git_url\": \"https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1\",\n \"html_url\": \"https://github.com/octokit/octokit.rb/blob/master/README.md\",\n \"download_url\": \"https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md\",\n \"_links\": {\n  \"git\": \"https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1\",\n  \"self\": \"https://api.github.com/repos/octokit/octokit.rb/contents/README.md\",\n  \"html\": \"https://github.com/octokit/octokit.rb/blob/master/README.md\"\n }\n}"
						},
						{
							"name": "Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path?ref=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contents",
										":path"
									],
									"query": [
										{
											"key": "ref",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "path"
										}
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create or update file contents",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"my commit message\",\n    \"committer\": {\n        \"name\": \"Monalisa Octocat\",\n        \"email\": \"octocat@github.com\"\n    },\n    \"content\": \"bXkgbmV3IGZpbGUgY29udGVudHM=\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"contents",
								":path"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "path",
									"value": "aliquip sint",
									"description": "(Required) path+ parameter"
								}
							]
						},
						"description": "Creates a new file or replaces an existing file in a repository."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"my commit message\",\n    \"committer\": {\n        \"name\": \"Monalisa Octocat\",\n        \"email\": \"octocat@github.com\"\n    },\n    \"content\": \"bXkgbmV3IGZpbGUgY29udGVudHM=\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contents",
										":path"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "path"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": {\n  \"name\": \"hello.txt\",\n  \"path\": \"notes/hello.txt\",\n  \"sha\": \"95b966ae1c166bd92f8ae7d1c313e738c731dfc3\",\n  \"size\": 9,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\",\n  \"git_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3\",\n  \"download_url\": \"https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt\",\n  \"type\": \"file\",\n  \"_links\": {\n   \"self\": \"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\n   \"git\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs/95b966ae1c166bd92f8ae7d1c313e738c731dfc3\",\n   \"html\": \"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\"\n  }\n },\n \"commit\": {\n  \"sha\": \"7638417db6d59f3c431d3e1f261cc637155684cd\",\n  \"node_id\": \"MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd\",\n  \"author\": {\n   \"date\": \"2014-11-07T22:01:45Z\",\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"octocat@github.com\"\n  },\n  \"committer\": {\n   \"date\": \"2014-11-07T22:01:45Z\",\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"octocat@github.com\"\n  },\n  \"message\": \"my commit message\",\n  \"tree\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb\",\n   \"sha\": \"691272480426f78a0138979dd3ce63b77f706feb\"\n  },\n  \"parents\": [\n   {\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\n    \"sha\": \"1acc419d4d6a9ce985db7be48c6349a0475975b5\"\n   }\n  ],\n  \"verification\": {\n   \"verified\": false,\n   \"reason\": \"unsigned\",\n   \"signature\": null,\n   \"payload\": null\n  }\n }\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"my commit message\",\n    \"committer\": {\n        \"name\": \"Monalisa Octocat\",\n        \"email\": \"octocat@github.com\"\n    },\n    \"content\": \"bXkgbmV3IGZpbGUgY29udGVudHM=\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contents",
										":path"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "path"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"my commit message\",\n    \"committer\": {\n        \"name\": \"Monalisa Octocat\",\n        \"email\": \"octocat@github.com\"\n    },\n    \"content\": \"bXkgbmV3IGZpbGUgY29udGVudHM=\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contents",
										":path"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "path"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": {\n  \"name\": \"hello.txt\",\n  \"path\": \"notes/hello.txt\",\n  \"sha\": \"a56507ed892d05a37c6d6128c260937ea4d287bd\",\n  \"size\": 9,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\",\n  \"git_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd\",\n  \"download_url\": \"https://raw.githubusercontent.com/octocat/HelloWorld/master/notes/hello.txt\",\n  \"type\": \"file\",\n  \"_links\": {\n   \"self\": \"https://api.github.com/repos/octocat/Hello-World/contents/notes/hello.txt\",\n   \"git\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs/a56507ed892d05a37c6d6128c260937ea4d287bd\",\n   \"html\": \"https://github.com/octocat/Hello-World/blob/master/notes/hello.txt\"\n  }\n },\n \"commit\": {\n  \"sha\": \"18a43cd8e1e3a79c786e3d808a73d23b6d212b16\",\n  \"node_id\": \"MDY6Q29tbWl0MThhNDNjZDhlMWUzYTc5Yzc4NmUzZDgwOGE3M2QyM2I2ZDIxMmIxNg==\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/18a43cd8e1e3a79c786e3d808a73d23b6d212b16\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/git/commit/18a43cd8e1e3a79c786e3d808a73d23b6d212b16\",\n  \"author\": {\n   \"date\": \"2014-11-07T22:01:45Z\",\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"octocat@github.com\"\n  },\n  \"committer\": {\n   \"date\": \"2014-11-07T22:01:45Z\",\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"octocat@github.com\"\n  },\n  \"message\": \"my commit message\",\n  \"tree\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees/9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f\",\n   \"sha\": \"9a21f8e2018f42ffcf369b24d2cd20bc25c9e66f\"\n  },\n  \"parents\": [\n   {\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/da5a433788da5c255edad7979b328b67d79f53f6\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/git/commit/da5a433788da5c255edad7979b328b67d79f53f6\",\n    \"sha\": \"da5a433788da5c255edad7979b328b67d79f53f6\"\n   }\n  ],\n  \"verification\": {\n   \"verified\": false,\n   \"reason\": \"unsigned\",\n   \"signature\": null,\n   \"payload\": null\n  }\n }\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"my commit message\",\n    \"committer\": {\n        \"name\": \"Monalisa Octocat\",\n        \"email\": \"octocat@github.com\"\n    },\n    \"content\": \"bXkgbmV3IGZpbGUgY29udGVudHM=\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contents",
										":path"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "path"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"my commit message\",\n    \"committer\": {\n        \"name\": \"Monalisa Octocat\",\n        \"email\": \"octocat@github.com\"\n    },\n    \"content\": \"bXkgbmV3IGZpbGUgY29udGVudHM=\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contents",
										":path"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "path"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a file",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"message\": \"my commit message\",\n    \"committer\": {\n        \"name\": \"Monalisa Octocat\",\n        \"email\": \"octocat@github.com\"\n    },\n    \"sha\": \"329688480d39049927147c162b9d2deaf885005f\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"contents",
								":path"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "path",
									"value": "aliquip sint",
									"description": "(Required) path+ parameter"
								}
							]
						},
						"description": "Deletes a file in a repository.\n\nYou can provide an additional `committer` parameter, which is an object containing information about the committer. Or, you can provide an `author` parameter, which is an object containing information about the author.\n\nThe `author` section is optional and is filled in with the `committer` information if omitted. If the `committer` information is omitted, the authenticated user's information is used.\n\nYou must provide values for both `name` and `email`, whether you choose to use `author` or `committer`. Otherwise, you'll receive a `422` status code."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"my commit message\",\n    \"committer\": {\n        \"name\": \"Monalisa Octocat\",\n        \"email\": \"octocat@github.com\"\n    },\n    \"sha\": \"329688480d39049927147c162b9d2deaf885005f\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contents",
										":path"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "path"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"content\": null,\n \"commit\": {\n  \"sha\": \"7638417db6d59f3c431d3e1f261cc637155684cd\",\n  \"node_id\": \"MDY6Q29tbWl0NzYzODQxN2RiNmQ1OWYzYzQzMWQzZTFmMjYxY2M2MzcxNTU2ODRjZA==\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/7638417db6d59f3c431d3e1f261cc637155684cd\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/git/commit/7638417db6d59f3c431d3e1f261cc637155684cd\",\n  \"author\": {\n   \"date\": \"2014-11-07T22:01:45Z\",\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"octocat@github.com\"\n  },\n  \"committer\": {\n   \"date\": \"2014-11-07T22:01:45Z\",\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"octocat@github.com\"\n  },\n  \"message\": \"my commit message\",\n  \"tree\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees/691272480426f78a0138979dd3ce63b77f706feb\",\n   \"sha\": \"691272480426f78a0138979dd3ce63b77f706feb\"\n  },\n  \"parents\": [\n   {\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/git/commit/1acc419d4d6a9ce985db7be48c6349a0475975b5\",\n    \"sha\": \"1acc419d4d6a9ce985db7be48c6349a0475975b5\"\n   }\n  ],\n  \"verification\": {\n   \"verified\": false,\n   \"reason\": \"unsigned\",\n   \"signature\": null,\n   \"payload\": null\n  }\n }\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"my commit message\",\n    \"committer\": {\n        \"name\": \"Monalisa Octocat\",\n        \"email\": \"octocat@github.com\"\n    },\n    \"sha\": \"329688480d39049927147c162b9d2deaf885005f\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contents",
										":path"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "path"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"my commit message\",\n    \"committer\": {\n        \"name\": \"Monalisa Octocat\",\n        \"email\": \"octocat@github.com\"\n    },\n    \"sha\": \"329688480d39049927147c162b9d2deaf885005f\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contents",
										":path"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "path"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"my commit message\",\n    \"committer\": {\n        \"name\": \"Monalisa Octocat\",\n        \"email\": \"octocat@github.com\"\n    },\n    \"sha\": \"329688480d39049927147c162b9d2deaf885005f\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contents",
										":path"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "path"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sint exercitation velit\",\n \"message\": \"cupidatat do velit ut\",\n \"documentation_url\": \"elit non dolore et eiusmod\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"message\": \"my commit message\",\n    \"committer\": {\n        \"name\": \"Monalisa Octocat\",\n        \"email\": \"octocat@github.com\"\n    },\n    \"sha\": \"329688480d39049927147c162b9d2deaf885005f\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contents/:path",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contents",
										":path"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "path"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get all repository topics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/topics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"topics"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/topics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"topics"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/topics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"topics"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"names\": [\n  \"octocat\",\n  \"atom\",\n  \"electron\",\n  \"api\"\n ]\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/topics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"topics"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						}
					]
				},
				{
					"name": "Replace all repository topics",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"names\": [\n        \"octocat\",\n        \"atom\",\n        \"electron\",\n        \"api\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/topics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"topics"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"names\": [\n        \"octocat\",\n        \"atom\",\n        \"electron\",\n        \"api\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/topics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"topics"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"names\": [\n        \"octocat\",\n        \"atom\",\n        \"electron\",\n        \"api\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/topics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"topics"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"names\": [\n        \"octocat\",\n        \"atom\",\n        \"electron\",\n        \"api\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/topics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"topics"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"names\": [\n        \"octocat\",\n        \"atom\",\n        \"electron\",\n        \"api\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/topics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"topics"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"names\": [\n  \"octocat\",\n  \"atom\",\n  \"electron\",\n  \"api\"\n ]\n}"
						}
					]
				},
				{
					"name": "Enable vulnerability alerts",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/vulnerability-alerts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"vulnerability-alerts"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Enables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\"."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/vulnerability-alerts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"vulnerability-alerts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check if vulnerability alerts are enabled for a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/vulnerability-alerts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"vulnerability-alerts"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Shows whether dependency alerts are enabled or disabled for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\"."
					},
					"response": [
						{
							"name": "Response if repository is enabled with vulnerability alerts",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/vulnerability-alerts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"vulnerability-alerts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response if repository is not enabled with vulnerability alerts",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/vulnerability-alerts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"vulnerability-alerts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Disable vulnerability alerts",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/vulnerability-alerts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"vulnerability-alerts"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Disables dependency alerts and the dependency graph for a repository. The authenticated user must have admin access to the repository. For more information, see \"[About security alerts for vulnerable dependencies](https://help.github.com/en/articles/about-security-alerts-for-vulnerable-dependencies)\"."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/vulnerability-alerts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"vulnerability-alerts"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a deployment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ref\": \"topic-branch\",\n    \"payload\": \"{ \\\"deploy\\\": \\\"migrate\\\" }\",\n    \"description\": \"Deploy request from hubot\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/deployments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"deployments"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Deployments offer a few configurable parameters with certain defaults.\n\nThe `ref` parameter can be any named branch, tag, or SHA. At GitHub we often deploy branches and verify them\nbefore we merge a pull request.\n\nThe `environment` parameter allows deployments to be issued to different runtime environments. Teams often have\nmultiple environments for verifying their applications, such as `production`, `staging`, and `qa`. This parameter\nmakes it easier to track which environments have requested deployments. The default environment is `production`.\n\nThe `auto_merge` parameter is used to ensure that the requested ref is not behind the repository's default branch. If\nthe ref _is_ behind the default branch for the repository, we will attempt to merge it for you. If the merge succeeds,\nthe API will return a successful merge commit. If merge conflicts prevent the merge from succeeding, the API will\nreturn a failure response.\n\nBy default, [commit statuses](https://developer.github.com/v3/repos/statuses) for every submitted context must be in a `success`\nstate. The `required_contexts` parameter allows you to specify a subset of contexts that must be `success`, or to\nspecify contexts that have not yet been submitted. You are not required to use commit statuses to deploy. If you do\nnot require any contexts or create any commit statuses, the deployment will always succeed.\n\nThe `payload` parameter is available for any extra information that a deployment system might need. It is a JSON text\nfield that will be passed on when a deployment event is dispatched.\n\nThe `task` parameter is used by the deployment system to allow different execution paths. In the web world this might\nbe `deploy:migrations` to run schema changes on the system. In the compiled world this could be a flag to compile an\napplication with debugging enabled.\n\nUsers with `repo` or `repo_deployment` scopes can create a deployment for a given ref.\n\n#### Merged branch response\nYou will see this response when GitHub automatically merges the base branch into the topic branch instead of creating\na deployment. This auto-merge happens when:\n*   Auto-merge option is enabled in the repository\n*   Topic branch does not include the latest changes on the base branch, which is `master` in the response example\n*   There are no merge conflicts\n\nIf there are no new commits in the base branch, a new request to create a deployment should give a successful\nresponse.\n\n#### Merge conflict response\nThis error happens when the `auto_merge` option is enabled and when the default branch (in this case `master`), can't\nbe merged into the branch that's being deployed (in this case `topic-branch`), due to merge conflicts.\n\n#### Failed commit status checks\nThis error happens when the `required_contexts` parameter indicates that one or more contexts need to have a `success`\nstatus for the commit to be deployed, but one or more of the required contexts do not have a state of `success`."
					},
					"response": [
						{
							"name": "Merged branch response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ref\": \"topic-branch\",\n    \"payload\": \"{ \\\"deploy\\\": \\\"migrate\\\" }\",\n    \"description\": \"Deploy request from hubot\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Auto-merged master into topic-branch on deployment.\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ref\": \"topic-branch\",\n    \"payload\": \"{ \\\"deploy\\\": \\\"migrate\\\" }\",\n    \"description\": \"Deploy request from hubot\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/example/deployments/1\",\n \"id\": 1,\n \"node_id\": \"MDEwOkRlcGxveW1lbnQx\",\n \"sha\": \"a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\n \"ref\": \"topic-branch\",\n \"task\": \"deploy\",\n \"payload\": {},\n \"original_environment\": \"staging\",\n \"environment\": \"production\",\n \"description\": \"Deploy request from hubot\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2012-07-20T01:19:13Z\",\n \"updated_at\": \"2012-07-20T01:19:13Z\",\n \"statuses_url\": \"https://api.github.com/repos/octocat/example/deployments/1/statuses\",\n \"repository_url\": \"https://api.github.com/repos/octocat/example\",\n \"transient_environment\": false,\n \"production_environment\": true\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ref\": \"topic-branch\",\n    \"payload\": \"{ \\\"deploy\\\": \\\"migrate\\\" }\",\n    \"description\": \"Deploy request from hubot\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"ref\": \"topic-branch\",\n    \"payload\": \"{ \\\"deploy\\\": \\\"migrate\\\" }\",\n    \"description\": \"Deploy request from hubot\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Conflict merging master into topic-branch\"\n}"
						}
					]
				},
				{
					"name": "List deployments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/deployments?sha=incididunt consequat&ref=incididunt consequat&task=incididunt consequat&environment=incididunt consequat&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"deployments"
							],
							"query": [
								{
									"key": "sha",
									"value": "incididunt consequat",
									"description": "The SHA recorded at creation time."
								},
								{
									"key": "ref",
									"value": "incididunt consequat",
									"description": "The name of the ref. This can be a branch, tag, or SHA."
								},
								{
									"key": "task",
									"value": "incididunt consequat",
									"description": "The name of the task for the deployment (e.g., `deploy` or `deploy:migrations`)."
								},
								{
									"key": "environment",
									"value": "incididunt consequat",
									"description": "The name of the environment that was deployed to (e.g., `staging` or `production`)."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Simple filtering of deployments is available via query parameters:"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments?sha=incididunt consequat&ref=incididunt consequat&task=incididunt consequat&environment=incididunt consequat&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments"
									],
									"query": [
										{
											"key": "sha",
											"value": "incididunt consequat"
										},
										{
											"key": "ref",
											"value": "incididunt consequat"
										},
										{
											"key": "task",
											"value": "incididunt consequat"
										},
										{
											"key": "environment",
											"value": "incididunt consequat"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/repos/octocat/example/deployments/1\",\n  \"id\": 1,\n  \"node_id\": \"MDEwOkRlcGxveW1lbnQx\",\n  \"sha\": \"a84d88e7554fc1fa21bcbc4efae3c782a70d2b9d\",\n  \"ref\": \"topic-branch\",\n  \"task\": \"deploy\",\n  \"payload\": {},\n  \"original_environment\": \"staging\",\n  \"environment\": \"production\",\n  \"description\": \"Deploy request from hubot\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"created_at\": \"2012-07-20T01:19:13Z\",\n  \"updated_at\": \"2012-07-20T01:19:13Z\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/example/deployments/1/statuses\",\n  \"repository_url\": \"https://api.github.com/repos/octocat/example\",\n  \"transient_environment\": false,\n  \"production_environment\": true\n }\n]"
						}
					]
				},
				{
					"name": "Get community profile metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/community/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"community",
								"profile"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "This endpoint will return all community profile metrics, including an overall health score, repository description, the presence of documentation, detected code of conduct, detected license, and the presence of ISSUE\\_TEMPLATE, PULL\\_REQUEST\\_TEMPLATE, README, and CONTRIBUTING files."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/community/profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"community",
										"profile"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"health_percentage\": 100,\n \"description\": \"My first repository on GitHub!\",\n \"documentation\": null,\n \"files\": {\n  \"code_of_conduct\": {\n   \"name\": \"Contributor Covenant\",\n   \"key\": \"contributor_covenant\",\n   \"url\": \"https://api.github.com/codes_of_conduct/contributor_covenant\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/blob/master/CODE_OF_CONDUCT.md\"\n  },\n  \"contributing\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/contents/CONTRIBUTING\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/blob/master/CONTRIBUTING\"\n  },\n  \"issue_template\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/contents/ISSUE_TEMPLATE\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/blob/master/ISSUE_TEMPLATE\"\n  },\n  \"pull_request_template\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/contents/PULL_REQUEST_TEMPLATE\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/blob/master/PULL_REQUEST_TEMPLATE\"\n  },\n  \"license\": {\n   \"name\": \"MIT License\",\n   \"key\": \"mit\",\n   \"spdx_id\": \"MIT\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/blob/master/LICENSE\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n  },\n  \"readme\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/contents/README.md\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/blob/master/README.md\"\n  }\n },\n \"updated_at\": \"2017-02-28T19:09:29Z\"\n}"
						}
					]
				},
				{
					"name": "Delete a GitHub Pages site",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pages"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a GitHub Pages site",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"source\": {\n        \"branch\": \"master\",\n        \"path\": \"/docs\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pages"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"source\": {\n        \"branch\": \"master\",\n        \"path\": \"/docs\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"source\": {\n        \"branch\": \"master\",\n        \"path\": \"/docs\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/github/developer.github.com/pages\",\n \"status\": \"built\",\n \"cname\": \"developer.github.com\",\n \"custom_404\": false,\n \"html_url\": \"https://developer.github.com\",\n \"source\": {\n  \"branch\": \"master\",\n  \"path\": \"/\"\n }\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"source\": {\n        \"branch\": \"master\",\n        \"path\": \"/docs\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"source\": {\n        \"branch\": \"master\",\n        \"path\": \"/docs\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get a GitHub Pages site",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pages"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/github/developer.github.com/pages\",\n \"status\": \"built\",\n \"cname\": \"developer.github.com\",\n \"custom_404\": false,\n \"html_url\": \"https://developer.github.com\",\n \"source\": {\n  \"branch\": \"master\",\n  \"path\": \"/\"\n }\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update information about a GitHub Pages site",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"cname\": \"octocatblog.com\",\n    \"source\": \"master /docs\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pages"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cname\": \"octocatblog.com\",\n    \"source\": \"master /docs\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cname\": \"octocatblog.com\",\n    \"source\": \"master /docs\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"cname\": \"octocatblog.com\",\n    \"source\": \"master /docs\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get pull request review protection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"required_pull_request_reviews"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_pull_request_reviews"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.github.luke-cage-preview+json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews\",\n \"dismissal_restrictions\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions\",\n  \"users_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams\",\n  \"users\": [\n   {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   }\n  ],\n  \"teams\": [\n   {\n    \"id\": 1,\n    \"node_id\": \"MDQ6VGVhbTE=\",\n    \"url\": \"https://api.github.com/teams/1\",\n    \"html_url\": \"https://api.github.com/teams/justice-league\",\n    \"name\": \"Justice League\",\n    \"slug\": \"justice-league\",\n    \"description\": \"A great team.\",\n    \"privacy\": \"closed\",\n    \"permission\": \"admin\",\n    \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n    \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n    \"parent\": null\n   }\n  ]\n },\n \"dismiss_stale_reviews\": true,\n \"require_code_owner_reviews\": true,\n \"required_approving_review_count\": 2\n}"
						}
					]
				},
				{
					"name": "Delete pull request review protection",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"required_pull_request_reviews"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_pull_request_reviews"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_pull_request_reviews"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update pull request review protection",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dismissal_restrictions\": {\n        \"users\": [\n            \"octocat\"\n        ],\n        \"teams\": [\n            \"justice-league\"\n        ]\n    },\n    \"dismiss_stale_reviews\": true,\n    \"require_code_owner_reviews\": true,\n    \"required_approving_review_count\": 2\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"required_pull_request_reviews"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nUpdating pull request review enforcement requires admin or owner permissions to the repository and branch protection to be enabled.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dismissal_restrictions\": {\n        \"users\": [\n            \"octocat\"\n        ],\n        \"teams\": [\n            \"justice-league\"\n        ]\n    },\n    \"dismiss_stale_reviews\": true,\n    \"require_code_owner_reviews\": true,\n    \"required_approving_review_count\": 2\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_pull_request_reviews"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"dismissal_restrictions\": {\n        \"users\": [\n            \"octocat\"\n        ],\n        \"teams\": [\n            \"justice-league\"\n        ]\n    },\n    \"dismiss_stale_reviews\": true,\n    \"require_code_owner_reviews\": true,\n    \"required_approving_review_count\": 2\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_pull_request_reviews"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews\",\n \"dismissal_restrictions\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions\",\n  \"users_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams\",\n  \"users\": [\n   {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   }\n  ],\n  \"teams\": [\n   {\n    \"id\": 1,\n    \"node_id\": \"MDQ6VGVhbTE=\",\n    \"url\": \"https://api.github.com/teams/1\",\n    \"html_url\": \"https://api.github.com/teams/justice-league\",\n    \"name\": \"Justice League\",\n    \"slug\": \"justice-league\",\n    \"description\": \"A great team.\",\n    \"privacy\": \"closed\",\n    \"permission\": \"admin\",\n    \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n    \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n    \"parent\": null\n   }\n  ]\n },\n \"dismiss_stale_reviews\": true,\n \"require_code_owner_reviews\": true,\n \"required_approving_review_count\": 2\n}"
						}
					]
				},
				{
					"name": "Get top referral sources",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/traffic/popular/referrers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"traffic",
								"popular",
								"referrers"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Get the top 10 referrers over the last 14 days."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/traffic/popular/referrers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"traffic",
										"popular",
										"referrers"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"referrer\": \"Google\",\n  \"count\": 4,\n  \"uniques\": 3\n },\n {\n  \"referrer\": \"stackoverflow.com\",\n  \"count\": 2,\n  \"uniques\": 2\n },\n {\n  \"referrer\": \"eggsonbread.com\",\n  \"count\": 1,\n  \"uniques\": 1\n },\n {\n  \"referrer\": \"yandex.ru\",\n  \"count\": 1,\n  \"uniques\": 1\n }\n]"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/traffic/popular/referrers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"traffic",
										"popular",
										"referrers"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List commit statuses for a reference",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:ref/statuses?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"commits",
								":ref",
								"statuses"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "ref",
									"value": "aliquip sint",
									"description": "(Required) ref+ parameter"
								}
							]
						},
						"description": "Users with pull access in a repository can view commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name. Statuses are returned in reverse chronological order. The first status in the list will be the latest one.\n\nThis resource is also available via a legacy route: `GET /repos/:owner/:repo/statuses/:ref`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:ref/statuses?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":ref",
										"statuses"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"avatar_url\": \"https://github.com/images/error/hubot_happy.gif\",\n  \"id\": 1,\n  \"node_id\": \"MDY6U3RhdHVzMQ==\",\n  \"state\": \"success\",\n  \"description\": \"Build has completed successfully\",\n  \"target_url\": \"https://ci.example.com/1000/output\",\n  \"context\": \"continuous-integration/jenkins\",\n  \"created_at\": \"2012-07-20T01:19:13Z\",\n  \"updated_at\": \"2012-07-20T01:19:13Z\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  }\n }\n]"
						},
						{
							"name": "Moved Permanently",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:ref/statuses?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":ref",
										"statuses"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "Moved Permanently",
							"code": 301,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Compare two commits",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/compare/{{base}}...{{head}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"compare",
								"{{base}}...{{head}}"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Both `:base` and `:head` must be branch names in `:repo`. To compare branches across other repositories in the same network as `:repo`, use the format `<USERNAME>:branch`.\n\nThe response from the API is equivalent to running the `git log base..head` command; however, commits are returned in chronological order. Pass the appropriate [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests) to fetch diff and patch formats.\n\nThe response also includes details on the files that were changed between the two commits. This includes the status of the change (for example, if a file was added, removed, modified, or renamed), and details of the change itself. For example, files with a `renamed` status have a `previous_filename` field showing the previous filename of the file, and files with a `modified` status have a `patch` field showing the changes made to the file.\n\n**Working with large comparisons**\n\nThe response will include a comparison of up to 250 commits. If you are working with a larger commit range, you can use the [List commits](https://developer.github.com/v3/repos/commits/#list-commits) to enumerate all commits in the range.\n\nFor comparisons with extremely large diffs, you may receive an error response indicating that the diff took too long to generate. You can typically resolve this error by using a smaller commit range.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |"
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/compare/{{base}}...{{head}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"compare",
										"{{base}}...{{head}}"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/compare/{{base}}...{{head}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"compare",
										"{{base}}...{{head}}"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/compare/master...topic\",\n \"html_url\": \"https://github.com/octocat/Hello-World/compare/master...topic\",\n \"permalink_url\": \"https://github.com/octocat/Hello-World/compare/octocat:bbcd538c8e72b8c175046e27cc8f907076331401...octocat:0328041d1152db8ae77652d1618a02e57f745f17\",\n \"diff_url\": \"https://github.com/octocat/Hello-World/compare/master...topic.diff\",\n \"patch_url\": \"https://github.com/octocat/Hello-World/compare/master...topic.patch\",\n \"base_commit\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"node_id\": \"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\n  \"commit\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"author\": {\n    \"name\": \"Monalisa Octocat\",\n    \"email\": \"mona@github.com\",\n    \"date\": \"2011-04-14T16:00:49Z\"\n   },\n   \"committer\": {\n    \"name\": \"Monalisa Octocat\",\n    \"email\": \"mona@github.com\",\n    \"date\": \"2011-04-14T16:00:49Z\"\n   },\n   \"message\": \"Fix all the bugs\",\n   \"tree\": {\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n    \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n   },\n   \"comment_count\": 0,\n   \"verification\": {\n    \"verified\": false,\n    \"reason\": \"unsigned\",\n    \"signature\": null,\n    \"payload\": null\n   }\n  },\n  \"author\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"committer\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"parents\": [\n   {\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n    \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n   }\n  ]\n },\n \"merge_base_commit\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"node_id\": \"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\n  \"commit\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"author\": {\n    \"name\": \"Monalisa Octocat\",\n    \"email\": \"mona@github.com\",\n    \"date\": \"2011-04-14T16:00:49Z\"\n   },\n   \"committer\": {\n    \"name\": \"Monalisa Octocat\",\n    \"email\": \"mona@github.com\",\n    \"date\": \"2011-04-14T16:00:49Z\"\n   },\n   \"message\": \"Fix all the bugs\",\n   \"tree\": {\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n    \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n   },\n   \"comment_count\": 0,\n   \"verification\": {\n    \"verified\": false,\n    \"reason\": \"unsigned\",\n    \"signature\": null,\n    \"payload\": null\n   }\n  },\n  \"author\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"committer\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"parents\": [\n   {\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n    \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n   }\n  ]\n },\n \"status\": \"behind\",\n \"ahead_by\": 1,\n \"behind_by\": 2,\n \"total_commits\": 1,\n \"commits\": [\n  {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"node_id\": \"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\n   \"commit\": {\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n    \"author\": {\n     \"name\": \"Monalisa Octocat\",\n     \"email\": \"mona@github.com\",\n     \"date\": \"2011-04-14T16:00:49Z\"\n    },\n    \"committer\": {\n     \"name\": \"Monalisa Octocat\",\n     \"email\": \"mona@github.com\",\n     \"date\": \"2011-04-14T16:00:49Z\"\n    },\n    \"message\": \"Fix all the bugs\",\n    \"tree\": {\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n     \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n    },\n    \"comment_count\": 0,\n    \"verification\": {\n     \"verified\": false,\n     \"reason\": \"unsigned\",\n     \"signature\": null,\n     \"payload\": null\n    }\n   },\n   \"author\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"committer\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"parents\": [\n    {\n     \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n     \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n    }\n   ]\n  }\n ],\n \"files\": [\n  {\n   \"sha\": \"bbcd538c8e72b8c175046e27cc8f907076331401\",\n   \"filename\": \"file1.txt\",\n   \"status\": \"added\",\n   \"additions\": 103,\n   \"deletions\": 21,\n   \"changes\": 124,\n   \"blob_url\": \"https://github.com/octocat/Hello-World/blob/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt\",\n   \"raw_url\": \"https://github.com/octocat/Hello-World/raw/6dcb09b5b57875f334f61aebed695e2e4193db5e/file1.txt\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/file1.txt?ref=6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"patch\": \"@@ -132,7 +132,7 @@ module Test @@ -1000,7 +1000,7 @@ module Test\"\n  }\n ]\n}"
						},
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/compare/{{base}}...{{head}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"compare",
										"{{base}}...{{head}}"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List pull requests associated with a commit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:commit_sha/pulls?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"commits",
								":commit_sha",
								"pulls"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "commit_sha",
									"value": "aliquip sint",
									"description": "(Required) commit_sha+ parameter"
								}
							]
						},
						"description": "Lists all pull requests containing the provided commit SHA, which can be from any point in the commit history. The results will include open and closed pull requests. Additional preview headers may be required to see certain details for associated pull requests, such as whether a pull request is in a draft state. For more information about previews that might affect this endpoint, see the [List pull requests](https://developer.github.com/v3/pulls/#list-pull-requests) endpoint."
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:commit_sha/pulls?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":commit_sha",
										"pulls"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "commit_sha"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:commit_sha/pulls?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":commit_sha",
										"pulls"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "commit_sha"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\",\n  \"id\": 1,\n  \"node_id\": \"MDExOlB1bGxSZXF1ZXN0MQ==\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n  \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n  \"patch_url\": \"https://github.com/octocat/Hello-World/pull/1347.patch\",\n  \"issue_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\",\n  \"review_comments_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\",\n  \"review_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"number\": 1347,\n  \"state\": \"open\",\n  \"locked\": true,\n  \"title\": \"Amazing new feature\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"body\": \"Please pull these awesome changes in!\",\n  \"labels\": [\n   {\n    \"id\": 208045946,\n    \"node_id\": \"MDU6TGFiZWwyMDgwNDU5NDY=\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/labels/bug\",\n    \"name\": \"bug\",\n    \"description\": \"Something isn't working\",\n    \"color\": \"f29513\",\n    \"default\": true\n   }\n  ],\n  \"milestone\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n   \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n   \"id\": 1002604,\n   \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n   \"number\": 1,\n   \"state\": \"open\",\n   \"title\": \"v1.0\",\n   \"description\": \"Tracking milestone for version 1.0\",\n   \"creator\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"open_issues\": 4,\n   \"closed_issues\": 8,\n   \"created_at\": \"2011-04-10T20:09:31Z\",\n   \"updated_at\": \"2014-03-03T18:58:10Z\",\n   \"closed_at\": \"2013-02-12T13:22:01Z\",\n   \"due_on\": \"2012-10-09T23:39:01Z\"\n  },\n  \"active_lock_reason\": \"too heated\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:01:12Z\",\n  \"closed_at\": \"2011-01-26T19:01:12Z\",\n  \"merged_at\": \"2011-01-26T19:01:12Z\",\n  \"merge_commit_sha\": \"e5bd3914e2e596debea16f433f57875b5b90bcd6\",\n  \"assignee\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"assignees\": [\n   {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   {\n    \"login\": \"hubot\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/hubot_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/hubot\",\n    \"html_url\": \"https://github.com/hubot\",\n    \"followers_url\": \"https://api.github.com/users/hubot/followers\",\n    \"following_url\": \"https://api.github.com/users/hubot/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/hubot/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/hubot/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/hubot/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/hubot/orgs\",\n    \"repos_url\": \"https://api.github.com/users/hubot/repos\",\n    \"events_url\": \"https://api.github.com/users/hubot/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/hubot/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": true\n   }\n  ],\n  \"requested_reviewers\": [\n   {\n    \"login\": \"other_user\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/other_user\",\n    \"html_url\": \"https://github.com/other_user\",\n    \"followers_url\": \"https://api.github.com/users/other_user/followers\",\n    \"following_url\": \"https://api.github.com/users/other_user/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/other_user/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/other_user/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/other_user/orgs\",\n    \"repos_url\": \"https://api.github.com/users/other_user/repos\",\n    \"events_url\": \"https://api.github.com/users/other_user/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/other_user/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   }\n  ],\n  \"requested_teams\": [\n   {\n    \"id\": 1,\n    \"node_id\": \"MDQ6VGVhbTE=\",\n    \"url\": \"https://api.github.com/teams/1\",\n    \"html_url\": \"https://api.github.com/teams/justice-league\",\n    \"name\": \"Justice League\",\n    \"slug\": \"justice-league\",\n    \"description\": \"A great team.\",\n    \"privacy\": \"closed\",\n    \"permission\": \"admin\",\n    \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n    \"repositories_url\": \"https://api.github.com/teams/1/repos\"\n   }\n  ],\n  \"head\": {\n   \"label\": \"octocat:new-topic\",\n   \"ref\": \"new-topic\",\n   \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"user\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"repo\": {\n    \"id\": 1296269,\n    \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n    \"name\": \"Hello-World\",\n    \"full_name\": \"octocat/Hello-World\",\n    \"owner\": {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    },\n    \"private\": false,\n    \"html_url\": \"https://github.com/octocat/Hello-World\",\n    \"description\": \"This your first repo!\",\n    \"fork\": false,\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n    \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n    \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n    \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n    \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n    \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n    \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n    \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n    \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n    \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n    \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n    \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n    \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n    \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n    \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n    \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n    \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n    \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n    \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n    \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n    \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n    \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n    \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n    \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n    \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n    \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n    \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n    \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n    \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n    \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n    \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n    \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n    \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n    \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n    \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n    \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n    \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n    \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n    \"homepage\": \"https://github.com\",\n    \"language\": null,\n    \"forks_count\": 9,\n    \"stargazers_count\": 80,\n    \"watchers_count\": 80,\n    \"size\": 108,\n    \"default_branch\": \"master\",\n    \"open_issues_count\": 0,\n    \"is_template\": true,\n    \"topics\": [\n     \"octocat\",\n     \"atom\",\n     \"electron\",\n     \"api\"\n    ],\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n    \"has_pages\": false,\n    \"has_downloads\": true,\n    \"archived\": false,\n    \"disabled\": false,\n    \"visibility\": \"public\",\n    \"pushed_at\": \"2011-01-26T19:06:43Z\",\n    \"created_at\": \"2011-01-26T19:01:12Z\",\n    \"updated_at\": \"2011-01-26T19:14:43Z\",\n    \"permissions\": {\n     \"admin\": false,\n     \"push\": false,\n     \"pull\": true\n    },\n    \"allow_rebase_merge\": true,\n    \"template_repository\": null,\n    \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n    \"allow_squash_merge\": true,\n    \"delete_branch_on_merge\": true,\n    \"allow_merge_commit\": true,\n    \"subscribers_count\": 42,\n    \"network_count\": 0,\n    \"license\": {\n     \"key\": \"mit\",\n     \"name\": \"MIT License\",\n     \"url\": \"https://api.github.com/licenses/mit\",\n     \"spdx_id\": \"MIT\",\n     \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n     \"html_url\": \"https://github.com/licenses/mit\"\n    },\n    \"forks\": 1,\n    \"open_issues\": 1,\n    \"watchers\": 1\n   }\n  },\n  \"base\": {\n   \"label\": \"octocat:master\",\n   \"ref\": \"master\",\n   \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"user\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"repo\": {\n    \"id\": 1296269,\n    \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n    \"name\": \"Hello-World\",\n    \"full_name\": \"octocat/Hello-World\",\n    \"owner\": {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    },\n    \"private\": false,\n    \"html_url\": \"https://github.com/octocat/Hello-World\",\n    \"description\": \"This your first repo!\",\n    \"fork\": false,\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n    \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n    \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n    \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n    \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n    \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n    \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n    \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n    \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n    \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n    \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n    \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n    \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n    \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n    \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n    \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n    \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n    \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n    \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n    \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n    \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n    \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n    \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n    \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n    \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n    \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n    \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n    \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n    \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n    \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n    \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n    \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n    \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n    \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n    \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n    \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n    \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n    \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n    \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n    \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n    \"homepage\": \"https://github.com\",\n    \"language\": null,\n    \"forks_count\": 9,\n    \"stargazers_count\": 80,\n    \"watchers_count\": 80,\n    \"size\": 108,\n    \"default_branch\": \"master\",\n    \"open_issues_count\": 0,\n    \"is_template\": true,\n    \"topics\": [\n     \"octocat\",\n     \"atom\",\n     \"electron\",\n     \"api\"\n    ],\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n    \"has_pages\": false,\n    \"has_downloads\": true,\n    \"archived\": false,\n    \"disabled\": false,\n    \"visibility\": \"public\",\n    \"pushed_at\": \"2011-01-26T19:06:43Z\",\n    \"created_at\": \"2011-01-26T19:01:12Z\",\n    \"updated_at\": \"2011-01-26T19:14:43Z\",\n    \"permissions\": {\n     \"admin\": false,\n     \"push\": false,\n     \"pull\": true\n    },\n    \"allow_rebase_merge\": true,\n    \"template_repository\": null,\n    \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n    \"allow_squash_merge\": true,\n    \"delete_branch_on_merge\": true,\n    \"allow_merge_commit\": true,\n    \"subscribers_count\": 42,\n    \"network_count\": 0,\n    \"license\": {\n     \"key\": \"mit\",\n     \"name\": \"MIT License\",\n     \"url\": \"https://api.github.com/licenses/mit\",\n     \"spdx_id\": \"MIT\",\n     \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n     \"html_url\": \"https://github.com/licenses/mit\"\n    },\n    \"forks\": 1,\n    \"open_issues\": 1,\n    \"watchers\": 1\n   }\n  },\n  \"_links\": {\n   \"self\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"\n   },\n   \"html\": {\n    \"href\": \"https://github.com/octocat/Hello-World/pull/1347\"\n   },\n   \"issue\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347\"\n   },\n   \"comments\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/issues/1347/comments\"\n   },\n   \"review_comments\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/comments\"\n   },\n   \"review_comment\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/comments{/number}\"\n   },\n   \"commits\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347/commits\"\n   },\n   \"statuses\": {\n    \"href\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n   }\n  },\n  \"author_association\": \"OWNER\",\n  \"draft\": false\n }\n]"
						}
					]
				},
				{
					"name": "Delete admin branch protection",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"enforce_admins"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoving admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"enforce_admins"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"enforce_admins"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get admin branch protection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"enforce_admins"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"enforce_admins"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins\",\n \"enabled\": true\n}"
						}
					]
				},
				{
					"name": "Set admin branch protection",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"enforce_admins"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nAdding admin enforcement requires admin or owner permissions to the repository and branch protection to be enabled."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/enforce_admins",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"enforce_admins"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins\",\n \"enabled\": true\n}"
						}
					]
				},
				{
					"name": "Get a deployment status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id/statuses/:status_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"deployments",
								":deployment_id",
								"statuses",
								":status_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "deployment_id",
									"value": "41891364",
									"description": "(Required) deployment_id parameter"
								},
								{
									"key": "status_id",
									"value": "41891364",
									"description": "(Required) status_id parameter"
								}
							]
						},
						"description": "Users with pull access can view a deployment status for a deployment:"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id/statuses/:status_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments",
										":deployment_id",
										"statuses",
										":status_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "deployment_id"
										},
										{
											"key": "status_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/example/deployments/42/statuses/1\",\n \"id\": 1,\n \"node_id\": \"MDE2OkRlcGxveW1lbnRTdGF0dXMx\",\n \"state\": \"success\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"description\": \"Deployment finished successfully.\",\n \"environment\": \"production\",\n \"target_url\": \"https://example.com/deployment/42/output\",\n \"created_at\": \"2012-07-20T01:19:13Z\",\n \"updated_at\": \"2012-07-20T01:19:13Z\",\n \"deployment_url\": \"https://api.github.com/repos/octocat/example/deployments/42\",\n \"repository_url\": \"https://api.github.com/repos/octocat/example\",\n \"environment_url\": \"https://test-branch.lab.acme.com\",\n \"log_url\": \"https://example.com/deployment/42/output\"\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id/statuses/:status_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments",
										":deployment_id",
										"statuses",
										":status_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "deployment_id"
										},
										{
											"key": "status_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id/statuses/:status_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments",
										":deployment_id",
										"statuses",
										":status_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "deployment_id"
										},
										{
											"key": "status_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Enable automated security fixes",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/automated-security-fixes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"automated-security-fixes"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Enables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)\"."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/automated-security-fixes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"automated-security-fixes"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Disable automated security fixes",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/automated-security-fixes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"automated-security-fixes"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Disables automated security fixes for a repository. The authenticated user must have admin access to the repository. For more information, see \"[Configuring automated security fixes](https://help.github.com/en/articles/configuring-automated-security-fixes)\"."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/automated-security-fixes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"automated-security-fixes"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete commit signature protection",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_signatures",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"required_signatures"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to disable required signed commits on a branch. You must enable branch protection to require signed commits."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_signatures",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_signatures"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_signatures",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_signatures"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get commit signature protection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_signatures",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"required_signatures"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to check whether a branch requires signed commits. An enabled status of `true` indicates you must sign commits on this branch. For more information, see [Signing commits with GPG](https://help.github.com/articles/signing-commits-with-gpg) in GitHub Help.\n\n**Note**: You must enable branch protection to require signed commits."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_signatures",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_signatures"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures\",\n \"enabled\": true\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_signatures",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_signatures"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Create commit signature protection",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_signatures",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"required_signatures"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nWhen authenticated with admin or owner permissions to the repository, you can use this endpoint to require signed commits on a branch. You must enable branch protection to require signed commits."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_signatures",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_signatures"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures\",\n \"enabled\": true\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_signatures",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_signatures"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Remove user access restrictions",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"irure dolor laborum aliqua\",\n    \"i\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"restrictions",
								"users"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoves the ability of a user to push to this branch.\n\n| Type    | Description                                                                                                                                   |\n| ------- | --------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames of the people who should no longer have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |"
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"officia occae\",\n    \"sit tempor irure\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"users"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"officia occae\",\n    \"sit tempor irure\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"users"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						}
					]
				},
				{
					"name": "Set user access restrictions",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"irure dolor laborum aliqua\",\n    \"i\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"restrictions",
								"users"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReplaces the list of people that have push access to this branch. This removes all people that previously had push access and grants push access to the new list of people.\n\n| Type    | Description                                                                                                                   |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"officia occae\",\n    \"sit tempor irure\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"users"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"officia occae\",\n    \"sit tempor irure\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"users"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Add user access restrictions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"irure dolor laborum aliqua\",\n    \"i\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"restrictions",
								"users"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nGrants the specified people push access for this branch.\n\n| Type    | Description                                                                                                                   |\n| ------- | ----------------------------------------------------------------------------------------------------------------------------- |\n| `array` | Usernames for people who can have push access. **Note**: The list of users, apps, and teams in total is limited to 100 items. |"
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"officia occae\",\n    \"sit tempor irure\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"users"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"officia occae\",\n    \"sit tempor irure\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"users"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						}
					]
				},
				{
					"name": "Get users with access to the protected branch",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"restrictions",
								"users"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists the people who have push access to this branch."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"users"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"users"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						}
					]
				},
				{
					"name": "List public repositories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repositories?per_page=-27113311&since=aliquip sint&visibility=all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repositories"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "visibility",
									"value": "all"
								}
							]
						},
						"description": "Lists all public repositories in the order that they were created.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of repositories."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repositories?per_page=-27113311&since=nisi reprehenderit&visibility=all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "visibility",
											"value": "all"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\"\n }\n]"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repositories?per_page=-27113311&since=nisi reprehenderit&visibility=all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "visibility",
											"value": "all"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repositories?per_page=-27113311&since=nisi reprehenderit&visibility=all",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repositories"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "visibility",
											"value": "all"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List branches",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches?protected=true&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches"
							],
							"query": [
								{
									"key": "protected",
									"value": "true",
									"description": "Setting to `true` returns only protected branches. When set to `false`, only unprotected branches are returned. Omitting this parameter returns all branches."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches?protected=false&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches"
									],
									"query": [
										{
											"key": "protected",
											"value": "false"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"master\",\n  \"commit\": {\n   \"sha\": \"c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\"\n  },\n  \"protected\": true\n }\n]"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches?protected=false&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches"
									],
									"query": [
										{
											"key": "protected",
											"value": "false"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List repository invitations for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/repository_invitations?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"repository_invitations"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "When authenticating as a user, this endpoint will list all currently open repository invitations for that user."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repository_invitations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repository_invitations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"repository\": {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\"\n  },\n  \"invitee\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"inviter\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"permissions\": \"write\",\n  \"created_at\": \"2016-06-13T14:52:50-05:00\",\n  \"url\": \"https://api.github.com/user/repository_invitations/1296269\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/invitations\",\n  \"node_id\": \"MDQ6VXNlcjE=\"\n }\n]"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repository_invitations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repository_invitations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repository_invitations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repository_invitations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repository_invitations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repository_invitations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repository_invitations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repository_invitations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get a branch",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"name\": \"master\",\n \"commit\": {\n  \"sha\": \"7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\n  \"node_id\": \"MDY6Q29tbWl0N2ZkMWE2MGIwMWY5MWIzMTRmNTk5NTVhNGU0ZDRlODBkOGVkZjExZA==\",\n  \"commit\": {\n   \"author\": {\n    \"name\": \"The Octocat\",\n    \"date\": \"2012-03-06T15:06:50-08:00\",\n    \"email\": \"octocat@nowhere.com\"\n   },\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\n   \"message\": \"Merge pull request #6 from Spaceghost/patch-1\\n\\nNew line at end of file.\",\n   \"tree\": {\n    \"sha\": \"b4eecafa9be2f2006ce1b709d6857b07069b4608\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees/b4eecafa9be2f2006ce1b709d6857b07069b4608\"\n   },\n   \"committer\": {\n    \"name\": \"The Octocat\",\n    \"date\": \"2012-03-06T15:06:50-08:00\",\n    \"email\": \"octocat@nowhere.com\"\n   },\n   \"verification\": {\n    \"verified\": false,\n    \"reason\": \"unsigned\",\n    \"signature\": null,\n    \"payload\": null\n   },\n   \"comment_count\": 0\n  },\n  \"author\": {\n   \"gravatar_id\": \"\",\n   \"avatar_url\": \"https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"id\": 583231,\n   \"login\": \"octocat\",\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  },\n  \"parents\": [\n   {\n    \"sha\": \"553c2077f0edc3d5dc5d17262f6aa498e69d6f8e\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/553c2077f0edc3d5dc5d17262f6aa498e69d6f8e\"\n   },\n   {\n    \"sha\": \"762941318ee16e59dabbacb1b4049eec22f0d303\",\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/762941318ee16e59dabbacb1b4049eec22f0d303\"\n   }\n  ],\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/7fd1a60b01f91b314f59955a4e4d4e80d8edf11d\",\n  \"committer\": {\n   \"gravatar_id\": \"\",\n   \"avatar_url\": \"https://secure.gravatar.com/avatar/7ad39074b0584bc555d0417ae3e7d974?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-140.png\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"id\": 583231,\n   \"login\": \"octocat\",\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  },\n  \"html_url\": \"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\"\n },\n \"_links\": {\n  \"html\": \"https://github.com/octocat/Hello-World/tree/master\",\n  \"self\": \"https://api.github.com/repos/octocat/Hello-World/branches/master\"\n },\n \"protected\": true,\n \"protection\": {\n  \"enabled\": true,\n  \"required_status_checks\": {\n   \"enforcement_level\": \"non_admins\",\n   \"contexts\": [\n    \"ci-test\",\n    \"linter\"\n   ]\n  }\n },\n \"protection_url\": \"https://api.github.com/repos/octocat/hello-world/branches/master/protection\"\n}"
						}
					]
				},
				{
					"name": "List deploy keys",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/keys?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"keys"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/keys?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"keys"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"key\": \"ssh-rsa AAA...\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/keys/1\",\n  \"title\": \"octocat@octomac\",\n  \"verified\": true,\n  \"created_at\": \"2014-12-10T15:53:42Z\",\n  \"read_only\": true\n }\n]"
						}
					]
				},
				{
					"name": "Create a deploy key",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"octocat@octomac\",\n    \"key\": \"ssh-rsa AAA...\",\n    \"read_only\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"keys"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "You can create a read-only deploy key."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"octocat@octomac\",\n    \"key\": \"ssh-rsa AAA...\",\n    \"read_only\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"keys"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"octocat@octomac\",\n    \"key\": \"ssh-rsa AAA...\",\n    \"read_only\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"keys"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"key\": \"ssh-rsa AAA...\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/keys/1\",\n \"title\": \"octocat@octomac\",\n \"verified\": true,\n \"created_at\": \"2014-12-10T15:53:42Z\",\n \"read_only\": true\n}"
						}
					]
				},
				{
					"name": "Get GitHub Pages build",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pages/builds/:build_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pages",
								"builds",
								":build_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "build_id",
									"value": "41891364",
									"description": "(Required) build_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages/builds/:build_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages",
										"builds",
										":build_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "build_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/github/developer.github.com/pages/builds/5472601\",\n \"status\": \"built\",\n \"error\": {\n  \"message\": null\n },\n \"pusher\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"commit\": \"351391cdcb88ffae71ec3028c91f375a8036a26b\",\n \"duration\": 2104,\n \"created_at\": \"2014-02-10T19:00:49Z\",\n \"updated_at\": \"2014-02-10T19:00:51Z\"\n}"
						}
					]
				},
				{
					"name": "Get repository clones",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/traffic/clones?per=week",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"traffic",
								"clones"
							],
							"query": [
								{
									"key": "per",
									"value": "week",
									"description": "Must be one of: `day`, `week`."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Get the total number of clones and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/traffic/clones?per=week",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"traffic",
										"clones"
									],
									"query": [
										{
											"key": "per",
											"value": "week"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/traffic/clones?per=week",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"traffic",
										"clones"
									],
									"query": [
										{
											"key": "per",
											"value": "week"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": 173,\n \"uniques\": 128,\n \"clones\": [\n  {\n   \"timestamp\": \"2016-10-10T00:00:00Z\",\n   \"count\": 2,\n   \"uniques\": 1\n  },\n  {\n   \"timestamp\": \"2016-10-11T00:00:00Z\",\n   \"count\": 17,\n   \"uniques\": 16\n  },\n  {\n   \"timestamp\": \"2016-10-12T00:00:00Z\",\n   \"count\": 21,\n   \"uniques\": 15\n  },\n  {\n   \"timestamp\": \"2016-10-13T00:00:00Z\",\n   \"count\": 8,\n   \"uniques\": 7\n  },\n  {\n   \"timestamp\": \"2016-10-14T00:00:00Z\",\n   \"count\": 5,\n   \"uniques\": 5\n  },\n  {\n   \"timestamp\": \"2016-10-15T00:00:00Z\",\n   \"count\": 2,\n   \"uniques\": 2\n  },\n  {\n   \"timestamp\": \"2016-10-16T00:00:00Z\",\n   \"count\": 8,\n   \"uniques\": 7\n  },\n  {\n   \"timestamp\": \"2016-10-17T00:00:00Z\",\n   \"count\": 26,\n   \"uniques\": 15\n  },\n  {\n   \"timestamp\": \"2016-10-18T00:00:00Z\",\n   \"count\": 19,\n   \"uniques\": 17\n  },\n  {\n   \"timestamp\": \"2016-10-19T00:00:00Z\",\n   \"count\": 19,\n   \"uniques\": 14\n  },\n  {\n   \"timestamp\": \"2016-10-20T00:00:00Z\",\n   \"count\": 19,\n   \"uniques\": 15\n  },\n  {\n   \"timestamp\": \"2016-10-21T00:00:00Z\",\n   \"count\": 9,\n   \"uniques\": 7\n  },\n  {\n   \"timestamp\": \"2016-10-22T00:00:00Z\",\n   \"count\": 5,\n   \"uniques\": 5\n  },\n  {\n   \"timestamp\": \"2016-10-23T00:00:00Z\",\n   \"count\": 6,\n   \"uniques\": 5\n  },\n  {\n   \"timestamp\": \"2016-10-24T00:00:00Z\",\n   \"count\": 7,\n   \"uniques\": 5\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get a repository webhook",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"hooks",
								":hook_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "hook_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"Repository\",\n \"id\": 12345678,\n \"name\": \"web\",\n \"active\": true,\n \"events\": [\n  \"push\",\n  \"pull_request\"\n ],\n \"config\": {\n  \"content_type\": \"json\",\n  \"insecure_ssl\": \"0\",\n  \"url\": \"https://example.com/webhook\"\n },\n \"updated_at\": \"2019-06-03T00:57:16Z\",\n \"created_at\": \"2019-06-03T00:57:16Z\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/hooks/12345678\",\n \"test_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\",\n \"ping_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\",\n \"last_response\": {\n  \"code\": null,\n  \"status\": \"unused\",\n  \"message\": null\n }\n}"
						}
					]
				},
				{
					"name": "Delete a repository webhook",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"hooks",
								":hook_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "hook_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update a repository webhook",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"active\": true,\n    \"add_events\": [\n        \"pull_request\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"hooks",
								":hook_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "hook_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": true,\n    \"add_events\": [\n        \"pull_request\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": true,\n    \"add_events\": [\n        \"pull_request\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"Repository\",\n \"id\": 12345678,\n \"name\": \"web\",\n \"active\": true,\n \"events\": [\n  \"push\",\n  \"pull_request\"\n ],\n \"config\": {\n  \"content_type\": \"json\",\n  \"insecure_ssl\": \"0\",\n  \"url\": \"https://example.com/webhook\"\n },\n \"updated_at\": \"2019-06-03T00:57:16Z\",\n \"created_at\": \"2019-06-03T00:57:16Z\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/hooks/12345678\",\n \"test_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\",\n \"ping_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\",\n \"last_response\": {\n  \"code\": null,\n  \"status\": \"unused\",\n  \"message\": null\n }\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"active\": true,\n    \"add_events\": [\n        \"pull_request\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks",
										":hook_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List releases",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/releases?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"releases"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "This returns a list of releases, which does not include regular Git tags that have not been associated with a release. To get a list of Git tags, use the [Repository Tags API](https://developer.github.com/v3/repos/#list-repository-tags).\n\nInformation about published releases are available to everyone. Only users with push access will receive listings for draft releases."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/releases/v1.0.0\",\n  \"assets_url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\",\n  \"upload_url\": \"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\",\n  \"tarball_url\": \"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\",\n  \"zipball_url\": \"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\",\n  \"id\": 1,\n  \"node_id\": \"MDc6UmVsZWFzZTE=\",\n  \"tag_name\": \"v1.0.0\",\n  \"target_commitish\": \"master\",\n  \"name\": \"v1.0.0\",\n  \"body\": \"Description of the release\",\n  \"draft\": false,\n  \"prerelease\": false,\n  \"created_at\": \"2013-02-27T19:35:32Z\",\n  \"published_at\": \"2013-02-27T19:35:32Z\",\n  \"author\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"assets\": [\n   {\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\n    \"browser_download_url\": \"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\n    \"id\": 1,\n    \"node_id\": \"MDEyOlJlbGVhc2VBc3NldDE=\",\n    \"name\": \"example.zip\",\n    \"label\": \"short description\",\n    \"state\": \"uploaded\",\n    \"content_type\": \"application/zip\",\n    \"size\": 1024,\n    \"download_count\": 42,\n    \"created_at\": \"2013-02-27T19:35:32Z\",\n    \"updated_at\": \"2013-02-27T19:35:32Z\",\n    \"uploader\": {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    }\n   }\n  ]\n }\n]"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Create a release",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tag_name\": \"v1.0.0\",\n    \"target_commitish\": \"master\",\n    \"name\": \"v1.0.0\",\n    \"body\": \"Description of the release\",\n    \"draft\": false,\n    \"prerelease\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/releases",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"releases"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Users with push access to the repository can create a release.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tag_name\": \"v1.0.0\",\n    \"target_commitish\": \"master\",\n    \"name\": \"v1.0.0\",\n    \"body\": \"Description of the release\",\n    \"draft\": false,\n    \"prerelease\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tag_name\": \"v1.0.0\",\n    \"target_commitish\": \"master\",\n    \"name\": \"v1.0.0\",\n    \"body\": \"Description of the release\",\n    \"draft\": false,\n    \"prerelease\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1\",\n \"html_url\": \"https://github.com/octocat/Hello-World/releases/v1.0.0\",\n \"assets_url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\",\n \"upload_url\": \"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\",\n \"tarball_url\": \"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\",\n \"zipball_url\": \"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\",\n \"id\": 1,\n \"node_id\": \"MDc6UmVsZWFzZTE=\",\n \"tag_name\": \"v1.0.0\",\n \"target_commitish\": \"master\",\n \"name\": \"v1.0.0\",\n \"body\": \"Description of the release\",\n \"draft\": false,\n \"prerelease\": false,\n \"created_at\": \"2013-02-27T19:35:32Z\",\n \"published_at\": \"2013-02-27T19:35:32Z\",\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"assets\": [\n  {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\n   \"browser_download_url\": \"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOlJlbGVhc2VBc3NldDE=\",\n   \"name\": \"example.zip\",\n   \"label\": \"short description\",\n   \"state\": \"uploaded\",\n   \"content_type\": \"application/zip\",\n   \"size\": 1024,\n   \"download_count\": 42,\n   \"created_at\": \"2013-02-27T19:35:32Z\",\n   \"updated_at\": \"2013-02-27T19:35:32Z\",\n   \"uploader\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create a repository using a template",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"owner\": \"octocat\",\n    \"name\": \"Hello-World\",\n    \"description\": \"This is your first repository\",\n    \"private\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:template_owner/:template_repo/generate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":template_owner",
								":template_repo",
								"generate"
							],
							"variable": [
								{
									"key": "template_owner",
									"value": "aliquip sint",
									"description": "(Required) template_owner parameter"
								},
								{
									"key": "template_repo",
									"value": "aliquip sint",
									"description": "(Required) template_repo parameter"
								}
							]
						},
						"description": "Creates a new repository using a repository template. Use the `template_owner` and `template_repo` route parameters to specify the repository to use as the template. The authenticated user must own or be a member of an organization that owns the repository. To check if a repository is available to use as a template, get the repository's information using the [Get a repository](https://developer.github.com/v3/repos/#get-a-repository) endpoint and check that the `is_template` key is `true`.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"owner\": \"octocat\",\n    \"name\": \"Hello-World\",\n    \"description\": \"This is your first repository\",\n    \"private\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:template_owner/:template_repo/generate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":template_owner",
										":template_repo",
										"generate"
									],
									"variable": [
										{
											"key": "template_owner"
										},
										{
											"key": "template_repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1296269,\n \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n \"name\": \"Hello-World\",\n \"full_name\": \"octocat/Hello-World\",\n \"owner\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"private\": false,\n \"html_url\": \"https://github.com/octocat/Hello-World\",\n \"description\": \"This your first repo!\",\n \"fork\": false,\n \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n \"homepage\": \"https://github.com\",\n \"language\": null,\n \"forks_count\": 9,\n \"forks\": 9,\n \"stargazers_count\": 80,\n \"watchers_count\": 80,\n \"watchers\": 80,\n \"size\": 108,\n \"default_branch\": \"master\",\n \"open_issues_count\": 0,\n \"open_issues\": 0,\n \"is_template\": false,\n \"topics\": [\n  \"octocat\",\n  \"atom\",\n  \"electron\",\n  \"api\"\n ],\n \"has_issues\": true,\n \"has_projects\": true,\n \"has_wiki\": true,\n \"has_pages\": false,\n \"has_downloads\": true,\n \"archived\": false,\n \"disabled\": false,\n \"visibility\": \"public\",\n \"pushed_at\": \"2011-01-26T19:06:43Z\",\n \"created_at\": \"2011-01-26T19:01:12Z\",\n \"updated_at\": \"2011-01-26T19:14:43Z\",\n \"permissions\": {\n  \"admin\": false,\n  \"push\": false,\n  \"pull\": true\n },\n \"allow_rebase_merge\": true,\n \"license\": {\n  \"key\": \"mit\",\n  \"name\": \"MIT License\",\n  \"url\": \"https://api.github.com/licenses/mit\",\n  \"spdx_id\": \"MIT\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n  \"html_url\": \"https://github.com/licenses/mit\"\n }\n}"
						}
					]
				},
				{
					"name": "List repositories for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/repos?type=owner&sort=updated&direction=asc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"repos"
							],
							"query": [
								{
									"key": "type",
									"value": "owner",
									"description": "Can be one of `all`, `owner`, `member`."
								},
								{
									"key": "sort",
									"value": "updated",
									"description": "Can be one of `created`, `updated`, `pushed`, `full_name`."
								},
								{
									"key": "direction",
									"value": "asc",
									"description": "Can be one of `asc` or `desc`. Default: `asc` when using `full_name`, otherwise `desc`"
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists public repositories for the specified user."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/repos?type=owner&sort=updated&direction=asc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"repos"
									],
									"query": [
										{
											"key": "type",
											"value": "owner"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"template_repository\": \"octocat/template\",\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"delete_branch_on_merge\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"spdx_id\": \"MIT\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Remove status check protection",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"required_status_checks"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update status check protection",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"strict\": true,\n    \"contexts\": [\n        \"continuous-integration/travis-ci\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"required_status_checks"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nUpdating required status checks requires admin or owner permissions to the repository and branch protection to be enabled."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"strict\": true,\n    \"contexts\": [\n        \"continuous-integration/travis-ci\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\",\n \"strict\": true,\n \"contexts\": [\n  \"continuous-integration/travis-ci\"\n ],\n \"contexts_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"strict\": true,\n    \"contexts\": [\n        \"continuous-integration/travis-ci\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"strict\": true,\n    \"contexts\": [\n        \"continuous-integration/travis-ci\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get status checks protection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"required_status_checks"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\",\n \"strict\": true,\n \"contexts\": [\n  \"continuous-integration/travis-ci\"\n ],\n \"contexts_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/required_status_checks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"required_status_checks"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Delete a repository",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Deleting a repository requires admin access. If OAuth is used, the `delete_repo` scope is required.\n\nIf an organization owner has configured the organization to prevent members from deleting organization-owned\nrepositories, you will get a `403 Forbidden` response."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "If an organization owner has configured the organization to prevent members from deleting organization-owned repositories, a member will get this response:",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Organization members cannot delete repositories.\",\n \"documentation_url\": \"https://developer.github.com/v3/repos/#delete-a-repository\"\n}"
						}
					]
				},
				{
					"name": "Get a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "When you pass the `scarlet-witch-preview` media type, requests to get a repository will also return the repository's code of conduct if it can be detected from the repository's code of conduct file.\n\nThe `parent` and `source` objects are present when the repository is a fork. `parent` is the repository this repository was forked from, `source` is the ultimate source for the network."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1296269,\n \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n \"name\": \"Hello-World\",\n \"full_name\": \"octocat/Hello-World\",\n \"owner\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"private\": false,\n \"html_url\": \"https://github.com/octocat/Hello-World\",\n \"description\": \"This your first repo!\",\n \"fork\": false,\n \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n \"homepage\": \"https://github.com\",\n \"language\": null,\n \"forks_count\": 9,\n \"forks\": 9,\n \"stargazers_count\": 80,\n \"watchers_count\": 80,\n \"watchers\": 80,\n \"size\": 108,\n \"default_branch\": \"master\",\n \"open_issues_count\": 0,\n \"open_issues\": 0,\n \"is_template\": true,\n \"topics\": [\n  \"octocat\",\n  \"atom\",\n  \"electron\",\n  \"api\"\n ],\n \"has_issues\": true,\n \"has_projects\": true,\n \"has_wiki\": true,\n \"has_pages\": false,\n \"has_downloads\": true,\n \"archived\": false,\n \"disabled\": false,\n \"visibility\": \"public\",\n \"pushed_at\": \"2011-01-26T19:06:43Z\",\n \"created_at\": \"2011-01-26T19:01:12Z\",\n \"updated_at\": \"2011-01-26T19:14:43Z\",\n \"permissions\": {\n  \"pull\": true,\n  \"push\": false,\n  \"admin\": false\n },\n \"allow_rebase_merge\": true,\n \"template_repository\": null,\n \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n \"allow_squash_merge\": true,\n \"delete_branch_on_merge\": true,\n \"allow_merge_commit\": true,\n \"subscribers_count\": 42,\n \"network_count\": 0,\n \"license\": {\n  \"key\": \"mit\",\n  \"name\": \"MIT License\",\n  \"spdx_id\": \"MIT\",\n  \"url\": \"https://api.github.com/licenses/mit\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n },\n \"organization\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"Organization\",\n  \"site_admin\": false\n },\n \"parent\": {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"allow_rebase_merge\": true,\n  \"template_repository\": null,\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"allow_squash_merge\": true,\n  \"delete_branch_on_merge\": true,\n  \"allow_merge_commit\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"spdx_id\": \"MIT\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n   \"html_url\": \"https://api.github.com/licenses/mit\"\n  },\n  \"forks\": 1,\n  \"open_issues\": 1,\n  \"watchers\": 1\n },\n \"source\": {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"allow_rebase_merge\": true,\n  \"template_repository\": null,\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"allow_squash_merge\": true,\n  \"delete_branch_on_merge\": true,\n  \"allow_merge_commit\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"spdx_id\": \"MIT\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n   \"html_url\": \"https://api.github.com/licenses/mit\"\n  },\n  \"forks\": 1,\n  \"open_issues\": 1,\n  \"watchers\": 1\n }\n}"
						},
						{
							"name": "Moved Permanently",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Moved Permanently",
							"code": 301,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update a repository",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Hello-World\",\n    \"description\": \"This is your first repository\",\n    \"homepage\": \"https://github.com\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Note**: To edit a repository's topics, use the [Replace all repository topics](https://developer.github.com/v3/repos/#replace-all-repository-topics) endpoint."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Hello-World\",\n    \"description\": \"This is your first repository\",\n    \"homepage\": \"https://github.com\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Hello-World\",\n    \"description\": \"This is your first repository\",\n    \"homepage\": \"https://github.com\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1296269,\n \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n \"name\": \"Hello-World\",\n \"full_name\": \"octocat/Hello-World\",\n \"owner\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"private\": false,\n \"html_url\": \"https://github.com/octocat/Hello-World\",\n \"description\": \"This your first repo!\",\n \"fork\": false,\n \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n \"homepage\": \"https://github.com\",\n \"license\": {\n  \"key\": \"mit\",\n  \"name\": \"MIT License\",\n  \"url\": \"https://api.github.com/licenses/mit\",\n  \"spdx_id\": \"MIT\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n  \"html_url\": \"https://github.com/licenses/mit\"\n },\n \"language\": null,\n \"forks_count\": 9,\n \"forks\": 9,\n \"stargazers_count\": 80,\n \"watchers_count\": 80,\n \"watchers\": 80,\n \"size\": 108,\n \"default_branch\": \"master\",\n \"open_issues_count\": 0,\n \"open_issues\": 0,\n \"is_template\": true,\n \"topics\": [\n  \"octocat\",\n  \"atom\",\n  \"electron\",\n  \"api\"\n ],\n \"has_issues\": true,\n \"has_projects\": true,\n \"has_wiki\": true,\n \"has_pages\": false,\n \"has_downloads\": true,\n \"archived\": false,\n \"disabled\": false,\n \"visibility\": \"public\",\n \"pushed_at\": \"2011-01-26T19:06:43Z\",\n \"created_at\": \"2011-01-26T19:01:12Z\",\n \"updated_at\": \"2011-01-26T19:14:43Z\",\n \"permissions\": {\n  \"pull\": true,\n  \"push\": false,\n  \"admin\": false\n },\n \"allow_rebase_merge\": true,\n \"template_repository\": null,\n \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n \"allow_squash_merge\": true,\n \"delete_branch_on_merge\": true,\n \"allow_merge_commit\": true,\n \"subscribers_count\": 42,\n \"network_count\": 0,\n \"organization\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"Organization\",\n  \"site_admin\": false\n },\n \"parent\": {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"allow_rebase_merge\": true,\n  \"template_repository\": null,\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"allow_squash_merge\": true,\n  \"delete_branch_on_merge\": true,\n  \"allow_merge_commit\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"spdx_id\": \"MIT\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n   \"html_url\": \"https://api.github.com/licenses/mit\"\n  },\n  \"forks\": 1,\n  \"open_issues\": 1,\n  \"watchers\": 1\n },\n \"source\": {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"allow_rebase_merge\": true,\n  \"template_repository\": null,\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"allow_squash_merge\": true,\n  \"delete_branch_on_merge\": true,\n  \"allow_merge_commit\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"spdx_id\": \"MIT\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n   \"html_url\": \"https://api.github.com/licenses/mit\"\n  },\n  \"forks\": 1,\n  \"open_issues\": 1,\n  \"watchers\": 1\n }\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Hello-World\",\n    \"description\": \"This is your first repository\",\n    \"homepage\": \"https://github.com\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Hello-World\",\n    \"description\": \"This is your first repository\",\n    \"homepage\": \"https://github.com\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Delete access restrictions",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"restrictions"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nDisables the ability to restrict who can push to this branch."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get access restrictions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"restrictions"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists who has access to this protected branch.\n\n**Note**: Users, apps, and teams `restrictions` are only available for organization-owned repositories."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions\",\n \"users_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users\",\n \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams\",\n \"apps_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams\",\n \"users\": [\n  {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  }\n ],\n \"teams\": [\n  {\n   \"id\": 1,\n   \"node_id\": \"MDQ6VGVhbTE=\",\n   \"url\": \"https://api.github.com/teams/1\",\n   \"html_url\": \"https://api.github.com/teams/justice-league\",\n   \"name\": \"Justice League\",\n   \"slug\": \"justice-league\",\n   \"description\": \"A great team.\",\n   \"privacy\": \"closed\",\n   \"permission\": \"admin\",\n   \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n   \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n   \"parent\": null\n  }\n ],\n \"apps\": [\n  {\n   \"id\": 1,\n   \"slug\": \"octoapp\",\n   \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n   \"owner\": {\n    \"login\": \"github\",\n    \"id\": 1,\n    \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n    \"url\": \"https://api.github.com/orgs/github\",\n    \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n    \"events_url\": \"https://api.github.com/orgs/github/events\",\n    \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n    \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n    \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n    \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"description\": \"A great organization\"\n   },\n   \"name\": \"Octocat App\",\n   \"description\": \"\",\n   \"external_url\": \"https://example.com\",\n   \"html_url\": \"https://github.com/apps/octoapp\",\n   \"created_at\": \"2017-07-08T16:18:44-04:00\",\n   \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n   \"permissions\": {\n    \"metadata\": \"read\",\n    \"contents\": \"read\",\n    \"issues\": \"write\",\n    \"single_file\": \"write\"\n   },\n   \"events\": [\n    \"push\",\n    \"pull_request\"\n   ]\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get a deploy key",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/keys/:key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"keys",
								":key_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "key_id",
									"value": "41891364",
									"description": "(Required) key_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"key\": \"ssh-rsa AAA...\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/keys/1\",\n \"title\": \"octocat@octomac\",\n \"verified\": true,\n \"created_at\": \"2014-12-10T15:53:42Z\",\n \"read_only\": true\n}"
						}
					]
				},
				{
					"name": "Delete a deploy key",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/keys/:key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"keys",
								":key_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "key_id",
									"value": "41891364",
									"description": "(Required) key_id parameter"
								}
							]
						},
						"description": "Deploy keys are immutable. If you need to update a key, remove the key and create a new one instead."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "key_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a release",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tag_name\": \"v1.0.0\",\n    \"target_commitish\": \"master\",\n    \"name\": \"v1.0.0\",\n    \"body\": \"Description of the release\",\n    \"draft\": false,\n    \"prerelease\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/releases/:release_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"releases",
								":release_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "release_id",
									"value": "41891364",
									"description": "(Required) release_id parameter"
								}
							]
						},
						"description": "Users with push access to the repository can edit a release."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"tag_name\": \"v1.0.0\",\n    \"target_commitish\": \"master\",\n    \"name\": \"v1.0.0\",\n    \"body\": \"Description of the release\",\n    \"draft\": false,\n    \"prerelease\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases/:release_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases",
										":release_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "release_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1\",\n \"html_url\": \"https://github.com/octocat/Hello-World/releases/v1.0.0\",\n \"assets_url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\",\n \"upload_url\": \"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\",\n \"tarball_url\": \"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\",\n \"zipball_url\": \"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\",\n \"id\": 1,\n \"node_id\": \"MDc6UmVsZWFzZTE=\",\n \"tag_name\": \"v1.0.0\",\n \"target_commitish\": \"master\",\n \"name\": \"v1.0.0\",\n \"body\": \"Description of the release\",\n \"draft\": false,\n \"prerelease\": false,\n \"created_at\": \"2013-02-27T19:35:32Z\",\n \"published_at\": \"2013-02-27T19:35:32Z\",\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"assets\": [\n  {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\n   \"browser_download_url\": \"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOlJlbGVhc2VBc3NldDE=\",\n   \"name\": \"example.zip\",\n   \"label\": \"short description\",\n   \"state\": \"uploaded\",\n   \"content_type\": \"application/zip\",\n   \"size\": 1024,\n   \"download_count\": 42,\n   \"created_at\": \"2013-02-27T19:35:32Z\",\n   \"updated_at\": \"2013-02-27T19:35:32Z\",\n   \"uploader\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get a release",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/releases/:release_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"releases",
								":release_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "release_id",
									"value": "41891364",
									"description": "(Required) release_id parameter"
								}
							]
						},
						"description": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://developer.github.com/v3/#hypermedia)."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases/:release_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases",
										":release_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "release_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "**Note:** This returns an `upload_url` key corresponding to the endpoint for uploading release assets. This key is a [hypermedia resource](https://developer.github.com/v3/#hypermedia).",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases/:release_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases",
										":release_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "release_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1\",\n \"html_url\": \"https://github.com/octocat/Hello-World/releases/v1.0.0\",\n \"assets_url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\",\n \"upload_url\": \"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\",\n \"tarball_url\": \"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\",\n \"zipball_url\": \"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\",\n \"id\": 1,\n \"node_id\": \"MDc6UmVsZWFzZTE=\",\n \"tag_name\": \"v1.0.0\",\n \"target_commitish\": \"master\",\n \"name\": \"v1.0.0\",\n \"body\": \"Description of the release\",\n \"draft\": false,\n \"prerelease\": false,\n \"created_at\": \"2013-02-27T19:35:32Z\",\n \"published_at\": \"2013-02-27T19:35:32Z\",\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"assets\": [\n  {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\n   \"browser_download_url\": \"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOlJlbGVhc2VBc3NldDE=\",\n   \"name\": \"example.zip\",\n   \"label\": \"short description\",\n   \"state\": \"uploaded\",\n   \"content_type\": \"application/zip\",\n   \"size\": 1024,\n   \"download_count\": 42,\n   \"created_at\": \"2013-02-27T19:35:32Z\",\n   \"updated_at\": \"2013-02-27T19:35:32Z\",\n   \"uploader\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Delete a release",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/releases/:release_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"releases",
								":release_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "release_id",
									"value": "41891364",
									"description": "(Required) release_id parameter"
								}
							]
						},
						"description": "Users with push access to the repository can delete a release."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases/:release_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases",
										":release_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "release_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete branch protection",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update branch protection",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"required_status_checks\": {\n        \"strict\": true,\n        \"contexts\": [\n            \"continuous-integration/travis-ci\"\n        ]\n    },\n    \"enforce_admins\": true,\n    \"required_pull_request_reviews\": {\n        \"dismissal_restrictions\": {\n            \"users\": [\n                \"octocat\"\n            ],\n            \"teams\": [\n                \"justice-league\"\n            ]\n        },\n        \"dismiss_stale_reviews\": true,\n        \"require_code_owner_reviews\": true,\n        \"required_approving_review_count\": 2\n    },\n    \"restrictions\": {\n        \"users\": [\n            \"octocat\"\n        ],\n        \"teams\": [\n            \"justice-league\"\n        ],\n        \"apps\": [\n            \"super-ci\"\n        ]\n    },\n    \"required_linear_history\": true,\n    \"allow_force_pushes\": true,\n    \"allow_deletions\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nProtecting a branch requires admin or owner permissions to the repository.\n\n**Note**: Passing new arrays of `users` and `teams` replaces their previous values.\n\n**Note**: The list of users, apps, and teams in total is limited to 100 items."
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"required_status_checks\": {\n        \"strict\": true,\n        \"contexts\": [\n            \"continuous-integration/travis-ci\"\n        ]\n    },\n    \"enforce_admins\": true,\n    \"required_pull_request_reviews\": {\n        \"dismissal_restrictions\": {\n            \"users\": [\n                \"octocat\"\n            ],\n            \"teams\": [\n                \"justice-league\"\n            ]\n        },\n        \"dismiss_stale_reviews\": true,\n        \"require_code_owner_reviews\": true,\n        \"required_approving_review_count\": 2\n    },\n    \"restrictions\": {\n        \"users\": [\n            \"octocat\"\n        ],\n        \"teams\": [\n            \"justice-league\"\n        ],\n        \"apps\": [\n            \"super-ci\"\n        ]\n    },\n    \"required_linear_history\": true,\n    \"allow_force_pushes\": true,\n    \"allow_deletions\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"required_status_checks\": {\n        \"strict\": true,\n        \"contexts\": [\n            \"continuous-integration/travis-ci\"\n        ]\n    },\n    \"enforce_admins\": true,\n    \"required_pull_request_reviews\": {\n        \"dismissal_restrictions\": {\n            \"users\": [\n                \"octocat\"\n            ],\n            \"teams\": [\n                \"justice-league\"\n            ]\n        },\n        \"dismiss_stale_reviews\": true,\n        \"require_code_owner_reviews\": true,\n        \"required_approving_review_count\": 2\n    },\n    \"restrictions\": {\n        \"users\": [\n            \"octocat\"\n        ],\n        \"teams\": [\n            \"justice-league\"\n        ],\n        \"apps\": [\n            \"super-ci\"\n        ]\n    },\n    \"required_linear_history\": true,\n    \"allow_force_pushes\": true,\n    \"allow_deletions\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"dolore laborum elit ipsum\",\n \"required_status_checks\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\",\n  \"contexts_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\",\n  \"strict\": true,\n  \"contexts\": [\n   \"continuous-integration/travis-ci\"\n  ]\n },\n \"required_pull_request_reviews\": {\n  \"url\": \"consectet\",\n  \"dismiss_stale_reviews\": true,\n  \"require_code_owner_reviews\": true,\n  \"required_approving_review_count\": 70927416,\n  \"dismissal_restrictions\": {\n   \"url\": \"amet adipisicing exercitation et\",\n   \"users_url\": \"veniam ut non ad\",\n   \"teams_url\": \"anim proident laborum laboris\",\n   \"users\": [\n    {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": true,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    },\n    {\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"gravatar_id\": \"\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"login\": \"octocat\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"site_admin\": false,\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"type\": \"User\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"starred_at\": \"\\\"2020-07-09T00:17:55Z\\\"\"\n    }\n   ],\n   \"teams\": [\n    {\n     \"id\": -79248783,\n     \"node_id\": \"eu culpa labore dolore non\",\n     \"url\": \"laborum qui\",\n     \"members_url\": \"dolore aliqua laborum\",\n     \"name\": \"esse\",\n     \"description\": \"mollit officia nulla irure\",\n     \"permission\": \"eiusmod Excepteur Lorem\",\n     \"html_url\": \"https://github.com/orgs/rails/teams/core\",\n     \"repositories_url\": \"magna pariatur aute tempor\",\n     \"slug\": \"velit ex nostrud occaec\",\n     \"privacy\": \"qui veniam consectetur\",\n     \"parent\": {\n      \"id\": 1,\n      \"node_id\": \"MDQ6VGVhbTE=\",\n      \"url\": \"https://api.github.com/organizations/1/team/1\",\n      \"members_url\": \"https://api.github.com/organizations/1/team/1/members{/member}\",\n      \"name\": \"Justice League\",\n      \"description\": \"A great team.\",\n      \"permission\": \"admin\",\n      \"html_url\": \"https://github.com/orgs/rails/teams/core\",\n      \"repositories_url\": \"https://api.github.com/organizations/1/team/1/repos\",\n      \"slug\": \"justice-league\",\n      \"privacy\": \"closed\",\n      \"ldap_dn\": \"uid=example,ou=users,dc=github,dc=com\"\n     }\n    },\n    {\n     \"id\": 36475577,\n     \"node_id\": \"irure et id\",\n     \"url\": \"ut minim irure\",\n     \"members_url\": \"ad Ut id\",\n     \"name\": \"Ut ipsum\",\n     \"description\": \"esse dolore\",\n     \"permission\": \"occaecat dolor ex\",\n     \"html_url\": \"https://github.com/orgs/rails/teams/core\",\n     \"repositories_url\": \"cupidatat do\",\n     \"slug\": \"i\",\n     \"privacy\": \"magna anim\",\n     \"parent\": {\n      \"id\": 1,\n      \"node_id\": \"MDQ6VGVhbTE=\",\n      \"url\": \"https://api.github.com/organizations/1/team/1\",\n      \"members_url\": \"https://api.github.com/organizations/1/team/1/members{/member}\",\n      \"name\": \"Justice League\",\n      \"description\": \"A great team.\",\n      \"permission\": \"admin\",\n      \"html_url\": \"https://github.com/orgs/rails/teams/core\",\n      \"repositories_url\": \"https://api.github.com/organizations/1/team/1/repos\",\n      \"slug\": \"justice-league\",\n      \"privacy\": \"closed\",\n      \"ldap_dn\": \"uid=example,ou=users,dc=github,dc=com\"\n     }\n    }\n   ]\n  }\n },\n \"required_signatures\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures\",\n  \"enabled\": true\n },\n \"enforce_admins\": {\n  \"url\": \"pariatur ullamco esse dolor\",\n  \"enabled\": false\n },\n \"required_linear_history\": {\n  \"enabled\": true\n },\n \"allow_force_pushes\": {\n  \"enabled\": false\n },\n \"allow_deletions\": {\n  \"enabled\": true\n },\n \"restrictions\": {\n  \"url\": \"sed Duis Lorem\",\n  \"users_url\": \"Lorem do\",\n  \"teams_url\": \"ad dolor dolor\",\n  \"apps_url\": \"dolore et mollit velit\",\n  \"users\": [\n   {\n    \"login\": \"do tempor ad\",\n    \"id\": -87714505,\n    \"node_id\": \"Excepteur ut et Ut\",\n    \"avatar_url\": \"cillum fugiat\",\n    \"gravatar_id\": \"eu esse consequat\",\n    \"url\": \"Ut eiusmod ut aliqua qui\",\n    \"html_url\": \"Excepteur in consequat\",\n    \"followers_url\": \"cillum ut culpa\",\n    \"following_url\": \"dolor Excepteur in ad\",\n    \"gists_url\": \"Ut mollit anim\",\n    \"starred_url\": \"ipsum ut incididunt\",\n    \"subscriptions_url\": \"laboris in non\",\n    \"organizations_url\": \"elit Duis tempor dolor\",\n    \"repos_url\": \"occaecat in pariatur id minim\",\n    \"events_url\": \"cupidatat quis\",\n    \"received_events_url\": \"sit Duis labore Excepteur\",\n    \"type\": \"minim co\",\n    \"site_admin\": false\n   },\n   {\n    \"login\": \"nulla reprehenderit d\",\n    \"id\": -40211058,\n    \"node_id\": \"dolore et aute\",\n    \"avatar_url\": \"amet non irure labore adipisicing\",\n    \"gravatar_id\": \"cupidatat consecte\",\n    \"url\": \"est voluptate Excepteur ipsum\",\n    \"html_url\": \"proident dolore laborum\",\n    \"followers_url\": \"anim mollit officia\",\n    \"following_url\": \"consequat elit Duis non\",\n    \"gists_url\": \"qui\",\n    \"starred_url\": \"ex fugiat pariatur deserunt\",\n    \"subscriptions_url\": \"sed voluptate\",\n    \"organizations_url\": \"consectetur exercitation commodo\",\n    \"repos_url\": \"eu laborum do\",\n    \"events_url\": \"consectetur minim voluptate\",\n    \"received_events_url\": \"ut\",\n    \"type\": \"sint ad veniam exercitation velit\",\n    \"site_admin\": false\n   }\n  ],\n  \"teams\": [\n   {\n    \"id\": 27933237,\n    \"node_id\": \"pariatur velit\",\n    \"url\": \"cupidatat nostrud elit sed\",\n    \"html_url\": \"dolor eu\",\n    \"name\": \"voluptate Excepteur tempor aute eiusmod\",\n    \"slug\": \"id qu\",\n    \"description\": \"laborum volupt\",\n    \"privacy\": \"dolor adipisicing Duis est\",\n    \"permission\": \"est anim Lorem\",\n    \"members_url\": \"laboris voluptate qui dolore\",\n    \"repositories_url\": \"sit minim\",\n    \"parent\": \"occaecat pariatur\"\n   },\n   {\n    \"id\": 43823184,\n    \"node_id\": \"sit ut consequat\",\n    \"url\": \"incididunt\",\n    \"html_url\": \"e\",\n    \"name\": \"elit mollit aliqua\",\n    \"slug\": \"Excepteur qui\",\n    \"description\": \"in cupidatat Excepteur quis\",\n    \"privacy\": \"eu\",\n    \"permission\": \"adipisicing id\",\n    \"members_url\": \"est \",\n    \"repositories_url\": \"Excepteur aliquip in\",\n    \"parent\": \"nulla ea cillum pariatur\"\n   }\n  ],\n  \"apps\": [\n   {\n    \"id\": -10234894,\n    \"slug\": \"labore sed commodo reprehenderit\",\n    \"node_id\": \"eiusmod\",\n    \"owner\": {\n     \"login\": \"ad sed\",\n     \"id\": -38514903,\n     \"node_id\": \"magna irure occaecat\",\n     \"url\": \"adipisicing mollit deserunt dolor velit\",\n     \"repos_url\": \"enim ut\",\n     \"events_url\": \"eiusmod Duis\",\n     \"hooks_url\": \"in in\",\n     \"issues_url\": \"aliqua minim\",\n     \"members_url\": \"aute anim vel\",\n     \"public_members_url\": \"consequat exercitation labore\",\n     \"avatar_url\": \"amet Excepteur cillum elit\",\n     \"description\": \"dolore ad\",\n     \"gravatar_id\": \"\\\"\\\"\",\n     \"html_url\": \"\\\"https://github.com/testorg-ea8ec76d71c3af4b\\\"\",\n     \"followers_url\": \"\\\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/followers\\\"\",\n     \"following_url\": \"\\\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/following{/other_user}\\\"\",\n     \"gists_url\": \"\\\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/gists{/gist_id}\\\"\",\n     \"starred_url\": \"\\\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/starred{/owner}{/repo}\\\"\",\n     \"subscriptions_url\": \"\\\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/subscriptions\\\"\",\n     \"organizations_url\": \"\\\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/orgs\\\"\",\n     \"received_events_url\": \"\\\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/received_events\\\"\",\n     \"type\": \"\\\"Organization\\\"\"\n    },\n    \"name\": \"aliqua sed voluptate sit fugiat\",\n    \"description\": \"incididunt irure dolore occaecat\",\n    \"external_url\": \"incididunt ex commodo et\",\n    \"html_url\": \"Ut aliqua\",\n    \"created_at\": \"nulla tempor dolor\",\n    \"updated_at\": \"ea dolore proident sed velit\",\n    \"permissions\": {\n     \"metadata\": \"elit officia\",\n     \"contents\": \"est Excepteur\",\n     \"issues\": \"nisi es\",\n     \"single_file\": \"est\"\n    },\n    \"events\": [\n     \"voluptate\",\n     \"nostrud consectetur\"\n    ]\n   },\n   {\n    \"id\": 10380138,\n    \"slug\": \"consectetur a\",\n    \"node_id\": \"minim velit consectetur labore\",\n    \"owner\": {\n     \"login\": \"sit nulla ullamco in\",\n     \"id\": -4055990,\n     \"node_id\": \"deserunt in\",\n     \"url\": \"voluptate nulla occaecat\",\n     \"repos_url\": \"ex\",\n     \"events_url\": \"sed consequat sint deserunt esse\",\n     \"hooks_url\": \"dolore nulla aliqua\",\n     \"issues_url\": \"labore ex dolor\",\n     \"members_url\": \"dolore dolore incididunt\",\n     \"public_members_url\": \"do incididunt mollit dolore\",\n     \"avatar_url\": \"fugiat in\",\n     \"description\": \"anim fugiat occaecat\",\n     \"gravatar_id\": \"\\\"\\\"\",\n     \"html_url\": \"\\\"https://github.com/testorg-ea8ec76d71c3af4b\\\"\",\n     \"followers_url\": \"\\\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/followers\\\"\",\n     \"following_url\": \"\\\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/following{/other_user}\\\"\",\n     \"gists_url\": \"\\\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/gists{/gist_id}\\\"\",\n     \"starred_url\": \"\\\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/starred{/owner}{/repo}\\\"\",\n     \"subscriptions_url\": \"\\\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/subscriptions\\\"\",\n     \"organizations_url\": \"\\\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/orgs\\\"\",\n     \"received_events_url\": \"\\\"https://api.github.com/users/testorg-ea8ec76d71c3af4b/received_events\\\"\",\n     \"type\": \"\\\"Organization\\\"\"\n    },\n    \"name\": \"eu velit\",\n    \"description\": \"qui aute\",\n    \"external_url\": \"minim pariatur sed\",\n    \"html_url\": \"tempor esse\",\n    \"created_at\": \"ut et\",\n    \"updated_at\": \"ex eiusmod incididunt do\",\n    \"permissions\": {\n     \"metadata\": \"eiusmod officia aliquip\",\n     \"contents\": \"fugiat in quis laboris\",\n     \"issues\": \"dolor eiusmod\",\n     \"single_file\": \"velit\"\n    },\n    \"events\": [\n     \"Ut pariatur\",\n     \"amet non enim Lorem nisi\"\n    ]\n   }\n  ]\n }\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"required_status_checks\": {\n        \"strict\": true,\n        \"contexts\": [\n            \"continuous-integration/travis-ci\"\n        ]\n    },\n    \"enforce_admins\": true,\n    \"required_pull_request_reviews\": {\n        \"dismissal_restrictions\": {\n            \"users\": [\n                \"octocat\"\n            ],\n            \"teams\": [\n                \"justice-league\"\n            ]\n        },\n        \"dismiss_stale_reviews\": true,\n        \"require_code_owner_reviews\": true,\n        \"required_approving_review_count\": 2\n    },\n    \"restrictions\": {\n        \"users\": [\n            \"octocat\"\n        ],\n        \"teams\": [\n            \"justice-league\"\n        ],\n        \"apps\": [\n            \"super-ci\"\n        ]\n    },\n    \"required_linear_history\": true,\n    \"allow_force_pushes\": true,\n    \"allow_deletions\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"aliqua esse in\",\n \"documentation_url\": \"occaecat deserunt pariatur ea\",\n \"errors\": [\n  \"aliquip\",\n  \"laboris cillum minim est dolor\"\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"required_status_checks\": {\n        \"strict\": true,\n        \"contexts\": [\n            \"continuous-integration/travis-ci\"\n        ]\n    },\n    \"enforce_admins\": true,\n    \"required_pull_request_reviews\": {\n        \"dismissal_restrictions\": {\n            \"users\": [\n                \"octocat\"\n            ],\n            \"teams\": [\n                \"justice-league\"\n            ]\n        },\n        \"dismiss_stale_reviews\": true,\n        \"require_code_owner_reviews\": true,\n        \"required_approving_review_count\": 2\n    },\n    \"restrictions\": {\n        \"users\": [\n            \"octocat\"\n        ],\n        \"teams\": [\n            \"justice-league\"\n        ],\n        \"apps\": [\n            \"super-ci\"\n        ]\n    },\n    \"required_linear_history\": true,\n    \"allow_force_pushes\": true,\n    \"allow_deletions\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"required_status_checks\": {\n        \"strict\": true,\n        \"contexts\": [\n            \"continuous-integration/travis-ci\"\n        ]\n    },\n    \"enforce_admins\": true,\n    \"required_pull_request_reviews\": {\n        \"dismissal_restrictions\": {\n            \"users\": [\n                \"octocat\"\n            ],\n            \"teams\": [\n                \"justice-league\"\n            ]\n        },\n        \"dismiss_stale_reviews\": true,\n        \"require_code_owner_reviews\": true,\n        \"required_approving_review_count\": 2\n    },\n    \"restrictions\": {\n        \"users\": [\n            \"octocat\"\n        ],\n        \"teams\": [\n            \"justice-league\"\n        ],\n        \"apps\": [\n            \"super-ci\"\n        ]\n    },\n    \"required_linear_history\": true,\n    \"allow_force_pushes\": true,\n    \"allow_deletions\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get branch protection",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection\",\n \"enabled\": true,\n \"required_status_checks\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks\",\n  \"contexts\": [\n   \"continuous-integration/travis-ci\"\n  ],\n  \"contexts_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_status_checks/contexts\",\n  \"enforcement_level\": \"non_admins\"\n },\n \"enforce_admins\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/enforce_admins\",\n  \"enabled\": true\n },\n \"required_pull_request_reviews\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_pull_request_reviews\",\n  \"dismissal_restrictions\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions\",\n   \"users_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/users\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions/teams\",\n   \"users\": [\n    {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    }\n   ],\n   \"teams\": [\n    {\n     \"id\": 1,\n     \"node_id\": \"MDQ6VGVhbTE=\",\n     \"url\": \"https://api.github.com/teams/1\",\n     \"html_url\": \"https://api.github.com/teams/justice-league\",\n     \"name\": \"Justice League\",\n     \"slug\": \"justice-league\",\n     \"description\": \"A great team.\",\n     \"privacy\": \"closed\",\n     \"permission\": \"admin\",\n     \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n     \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n     \"parent\": null\n    }\n   ]\n  },\n  \"dismiss_stale_reviews\": true,\n  \"require_code_owner_reviews\": true,\n  \"required_approving_review_count\": 2\n },\n \"restrictions\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions\",\n  \"users_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/users\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams\",\n  \"apps_url\": \"https://api.github.com/repos/octocat/Hello-World/branches/master/protection/restrictions/teams\",\n  \"users\": [\n   {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   }\n  ],\n  \"teams\": [\n   {\n    \"id\": 1,\n    \"node_id\": \"MDQ6VGVhbTE=\",\n    \"url\": \"https://api.github.com/teams/1\",\n    \"html_url\": \"https://api.github.com/teams/justice-league\",\n    \"name\": \"Justice League\",\n    \"slug\": \"justice-league\",\n    \"description\": \"A great team.\",\n    \"privacy\": \"closed\",\n    \"permission\": \"admin\",\n    \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n    \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n    \"parent\": null\n   }\n  ],\n  \"apps\": [\n   {\n    \"id\": 1,\n    \"slug\": \"octoapp\",\n    \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n    \"owner\": {\n     \"login\": \"github\",\n     \"id\": 1,\n     \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n     \"url\": \"https://api.github.com/orgs/github\",\n     \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n     \"events_url\": \"https://api.github.com/orgs/github/events\",\n     \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n     \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n     \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n     \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"description\": \"A great organization\"\n    },\n    \"name\": \"Octocat App\",\n    \"description\": \"\",\n    \"external_url\": \"https://example.com\",\n    \"html_url\": \"https://github.com/apps/octoapp\",\n    \"created_at\": \"2017-07-08T16:18:44-04:00\",\n    \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n    \"permissions\": {\n     \"metadata\": \"read\",\n     \"contents\": \"read\",\n     \"issues\": \"write\",\n     \"single_file\": \"write\"\n    },\n    \"events\": [\n     \"push\",\n     \"pull_request\"\n    ]\n   }\n  ]\n },\n \"required_linear_history\": {\n  \"enabled\": true\n },\n \"allow_force_pushes\": {\n  \"enabled\": true\n },\n \"allow_deletions\": {\n  \"enabled\": true\n }\n}"
						}
					]
				},
				{
					"name": "List repository invitations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/invitations?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"invitations"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "When authenticating as a user with admin rights to a repository, this endpoint will list all currently open repository invitations."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/invitations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"invitations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"repository\": {\n   \"id\": 1296269,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n   \"name\": \"Hello-World\",\n   \"full_name\": \"octocat/Hello-World\",\n   \"owner\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/octocat/Hello-World\",\n   \"description\": \"This your first repo!\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n   \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n   \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n   \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n   \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n   \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n   \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n   \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n   \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\"\n  },\n  \"invitee\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"inviter\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"permissions\": \"write\",\n  \"created_at\": \"2016-06-13T14:52:50-05:00\",\n  \"url\": \"https://api.github.com/user/repository_invitations/1296269\",\n  \"html_url\": \"https://github.com/octocat/Hello-World/invitations\",\n  \"node_id\": \"MDQ6VXNlcjE=\"\n }\n]"
						}
					]
				},
				{
					"name": "Decline a repository invitation",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/repository_invitations/:invitation_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"repository_invitations",
								":invitation_id"
							],
							"variable": [
								{
									"key": "invitation_id",
									"value": "41891364",
									"description": "(Required) invitation_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repository_invitations/:invitation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repository_invitations",
										":invitation_id"
									],
									"variable": [
										{
											"key": "invitation_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repository_invitations/:invitation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repository_invitations",
										":invitation_id"
									],
									"variable": [
										{
											"key": "invitation_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repository_invitations/:invitation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repository_invitations",
										":invitation_id"
									],
									"variable": [
										{
											"key": "invitation_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repository_invitations/:invitation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repository_invitations",
										":invitation_id"
									],
									"variable": [
										{
											"key": "invitation_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repository_invitations/:invitation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repository_invitations",
										":invitation_id"
									],
									"variable": [
										{
											"key": "invitation_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Accept a repository invitation",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/repository_invitations/:invitation_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"repository_invitations",
								":invitation_id"
							],
							"variable": [
								{
									"key": "invitation_id",
									"value": "41891364",
									"description": "(Required) invitation_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repository_invitations/:invitation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repository_invitations",
										":invitation_id"
									],
									"variable": [
										{
											"key": "invitation_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repository_invitations/:invitation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repository_invitations",
										":invitation_id"
									],
									"variable": [
										{
											"key": "invitation_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repository_invitations/:invitation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repository_invitations",
										":invitation_id"
									],
									"variable": [
										{
											"key": "invitation_id"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repository_invitations/:invitation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repository_invitations",
										":invitation_id"
									],
									"variable": [
										{
											"key": "invitation_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repository_invitations/:invitation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repository_invitations",
										":invitation_id"
									],
									"variable": [
										{
											"key": "invitation_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Ping a repository webhook",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id/pings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"hooks",
								":hook_id",
								"pings"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "hook_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "This will trigger a [ping event](https://developer.github.com/webhooks/#ping-event) to be sent to the hook."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id/pings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks",
										":hook_id",
										"pings"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id/pings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks",
										":hook_id",
										"pings"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List repository tags",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/tags?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"tags"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/tags?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"tags"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"name\": \"v0.1\",\n  \"commit\": {\n   \"sha\": \"c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\",\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/c5b97d5ae6c19d5c5df71a34c7fbeeda2479ccbc\"\n  },\n  \"zipball_url\": \"https://github.com/octocat/Hello-World/zipball/v0.1\",\n  \"tarball_url\": \"https://github.com/octocat/Hello-World/tarball/v0.1\",\n  \"node_id\": \"MDQ6VXNlcjE=\"\n }\n]"
						}
					]
				},
				{
					"name": "List repository teams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/teams?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"teams"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/teams?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"teams"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDQ6VGVhbTE=\",\n  \"url\": \"https://api.github.com/teams/1\",\n  \"html_url\": \"https://api.github.com/teams/justice-league\",\n  \"name\": \"Justice League\",\n  \"slug\": \"justice-league\",\n  \"description\": \"A great team.\",\n  \"privacy\": \"closed\",\n  \"permission\": \"admin\",\n  \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n  \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n  \"parent\": null\n }\n]"
						}
					]
				},
				{
					"name": "Get the last year of commit activity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/stats/commit_activity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"stats",
								"commit_activity"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns the last year of commit activity grouped by week. The `days` array is a group of commits per day, starting on `Sunday`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/stats/commit_activity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"stats",
										"commit_activity"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"days\": [\n   0,\n   3,\n   26,\n   20,\n   39,\n   1,\n   0\n  ],\n  \"total\": 89,\n  \"week\": 1336280400\n }\n]"
						}
					]
				},
				{
					"name": "List repository languages",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/languages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"languages"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists languages for the specified repository. The value shown for each language is the number of bytes of code written in that language."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/languages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"languages"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"C\": 78769,\n \"Python\": 7769\n}"
						}
					]
				},
				{
					"name": "Create a repository dispatch event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"event_type\": \"on-demand-test\",\n    \"client_payload\": {\n        \"unit\": false,\n        \"integration\": true\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/dispatches",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"dispatches"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "You can use this endpoint to trigger a webhook event called `repository_dispatch` when you want activity that happens outside of GitHub to trigger a GitHub Actions workflow or GitHub App webhook. You must configure your GitHub Actions workflow or GitHub App to run when the `repository_dispatch` event occurs. For an example `repository_dispatch` webhook payload, see \"[RepositoryDispatchEvent](https://developer.github.com/webhooks/event-payloads/#repository_dispatch).\"\n\nThe `client_payload` parameter is available for any extra information that your workflow might need. This parameter is a JSON payload that will be passed on when the webhook event is dispatched. For example, the `client_payload` can include a message that a user would like to send using a GitHub Actions workflow. Or the `client_payload` can be used as a test to debug your workflow. For a test example, see the [input example](https://developer.github.com/v3/repos/#example-4).\n\nTo give you write access to the repository, you must use a personal access token with the `repo` scope. For more information, see \"[Creating a personal access token for the command line](https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line)\" in the GitHub Help documentation.\n\nThis input example shows how you can use the `client_payload` as a test to debug your workflow."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event_type\": \"on-demand-test\",\n    \"client_payload\": {\n        \"unit\": false,\n        \"integration\": true\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/dispatches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"dispatches"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"event_type\": \"on-demand-test\",\n    \"client_payload\": {\n        \"unit\": false,\n        \"integration\": true\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/dispatches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"dispatches"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get the hourly commit count for each day",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/stats/punch_card",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"stats",
								"punch_card"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Each array contains the day number, hour number, and number of commits:\n\n*   `0-6`: Sunday - Saturday\n*   `0-23`: Hour of day\n*   Number of commits\n\nFor example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits."
					},
					"response": [
						{
							"name": "For example, `[2, 14, 25]` indicates that there were 25 total commits, during the 2:00pm hour on Tuesdays. All times are based on the time zone of individual commits.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/stats/punch_card",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"stats",
										"punch_card"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n [\n  0,\n  0,\n  5\n ],\n [\n  0,\n  1,\n  43\n ],\n [\n  0,\n  2,\n  21\n ]\n]"
						}
					]
				},
				{
					"name": "Transfer a repository",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"new_owner\": \"github\",\n    \"team_ids\": [\n        12,\n        345\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/transfer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"transfer"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "A transfer request will need to be accepted by the new owner when transferring a personal repository to another user. The response will contain the original `owner`, and the transfer will continue asynchronously. For more details on the requirements to transfer personal and organization-owned repositories, see [about repository transfers](https://help.github.com/articles/about-repository-transfers/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"new_owner\": \"github\",\n    \"team_ids\": [\n        12,\n        345\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/transfer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"transfer"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1296269,\n \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n \"name\": \"Hello-World\",\n \"full_name\": \"octocat/Hello-World\",\n \"owner\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"private\": false,\n \"html_url\": \"https://github.com/octocat/Hello-World\",\n \"description\": \"This your first repo!\",\n \"fork\": false,\n \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n \"homepage\": \"https://github.com\",\n \"language\": null,\n \"forks\": 9,\n \"forks_count\": 9,\n \"stargazers_count\": 80,\n \"watchers_count\": 80,\n \"watchers\": 80,\n \"size\": 108,\n \"default_branch\": \"master\",\n \"open_issues\": 0,\n \"open_issues_count\": 0,\n \"is_template\": true,\n \"license\": {\n  \"key\": \"mit\",\n  \"name\": \"MIT License\",\n  \"url\": \"https://api.github.com/licenses/mit\",\n  \"spdx_id\": \"MIT\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n  \"html_url\": \"https://api.github.com/licenses/mit\"\n },\n \"topics\": [\n  \"octocat\",\n  \"atom\",\n  \"electron\",\n  \"api\"\n ],\n \"has_issues\": true,\n \"has_projects\": true,\n \"has_wiki\": true,\n \"has_pages\": false,\n \"has_downloads\": true,\n \"archived\": false,\n \"disabled\": false,\n \"visibility\": \"public\",\n \"pushed_at\": \"2011-01-26T19:06:43Z\",\n \"created_at\": \"2011-01-26T19:01:12Z\",\n \"updated_at\": \"2011-01-26T19:14:43Z\",\n \"permissions\": {\n  \"admin\": false,\n  \"push\": false,\n  \"pull\": true\n },\n \"allow_rebase_merge\": true,\n \"template_repository\": null,\n \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n \"allow_squash_merge\": true,\n \"delete_branch_on_merge\": true,\n \"allow_merge_commit\": true,\n \"subscribers_count\": 42,\n \"network_count\": 0\n}"
						}
					]
				},
				{
					"name": "Create a repository for the authenticated user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Team Environment\",\n    \"description\": \"Ut commodo\",\n    \"homepage\": \"culpa occaecat ea fugiat mollit\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n    \"team_id\": 6828700,\n    \"auto_init\": true,\n    \"gitignore_template\": \"Haskell\",\n    \"license_template\": \"mit\",\n    \"allow_squash_merge\": true,\n    \"allow_merge_commit\": true,\n    \"allow_rebase_merge\": true,\n    \"delete_branch_on_merge\": false,\n    \"has_downloads\": true,\n    \"is_template\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/repos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"repos"
							]
						},
						"description": "Creates a new repository for the authenticated user.\n\n**OAuth scope requirements**\n\nWhen using [OAuth](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/), authorizations must include:\n\n*   `public_repo` scope or `repo` scope to create a public repository\n*   `repo` scope to create a private repository"
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Team Environment\",\n    \"description\": \"Ut commodo\",\n    \"homepage\": \"culpa occaecat ea fugiat mollit\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n    \"team_id\": 6828700,\n    \"auto_init\": true,\n    \"gitignore_template\": \"Haskell\",\n    \"license_template\": \"mit\",\n    \"allow_squash_merge\": true,\n    \"allow_merge_commit\": true,\n    \"allow_rebase_merge\": true,\n    \"delete_branch_on_merge\": false,\n    \"has_downloads\": true,\n    \"is_template\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/repos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repos"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Team Environment\",\n    \"description\": \"Ut commodo\",\n    \"homepage\": \"culpa occaecat ea fugiat mollit\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n    \"team_id\": 6828700,\n    \"auto_init\": true,\n    \"gitignore_template\": \"Haskell\",\n    \"license_template\": \"mit\",\n    \"allow_squash_merge\": true,\n    \"allow_merge_commit\": true,\n    \"allow_rebase_merge\": true,\n    \"delete_branch_on_merge\": false,\n    \"has_downloads\": true,\n    \"is_template\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/repos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repos"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Team Environment\",\n    \"description\": \"Ut commodo\",\n    \"homepage\": \"culpa occaecat ea fugiat mollit\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n    \"team_id\": 6828700,\n    \"auto_init\": true,\n    \"gitignore_template\": \"Haskell\",\n    \"license_template\": \"mit\",\n    \"allow_squash_merge\": true,\n    \"allow_merge_commit\": true,\n    \"allow_rebase_merge\": true,\n    \"delete_branch_on_merge\": false,\n    \"has_downloads\": true,\n    \"is_template\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/repos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repos"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Team Environment\",\n    \"description\": \"Ut commodo\",\n    \"homepage\": \"culpa occaecat ea fugiat mollit\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n    \"team_id\": 6828700,\n    \"auto_init\": true,\n    \"gitignore_template\": \"Haskell\",\n    \"license_template\": \"mit\",\n    \"allow_squash_merge\": true,\n    \"allow_merge_commit\": true,\n    \"allow_rebase_merge\": true,\n    \"delete_branch_on_merge\": false,\n    \"has_downloads\": true,\n    \"is_template\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/repos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repos"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Team Environment\",\n    \"description\": \"Ut commodo\",\n    \"homepage\": \"culpa occaecat ea fugiat mollit\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n    \"team_id\": 6828700,\n    \"auto_init\": true,\n    \"gitignore_template\": \"Haskell\",\n    \"license_template\": \"mit\",\n    \"allow_squash_merge\": true,\n    \"allow_merge_commit\": true,\n    \"allow_rebase_merge\": true,\n    \"delete_branch_on_merge\": false,\n    \"has_downloads\": true,\n    \"is_template\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/repos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repos"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1296269,\n \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n \"name\": \"Hello-World\",\n \"full_name\": \"octocat/Hello-World\",\n \"owner\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"private\": false,\n \"html_url\": \"https://github.com/octocat/Hello-World\",\n \"description\": \"This your first repo!\",\n \"fork\": false,\n \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n \"homepage\": \"https://github.com\",\n \"language\": null,\n \"forks\": 9,\n \"forks_count\": 9,\n \"stargazers_count\": 80,\n \"watchers_count\": 80,\n \"watchers\": 80,\n \"size\": 108,\n \"default_branch\": \"master\",\n \"open_issues\": 0,\n \"open_issues_count\": 0,\n \"is_template\": true,\n \"license\": {\n  \"key\": \"mit\",\n  \"name\": \"MIT License\",\n  \"url\": \"https://api.github.com/licenses/mit\",\n  \"spdx_id\": \"MIT\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n  \"html_url\": \"https://api.github.com/licenses/mit\"\n },\n \"topics\": [\n  \"octocat\",\n  \"atom\",\n  \"electron\",\n  \"api\"\n ],\n \"has_issues\": true,\n \"has_projects\": true,\n \"has_wiki\": true,\n \"has_pages\": false,\n \"has_downloads\": true,\n \"archived\": false,\n \"disabled\": false,\n \"visibility\": \"public\",\n \"pushed_at\": \"2011-01-26T19:06:43Z\",\n \"created_at\": \"2011-01-26T19:01:12Z\",\n \"updated_at\": \"2011-01-26T19:14:43Z\",\n \"permissions\": {\n  \"admin\": false,\n  \"push\": false,\n  \"pull\": true\n },\n \"allow_rebase_merge\": true,\n \"template_repository\": null,\n \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n \"allow_squash_merge\": true,\n \"delete_branch_on_merge\": true,\n \"allow_merge_commit\": true,\n \"subscribers_count\": 42,\n \"network_count\": 0\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Team Environment\",\n    \"description\": \"Ut commodo\",\n    \"homepage\": \"culpa occaecat ea fugiat mollit\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n    \"team_id\": 6828700,\n    \"auto_init\": true,\n    \"gitignore_template\": \"Haskell\",\n    \"license_template\": \"mit\",\n    \"allow_squash_merge\": true,\n    \"allow_merge_commit\": true,\n    \"allow_rebase_merge\": true,\n    \"delete_branch_on_merge\": false,\n    \"has_downloads\": true,\n    \"is_template\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/repos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repos"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Team Environment\",\n    \"description\": \"Ut commodo\",\n    \"homepage\": \"culpa occaecat ea fugiat mollit\",\n    \"private\": true,\n    \"has_issues\": true,\n    \"has_projects\": true,\n    \"has_wiki\": true,\n    \"team_id\": 6828700,\n    \"auto_init\": true,\n    \"gitignore_template\": \"Haskell\",\n    \"license_template\": \"mit\",\n    \"allow_squash_merge\": true,\n    \"allow_merge_commit\": true,\n    \"allow_rebase_merge\": true,\n    \"delete_branch_on_merge\": false,\n    \"has_downloads\": true,\n    \"is_template\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/repos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repos"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List repositories for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/repos?visibility=all&affiliation=veniam &type=member&sort=updated&direction=asc&per_page=-27113311&page=-70394044&since=aliquip sint&before=aliquip sint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"repos"
							],
							"query": [
								{
									"key": "visibility",
									"value": "all",
									"description": "Can be one of `all`, `public`, or `private`."
								},
								{
									"key": "affiliation",
									"value": "veniam ",
									"description": "Comma-separated list of values. Can include:  \n\\* `owner`: Repositories that are owned by the authenticated user.  \n\\* `collaborator`: Repositories that the user has been added to as a collaborator.  \n\\* `organization_member`: Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on."
								},
								{
									"key": "type",
									"value": "member",
									"description": "Can be one of `all`, `owner`, `public`, `private`, `member`. Default: `all`  \n  \nWill cause a `422` error if used in the same request as **visibility** or **affiliation**. Will cause a `422` error if used in the same request as **visibility** or **affiliation**."
								},
								{
									"key": "sort",
									"value": "updated",
									"description": "Can be one of `created`, `updated`, `pushed`, `full_name`."
								},
								{
									"key": "direction",
									"value": "asc",
									"description": "Can be one of `asc` or `desc`. Default: `asc` when using `full_name`, otherwise `desc`"
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								},
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "before",
									"value": "aliquip sint",
									"description": "Only show notifications updated before the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								}
							]
						},
						"description": "Lists repositories that the authenticated user has explicit permission (`:read`, `:write`, or `:admin`) to access.\n\nThe authenticated user has explicit permission to access repositories they own, repositories where they are a collaborator, and repositories that they can access through an organization membership."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repos?visibility=all&affiliation=veniam &type=member&sort=updated&direction=asc&per_page=-27113311&page=-70394044&since=nisi reprehenderit&before=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repos"
									],
									"query": [
										{
											"key": "visibility",
											"value": "all"
										},
										{
											"key": "affiliation",
											"value": "veniam "
										},
										{
											"key": "type",
											"value": "member"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "before",
											"value": "nisi reprehenderit"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"allow_rebase_merge\": true,\n  \"template_repository\": null,\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"allow_squash_merge\": true,\n  \"delete_branch_on_merge\": true,\n  \"allow_merge_commit\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"spdx_id\": \"MIT\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n   \"html_url\": \"https://github.com/licenses/mit\"\n  },\n  \"forks\": 1,\n  \"open_issues\": 1,\n  \"watchers\": 1\n }\n]"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repos?visibility=all&affiliation=veniam &type=member&sort=updated&direction=asc&per_page=-27113311&page=-70394044&since=nisi reprehenderit&before=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repos"
									],
									"query": [
										{
											"key": "visibility",
											"value": "all"
										},
										{
											"key": "affiliation",
											"value": "veniam "
										},
										{
											"key": "type",
											"value": "member"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "before",
											"value": "nisi reprehenderit"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repos?visibility=all&affiliation=veniam &type=member&sort=updated&direction=asc&per_page=-27113311&page=-70394044&since=nisi reprehenderit&before=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repos"
									],
									"query": [
										{
											"key": "visibility",
											"value": "all"
										},
										{
											"key": "affiliation",
											"value": "veniam "
										},
										{
											"key": "type",
											"value": "member"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "before",
											"value": "nisi reprehenderit"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Response definition missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repos?visibility=all&affiliation=veniam &type=member&sort=updated&direction=asc&per_page=-27113311&page=-70394044&since=nisi reprehenderit&before=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repos"
									],
									"query": [
										{
											"key": "visibility",
											"value": "all"
										},
										{
											"key": "affiliation",
											"value": "veniam "
										},
										{
											"key": "type",
											"value": "member"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "before",
											"value": "nisi reprehenderit"
										}
									]
								}
							},
							"status": "I'm a teapot (RFC 2324)",
							"code": 418,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repos?visibility=all&affiliation=veniam &type=member&sort=updated&direction=asc&per_page=-27113311&page=-70394044&since=nisi reprehenderit&before=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repos"
									],
									"query": [
										{
											"key": "visibility",
											"value": "all"
										},
										{
											"key": "affiliation",
											"value": "veniam "
										},
										{
											"key": "type",
											"value": "member"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "before",
											"value": "nisi reprehenderit"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/repos?visibility=all&affiliation=veniam &type=member&sort=updated&direction=asc&per_page=-27113311&page=-70394044&since=nisi reprehenderit&before=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"repos"
									],
									"query": [
										{
											"key": "visibility",
											"value": "all"
										},
										{
											"key": "affiliation",
											"value": "veniam "
										},
										{
											"key": "type",
											"value": "member"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "direction",
											"value": "asc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "before",
											"value": "nisi reprehenderit"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Request a GitHub Pages build",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pages/builds",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pages",
								"builds"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "You can request that your site be built from the latest revision on the default branch. This has the same effect as pushing a commit to your default branch, but does not require an additional commit. Manually triggering page builds can be helpful when diagnosing build warnings and failures.\n\nBuild requests are limited to one concurrent build per repository and one concurrent build per requester. If you request a build while another is still in progress, the second request will be queued until the first completes."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages/builds",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages",
										"builds"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/github/developer.github.com/pages/builds/latest\",\n \"status\": \"queued\"\n}"
						}
					]
				},
				{
					"name": "List GitHub Pages builds",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pages/builds?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pages",
								"builds"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages/builds?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages",
										"builds"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/repos/github/developer.github.com/pages/builds/5472601\",\n  \"status\": \"built\",\n  \"error\": {\n   \"message\": null\n  },\n  \"pusher\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"commit\": \"351391cdcb88ffae71ec3028c91f375a8036a26b\",\n  \"duration\": 2104,\n  \"created_at\": \"2014-02-10T19:00:49Z\",\n  \"updated_at\": \"2014-02-10T19:00:51Z\"\n }\n]"
						}
					]
				},
				{
					"name": "Remove a repository collaborator",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"collaborators",
								":username"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check if a user is a repository collaborator",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"collaborators",
								":username"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nTeam members will include the members of child teams."
					},
					"response": [
						{
							"name": "Response if user is a collaborator",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response if user is not a collaborator",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a repository collaborator",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"permission\": \"maintain\",\n    \"permissions\": \"\\\"push\\\"\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"collaborators",
								":username"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "This endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.\n\nFor more information the permission levels, see \"[Repository permission levels for an organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)\".\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"\n\nThe invitee will receive a notification that they have been invited to the repository, which they must accept or decline. They may do this via the notifications page, the email they receive, or by using the [repository invitations API endpoints](https://developer.github.com/v3/repos/invitations/).\n\n**Rate limits**\n\nTo prevent abuse, you are limited to sending 50 invitations to a repository per 24 hour period. Note there is no limit if you are inviting organization members to an organization repository."
					},
					"response": [
						{
							"name": "Response when a new invitation is created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"maintain\",\n    \"permissions\": \"\\\"push\\\"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n \"repository\": {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\"\n },\n \"invitee\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"inviter\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"permissions\": \"write\",\n \"created_at\": \"2016-06-13T14:52:50-05:00\",\n \"url\": \"https://api.github.com/user/repository_invitations/1296269\",\n \"html_url\": \"https://github.com/octocat/Hello-World/invitations\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"maintain\",\n    \"permissions\": \"\\\"push\\\"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"maintain\",\n    \"permissions\": \"\\\"push\\\"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Response when person is already a collaborator",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"maintain\",\n    \"permissions\": \"\\\"push\\\"\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"collaborators",
										":username"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a fork",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"organization\": \"proident\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/forks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"forks"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Create a fork for the authenticated user.\n\n**Note**: Forking a Repository happens asynchronously. You may have to wait a short period of time before you can access the git objects. If this takes longer than 5 minutes, be sure to contact [GitHub Support](https://github.com/contact) or [GitHub Premium Support](https://premium.githubsupport.com)."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"organization\": \"proident\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/forks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"forks"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"organization\": \"proident\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/forks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"forks"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"organization\": \"proident\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/forks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"forks"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1296269,\n \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n \"name\": \"Hello-World\",\n \"full_name\": \"octocat/Hello-World\",\n \"owner\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"private\": false,\n \"html_url\": \"https://github.com/octocat/Hello-World\",\n \"description\": \"This your first repo!\",\n \"fork\": false,\n \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n \"homepage\": \"https://github.com\",\n \"language\": null,\n \"forks\": 9,\n \"forks_count\": 9,\n \"stargazers_count\": 80,\n \"watchers_count\": 80,\n \"watchers\": 80,\n \"size\": 108,\n \"default_branch\": \"master\",\n \"open_issues\": 0,\n \"open_issues_count\": 0,\n \"is_template\": true,\n \"license\": {\n  \"key\": \"mit\",\n  \"name\": \"MIT License\",\n  \"url\": \"https://api.github.com/licenses/mit\",\n  \"spdx_id\": \"MIT\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n  \"html_url\": \"https://api.github.com/licenses/mit\"\n },\n \"topics\": [\n  \"octocat\",\n  \"atom\",\n  \"electron\",\n  \"api\"\n ],\n \"has_issues\": true,\n \"has_projects\": true,\n \"has_wiki\": true,\n \"has_pages\": false,\n \"has_downloads\": true,\n \"archived\": false,\n \"disabled\": false,\n \"visibility\": \"public\",\n \"pushed_at\": \"2011-01-26T19:06:43Z\",\n \"created_at\": \"2011-01-26T19:01:12Z\",\n \"updated_at\": \"2011-01-26T19:14:43Z\",\n \"permissions\": {\n  \"admin\": false,\n  \"push\": false,\n  \"pull\": true\n },\n \"allow_rebase_merge\": true,\n \"template_repository\": null,\n \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n \"allow_squash_merge\": true,\n \"delete_branch_on_merge\": true,\n \"allow_merge_commit\": true,\n \"subscribers_count\": 42,\n \"network_count\": 0\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"organization\": \"proident\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/forks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"forks"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"organization\": \"proident\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/forks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"forks"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List forks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/forks?sort=oldest&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"forks"
							],
							"query": [
								{
									"key": "sort",
									"value": "oldest",
									"description": "The sort order. Can be either `newest`, `oldest`, or `stargazers`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/forks?sort=oldest&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"forks"
									],
									"query": [
										{
											"key": "sort",
											"value": "oldest"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/forks?sort=oldest&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"forks"
									],
									"query": [
										{
											"key": "sort",
											"value": "oldest"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": true,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"delete_branch_on_merge\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"spdx_id\": \"MIT\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Get page views",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/traffic/views?per=week",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"traffic",
								"views"
							],
							"query": [
								{
									"key": "per",
									"value": "week",
									"description": "Must be one of: `day`, `week`."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Get the total number of views and breakdown per day or week for the last 14 days. Timestamps are aligned to UTC midnight of the beginning of the day or week. Week begins on Monday."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/traffic/views?per=week",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"traffic",
										"views"
									],
									"query": [
										{
											"key": "per",
											"value": "week"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"count\": 14850,\n \"uniques\": 3782,\n \"views\": [\n  {\n   \"timestamp\": \"2016-10-10T00:00:00Z\",\n   \"count\": 440,\n   \"uniques\": 143\n  },\n  {\n   \"timestamp\": \"2016-10-11T00:00:00Z\",\n   \"count\": 1308,\n   \"uniques\": 414\n  },\n  {\n   \"timestamp\": \"2016-10-12T00:00:00Z\",\n   \"count\": 1486,\n   \"uniques\": 452\n  },\n  {\n   \"timestamp\": \"2016-10-13T00:00:00Z\",\n   \"count\": 1170,\n   \"uniques\": 401\n  },\n  {\n   \"timestamp\": \"2016-10-14T00:00:00Z\",\n   \"count\": 868,\n   \"uniques\": 266\n  },\n  {\n   \"timestamp\": \"2016-10-15T00:00:00Z\",\n   \"count\": 495,\n   \"uniques\": 157\n  },\n  {\n   \"timestamp\": \"2016-10-16T00:00:00Z\",\n   \"count\": 524,\n   \"uniques\": 175\n  },\n  {\n   \"timestamp\": \"2016-10-17T00:00:00Z\",\n   \"count\": 1263,\n   \"uniques\": 412\n  },\n  {\n   \"timestamp\": \"2016-10-18T00:00:00Z\",\n   \"count\": 1402,\n   \"uniques\": 417\n  },\n  {\n   \"timestamp\": \"2016-10-19T00:00:00Z\",\n   \"count\": 1394,\n   \"uniques\": 424\n  },\n  {\n   \"timestamp\": \"2016-10-20T00:00:00Z\",\n   \"count\": 1492,\n   \"uniques\": 448\n  },\n  {\n   \"timestamp\": \"2016-10-21T00:00:00Z\",\n   \"count\": 1153,\n   \"uniques\": 332\n  },\n  {\n   \"timestamp\": \"2016-10-22T00:00:00Z\",\n   \"count\": 566,\n   \"uniques\": 168\n  },\n  {\n   \"timestamp\": \"2016-10-23T00:00:00Z\",\n   \"count\": 675,\n   \"uniques\": 184\n  },\n  {\n   \"timestamp\": \"2016-10-24T00:00:00Z\",\n   \"count\": 614,\n   \"uniques\": 237\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/traffic/views?per=week",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"traffic",
										"views"
									],
									"query": [
										{
											"key": "per",
											"value": "week"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Upload a release asset",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"velit nulla ipsum\""
						},
						"url": {
							"raw": "{{origin}}/repos/:owner/:repo/releases/:release_id/assets?name=aliquip sint&label=aliquip sint",
							"host": [
								"{{origin}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"releases",
								":release_id",
								"assets"
							],
							"query": [
								{
									"key": "name",
									"value": "aliquip sint",
									"description": "name parameter"
								},
								{
									"key": "label",
									"value": "aliquip sint",
									"description": "label parameter"
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "release_id",
									"value": "41891364",
									"description": "(Required) release_id parameter"
								}
							]
						},
						"description": "This endpoint makes use of [a Hypermedia relation](https://developer.github.com/v3/#hypermedia) to determine which URL to access. The endpoint you call to upload release assets is specific to your release. Use the `upload_url` returned in\nthe response of the [Create a release endpoint](https://developer.github.com/v3/repos/releases/#create-a-release) to upload a release asset.\n\nYou need to use an HTTP client which supports [SNI](http://en.wikipedia.org/wiki/Server_Name_Indication) to make calls to this endpoint.\n\nMost libraries will set the required `Content-Length` header automatically. Use the required `Content-Type` header to provide the media type of the asset. For a list of media types, see [Media Types](https://www.iana.org/assignments/media-types/media-types.xhtml). For example: \n\n`application/zip`\n\nGitHub expects the asset data in its raw binary form, rather than JSON. You will send the raw binary content of the asset as the request body. Everything else about the endpoint is the same as the rest of the API. For example,\nyou'll still need to pass your authentication to be able to upload an asset.\n\nWhen an upstream failure occurs, you will receive a `502 Bad Gateway` status. This may leave an empty asset with a state of `starter`. It can be safely deleted.\n\n**Notes:**\n*   GitHub renames asset filenames that have special characters, non-alphanumeric characters, and leading or trailing periods. The \"[List assets for a release](https://developer.github.com/v3/repos/releases/#list-assets-for-a-release)\"\nendpoint lists the renamed filenames. For more information and help, contact [GitHub Support](https://github.com/contact).\n*   If you upload an asset with the same filename as another uploaded asset, you'll receive an error and must delete the old file before you can re-upload the new asset."
					},
					"response": [
						{
							"name": "Response for successful upload",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "\"velit nulla ipsum\""
								},
								"url": {
									"raw": "undefined?name=nisi reprehenderit&label=nisi reprehenderit",
									"host": [
										"undefined"
									],
									"query": [
										{
											"key": "name",
											"value": "nisi reprehenderit"
										},
										{
											"key": "label",
											"value": "nisi reprehenderit"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\n \"browser_download_url\": \"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\n \"id\": 1,\n \"node_id\": \"MDEyOlJlbGVhc2VBc3NldDE=\",\n \"name\": \"example.zip\",\n \"label\": \"short description\",\n \"state\": \"uploaded\",\n \"content_type\": \"application/zip\",\n \"size\": 1024,\n \"download_count\": 42,\n \"created_at\": \"2013-02-27T19:35:32Z\",\n \"updated_at\": \"2013-02-27T19:35:32Z\",\n \"uploader\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n}"
						}
					]
				},
				{
					"name": "List release assets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/releases/:release_id/assets?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"releases",
								":release_id",
								"assets"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "release_id",
									"value": "41891364",
									"description": "(Required) release_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases/:release_id/assets?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases",
										":release_id",
										"assets"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "release_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\n  \"browser_download_url\": \"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOlJlbGVhc2VBc3NldDE=\",\n  \"name\": \"example.zip\",\n  \"label\": \"short description\",\n  \"state\": \"uploaded\",\n  \"content_type\": \"application/zip\",\n  \"size\": 1024,\n  \"download_count\": 42,\n  \"created_at\": \"2013-02-27T19:35:32Z\",\n  \"updated_at\": \"2013-02-27T19:35:32Z\",\n  \"uploader\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Delete a commit comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"comments",
								":comment_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a commit comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"comments",
								":comment_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"html_url\": \"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/comments/1\",\n \"id\": 1,\n \"node_id\": \"MDEzOkNvbW1pdENvbW1lbnQx\",\n \"body\": \"Great stuff\",\n \"path\": \"file1.txt\",\n \"position\": 4,\n \"line\": 14,\n \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"author_association\": \"collaborator\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-14T16:00:49Z\",\n \"updated_at\": \"2011-04-14T16:00:49Z\"\n}"
						}
					]
				},
				{
					"name": "Update a commit comment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"Nice change\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"comments",
								":comment_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "comment_id",
									"value": "41891364",
									"description": "(Required) comment_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Nice change\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Nice change\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/comments/:comment_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"comments",
										":comment_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "comment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"html_url\": \"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/comments/1\",\n \"id\": 1,\n \"node_id\": \"MDEzOkNvbW1pdENvbW1lbnQx\",\n \"body\": \"Nice change\",\n \"path\": \"file1.txt\",\n \"position\": 4,\n \"line\": 14,\n \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"author_association\": \"collaborator\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-14T16:00:49Z\",\n \"updated_at\": \"2011-04-14T16:00:49Z\"\n}"
						}
					]
				},
				{
					"name": "Test the push repository webhook",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id/tests",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"hooks",
								":hook_id",
								"tests"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "hook_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "This will trigger the hook with the latest push to the current repository if the hook is subscribed to `push` events. If the hook is not subscribed to `push` events, the server will respond with 204 but no test POST will be generated.\n\n**Note**: Previously `/repos/:owner/:repo/hooks/:hook_id/test`"
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id/tests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks",
										":hook_id",
										"tests"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks/:hook_id/tests",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks",
										":hook_id",
										"tests"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "hook_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List repository webhooks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/hooks?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"hooks"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"type\": \"Repository\",\n  \"id\": 12345678,\n  \"name\": \"web\",\n  \"active\": true,\n  \"events\": [\n   \"push\",\n   \"pull_request\"\n  ],\n  \"config\": {\n   \"content_type\": \"json\",\n   \"insecure_ssl\": \"0\",\n   \"url\": \"https://example.com/webhook\"\n  },\n  \"updated_at\": \"2019-06-03T00:57:16Z\",\n  \"created_at\": \"2019-06-03T00:57:16Z\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/hooks/12345678\",\n  \"test_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\",\n  \"ping_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\",\n  \"last_response\": {\n   \"code\": null,\n   \"status\": \"unused\",\n   \"message\": null\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Create a repository webhook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"web\",\n    \"active\": true,\n    \"events\": [\n        \"push\",\n        \"pull_request\"\n    ],\n    \"config\": {\n        \"url\": \"https://example.com/webhook\",\n        \"content_type\": \"json\",\n        \"insecure_ssl\": \"0\"\n    }\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/hooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"hooks"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Repositories can have multiple webhooks installed. Each webhook should have a unique `config`. Multiple webhooks can\nshare the same `config` as long as those webhooks do not have any `events` that overlap."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"web\",\n    \"active\": true,\n    \"events\": [\n        \"push\",\n        \"pull_request\"\n    ],\n    \"config\": {\n        \"url\": \"https://example.com/webhook\",\n        \"content_type\": \"json\",\n        \"insecure_ssl\": \"0\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"web\",\n    \"active\": true,\n    \"events\": [\n        \"push\",\n        \"pull_request\"\n    ],\n    \"config\": {\n        \"url\": \"https://example.com/webhook\",\n        \"content_type\": \"json\",\n        \"insecure_ssl\": \"0\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"Repository\",\n \"id\": 12345678,\n \"name\": \"web\",\n \"active\": true,\n \"events\": [\n  \"push\",\n  \"pull_request\"\n ],\n \"config\": {\n  \"content_type\": \"json\",\n  \"insecure_ssl\": \"0\",\n  \"url\": \"https://example.com/webhook\"\n },\n \"updated_at\": \"2019-06-03T00:57:16Z\",\n \"created_at\": \"2019-06-03T00:57:16Z\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/hooks/12345678\",\n \"test_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/test\",\n \"ping_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks/12345678/pings\",\n \"last_response\": {\n  \"code\": null,\n  \"status\": \"unused\",\n  \"message\": null\n }\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"web\",\n    \"active\": true,\n    \"events\": [\n        \"push\",\n        \"pull_request\"\n    ],\n    \"config\": {\n        \"url\": \"https://example.com/webhook\",\n        \"content_type\": \"json\",\n        \"insecure_ssl\": \"0\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"web\",\n    \"active\": true,\n    \"events\": [\n        \"push\",\n        \"pull_request\"\n    ],\n    \"config\": {\n        \"url\": \"https://example.com/webhook\",\n        \"content_type\": \"json\",\n        \"insecure_ssl\": \"0\"\n    }\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"hooks"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get latest Pages build",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/pages/builds/latest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"pages",
								"builds",
								"latest"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/pages/builds/latest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"pages",
										"builds",
										"latest"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/github/developer.github.com/pages/builds/5472601\",\n \"status\": \"built\",\n \"error\": {\n  \"message\": null\n },\n \"pusher\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"commit\": \"351391cdcb88ffae71ec3028c91f375a8036a26b\",\n \"duration\": 2104,\n \"created_at\": \"2014-02-10T19:00:49Z\",\n \"updated_at\": \"2014-02-10T19:00:51Z\"\n}"
						}
					]
				},
				{
					"name": "Create a commit comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"Great stuff\",\n    \"path\": \"file1.txt\",\n    \"position\": 4,\n    \"line\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:commit_sha/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"commits",
								":commit_sha",
								"comments"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "commit_sha",
									"value": "aliquip sint",
									"description": "(Required) commit_sha+ parameter"
								}
							]
						},
						"description": "Create a comment for a commit using its `:commit_sha`.\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Great stuff\",\n    \"path\": \"file1.txt\",\n    \"position\": 4,\n    \"line\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:commit_sha/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":commit_sha",
										"comments"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "commit_sha"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Great stuff\",\n    \"path\": \"file1.txt\",\n    \"position\": 4,\n    \"line\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:commit_sha/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":commit_sha",
										"comments"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "commit_sha"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Great stuff\",\n    \"path\": \"file1.txt\",\n    \"position\": 4,\n    \"line\": 1\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:commit_sha/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":commit_sha",
										"comments"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "commit_sha"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"html_url\": \"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/comments/1\",\n \"id\": 1,\n \"node_id\": \"MDEzOkNvbW1pdENvbW1lbnQx\",\n \"body\": \"Great stuff\",\n \"path\": \"file1.txt\",\n \"position\": 4,\n \"line\": 14,\n \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"author_association\": \"collaborator\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-14T16:00:49Z\",\n \"updated_at\": \"2011-04-14T16:00:49Z\"\n}"
						}
					]
				},
				{
					"name": "List commit comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:commit_sha/comments?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"commits",
								":commit_sha",
								"comments"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "commit_sha",
									"value": "aliquip sint",
									"description": "(Required) commit_sha+ parameter"
								}
							]
						},
						"description": "Use the `:commit_sha` to specify the commit that will have its comments listed."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:commit_sha/comments?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":commit_sha",
										"comments"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "commit_sha"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"html_url\": \"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/comments/1\",\n  \"id\": 1,\n  \"node_id\": \"MDEzOkNvbW1pdENvbW1lbnQx\",\n  \"body\": \"Great stuff\",\n  \"path\": \"file1.txt\",\n  \"position\": 4,\n  \"line\": 14,\n  \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"created_at\": \"2011-04-14T16:00:49Z\",\n  \"updated_at\": \"2011-04-14T16:00:49Z\",\n  \"author_association\": \"collaborator\"\n }\n]"
						}
					]
				},
				{
					"name": "Get the weekly commit count",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/stats/participation",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"stats",
								"participation"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns the total commit counts for the `owner` and total commit counts in `all`. `all` is everyone combined, including the `owner` in the last 52 weeks. If you'd like to get the commit counts for non-owners, you can subtract `owner` from `all`.\n\nThe array order is oldest week (index 0) to most recent week."
					},
					"response": [
						{
							"name": "The array order is oldest week (index 0) to most recent week.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/stats/participation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"stats",
										"participation"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"all\": [\n  11,\n  21,\n  15,\n  2,\n  8,\n  1,\n  8,\n  23,\n  17,\n  21,\n  11,\n  10,\n  33,\n  91,\n  38,\n  34,\n  22,\n  23,\n  32,\n  3,\n  43,\n  87,\n  71,\n  18,\n  13,\n  5,\n  13,\n  16,\n  66,\n  27,\n  12,\n  45,\n  110,\n  117,\n  13,\n  8,\n  18,\n  9,\n  19,\n  26,\n  39,\n  12,\n  20,\n  31,\n  46,\n  91,\n  45,\n  10,\n  24,\n  9,\n  29,\n  7\n ],\n \"owner\": [\n  3,\n  2,\n  3,\n  0,\n  2,\n  0,\n  5,\n  14,\n  7,\n  9,\n  1,\n  5,\n  0,\n  48,\n  19,\n  2,\n  0,\n  1,\n  10,\n  2,\n  23,\n  40,\n  35,\n  8,\n  8,\n  2,\n  10,\n  6,\n  30,\n  0,\n  2,\n  9,\n  53,\n  104,\n  3,\n  3,\n  10,\n  4,\n  7,\n  11,\n  21,\n  4,\n  4,\n  22,\n  26,\n  63,\n  11,\n  2,\n  14,\n  1,\n  10,\n  3\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/stats/participation",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"stats",
										"participation"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List commits",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/commits?sha=aliquip sint&path=aliquip sint&author=aliquip sint&since=aliquip sint&until=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"commits"
							],
							"query": [
								{
									"key": "sha",
									"value": "aliquip sint",
									"description": "SHA or branch to start listing commits from. Default: the repository’s default branch (usually `master`)."
								},
								{
									"key": "path",
									"value": "aliquip sint",
									"description": "Only commits containing this file path will be returned."
								},
								{
									"key": "author",
									"value": "aliquip sint",
									"description": "GitHub login or email address by which to filter by commit author."
								},
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "until",
									"value": "aliquip sint",
									"description": "Only commits before this date will be returned. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits?sha=nisi reprehenderit&path=nisi reprehenderit&author=nisi reprehenderit&since=nisi reprehenderit&until=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits"
									],
									"query": [
										{
											"key": "sha",
											"value": "nisi reprehenderit"
										},
										{
											"key": "path",
											"value": "nisi reprehenderit"
										},
										{
											"key": "author",
											"value": "nisi reprehenderit"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "until",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"tree_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"message\": \"Fix all the bugs\",\n  \"timestamp\": \"2016-10-10T00:00:00Z\",\n  \"author\": {\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"mona@github.com\"\n  },\n  \"committer\": {\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"mona@github.com\"\n  }\n },\n {\n  \"id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"tree_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"message\": \"Fix all the bugs\",\n  \"timestamp\": \"2016-10-10T00:00:00Z\",\n  \"author\": {\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"mona@github.com\"\n  },\n  \"committer\": {\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"mona@github.com\"\n  }\n }\n]"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits?sha=nisi reprehenderit&path=nisi reprehenderit&author=nisi reprehenderit&since=nisi reprehenderit&until=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits"
									],
									"query": [
										{
											"key": "sha",
											"value": "nisi reprehenderit"
										},
										{
											"key": "path",
											"value": "nisi reprehenderit"
										},
										{
											"key": "author",
											"value": "nisi reprehenderit"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "until",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits?sha=nisi reprehenderit&path=nisi reprehenderit&author=nisi reprehenderit&since=nisi reprehenderit&until=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits"
									],
									"query": [
										{
											"key": "sha",
											"value": "nisi reprehenderit"
										},
										{
											"key": "path",
											"value": "nisi reprehenderit"
										},
										{
											"key": "author",
											"value": "nisi reprehenderit"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "until",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits?sha=nisi reprehenderit&path=nisi reprehenderit&author=nisi reprehenderit&since=nisi reprehenderit&until=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits"
									],
									"query": [
										{
											"key": "sha",
											"value": "nisi reprehenderit"
										},
										{
											"key": "path",
											"value": "nisi reprehenderit"
										},
										{
											"key": "author",
											"value": "nisi reprehenderit"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "until",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits?sha=nisi reprehenderit&path=nisi reprehenderit&author=nisi reprehenderit&since=nisi reprehenderit&until=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits"
									],
									"query": [
										{
											"key": "sha",
											"value": "nisi reprehenderit"
										},
										{
											"key": "path",
											"value": "nisi reprehenderit"
										},
										{
											"key": "author",
											"value": "nisi reprehenderit"
										},
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "until",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Set app access restrictions",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"in ipsum\",\n    \"sint L\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"restrictions",
								"apps"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nReplaces the list of apps that have push access to this branch. This removes all apps that previously had push access and grants push access to the new list of apps. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.\n\n| Type    | Description                                                                                                                                                |\n| ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |"
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"dolore magna cillum\",\n    \"veniam irure do et\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"apps"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"dolore magna cillum\",\n    \"veniam irure do et\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"apps"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"slug\": \"octoapp\",\n  \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n  \"owner\": {\n   \"login\": \"github\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n   \"url\": \"https://api.github.com/orgs/github\",\n   \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n   \"events_url\": \"https://api.github.com/orgs/github/events\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  },\n  \"name\": \"Octocat App\",\n  \"description\": \"\",\n  \"external_url\": \"https://example.com\",\n  \"html_url\": \"https://github.com/apps/octoapp\",\n  \"created_at\": \"2017-07-08T16:18:44-04:00\",\n  \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n  \"permissions\": {\n   \"metadata\": \"read\",\n   \"contents\": \"read\",\n   \"issues\": \"write\",\n   \"single_file\": \"write\"\n  },\n  \"events\": [\n   \"push\",\n   \"pull_request\"\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Add app access restrictions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"in ipsum\",\n    \"sint L\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"restrictions",
								"apps"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nGrants the specified apps push access for this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.\n\n| Type    | Description                                                                                                                                                |\n| ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"dolore magna cillum\",\n    \"veniam irure do et\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"apps"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"slug\": \"octoapp\",\n  \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n  \"owner\": {\n   \"login\": \"github\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n   \"url\": \"https://api.github.com/orgs/github\",\n   \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n   \"events_url\": \"https://api.github.com/orgs/github/events\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  },\n  \"name\": \"Octocat App\",\n  \"description\": \"\",\n  \"external_url\": \"https://example.com\",\n  \"html_url\": \"https://github.com/apps/octoapp\",\n  \"created_at\": \"2017-07-08T16:18:44-04:00\",\n  \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n  \"permissions\": {\n   \"metadata\": \"read\",\n   \"contents\": \"read\",\n   \"issues\": \"write\",\n   \"single_file\": \"write\"\n  },\n  \"events\": [\n   \"push\",\n   \"pull_request\"\n  ]\n }\n]"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"dolore magna cillum\",\n    \"veniam irure do et\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"apps"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get apps with access to the protected branch",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"restrictions",
								"apps"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nLists the GitHub Apps that have push access to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"apps"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"apps"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"slug\": \"octoapp\",\n  \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n  \"owner\": {\n   \"login\": \"github\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n   \"url\": \"https://api.github.com/orgs/github\",\n   \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n   \"events_url\": \"https://api.github.com/orgs/github/events\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  },\n  \"name\": \"Octocat App\",\n  \"description\": \"\",\n  \"external_url\": \"https://example.com\",\n  \"html_url\": \"https://github.com/apps/octoapp\",\n  \"created_at\": \"2017-07-08T16:18:44-04:00\",\n  \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n  \"permissions\": {\n   \"metadata\": \"read\",\n   \"contents\": \"read\",\n   \"issues\": \"write\",\n   \"single_file\": \"write\"\n  },\n  \"events\": [\n   \"push\",\n   \"pull_request\"\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Remove app access restrictions",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n    \"in ipsum\",\n    \"sint L\"\n]"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"branches",
								":branch",
								"protection",
								"restrictions",
								"apps"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "branch",
									"value": "aliquip sint",
									"description": "(Required) branch+ parameter"
								}
							]
						},
						"description": "Protected branches are available in public repositories with GitHub Free and GitHub Free for organizations, and in public and private repositories with GitHub Pro, GitHub Team, GitHub Enterprise Cloud, and GitHub Enterprise Server. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nRemoves the ability of an app to push to this branch. Only installed GitHub Apps with `write` access to the `contents` permission can be added as authorized actors on a protected branch.\n\n| Type    | Description                                                                                                                                                |\n| ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `array` | The GitHub Apps that have push access to this branch. Use the app's `slug`. **Note**: The list of users, apps, and teams in total is limited to 100 items. |"
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"dolore magna cillum\",\n    \"veniam irure do et\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"apps"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    \"dolore magna cillum\",\n    \"veniam irure do et\"\n]"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/branches/:branch/protection/restrictions/apps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"branches",
										":branch",
										"protection",
										"restrictions",
										"apps"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "branch"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"slug\": \"octoapp\",\n  \"node_id\": \"MDExOkludGVncmF0aW9uMQ==\",\n  \"owner\": {\n   \"login\": \"github\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n   \"url\": \"https://api.github.com/orgs/github\",\n   \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n   \"events_url\": \"https://api.github.com/orgs/github/events\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": true\n  },\n  \"name\": \"Octocat App\",\n  \"description\": \"\",\n  \"external_url\": \"https://example.com\",\n  \"html_url\": \"https://github.com/apps/octoapp\",\n  \"created_at\": \"2017-07-08T16:18:44-04:00\",\n  \"updated_at\": \"2017-07-08T16:18:44-04:00\",\n  \"permissions\": {\n   \"metadata\": \"read\",\n   \"contents\": \"read\",\n   \"issues\": \"write\",\n   \"single_file\": \"write\"\n  },\n  \"events\": [\n   \"push\",\n   \"pull_request\"\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Get a release by tag name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/releases/tags/:tag",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"releases",
								"tags",
								":tag"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "tag",
									"value": "aliquip sint",
									"description": "(Required) tag+ parameter"
								}
							]
						},
						"description": "Get a published release with the specified tag."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases/tags/:tag",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases",
										"tags",
										":tag"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "tag"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases/tags/:tag",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases",
										"tags",
										":tag"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "tag"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1\",\n \"html_url\": \"https://github.com/octocat/Hello-World/releases/v1.0.0\",\n \"assets_url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\",\n \"upload_url\": \"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\",\n \"tarball_url\": \"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\",\n \"zipball_url\": \"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\",\n \"id\": 1,\n \"node_id\": \"MDc6UmVsZWFzZTE=\",\n \"tag_name\": \"v1.0.0\",\n \"target_commitish\": \"master\",\n \"name\": \"v1.0.0\",\n \"body\": \"Description of the release\",\n \"draft\": false,\n \"prerelease\": false,\n \"created_at\": \"2013-02-27T19:35:32Z\",\n \"published_at\": \"2013-02-27T19:35:32Z\",\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"assets\": [\n  {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\n   \"browser_download_url\": \"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOlJlbGVhc2VBc3NldDE=\",\n   \"name\": \"example.zip\",\n   \"label\": \"short description\",\n   \"state\": \"uploaded\",\n   \"content_type\": \"application/zip\",\n   \"size\": 1024,\n   \"download_count\": 42,\n   \"created_at\": \"2013-02-27T19:35:32Z\",\n   \"updated_at\": \"2013-02-27T19:35:32Z\",\n   \"uploader\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Download a repository archive (zip)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/zipball/:ref",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"zipball",
								":ref"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "ref",
									"value": "aliquip sint",
									"description": "(Required) ref parameter"
								}
							]
						},
						"description": "Gets a redirect URL to download a zip archive for a repository. If you omit `:ref`, the repository’s default branch (usually\n`master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\nthe `Location` header to make a second `GET` request.\n**Note**: For private repositories, these links are temporary and expire after five minutes."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/zipball/:ref",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"zipball",
										":ref"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a repository invitation",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/invitations/:invitation_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"invitations",
								":invitation_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "invitation_id",
									"value": "41891364",
									"description": "(Required) invitation_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/invitations/:invitation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"invitations",
										":invitation_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "invitation_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a repository invitation",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"permissions\": \"admin\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/invitations/:invitation_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"invitations",
								":invitation_id"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "invitation_id",
									"value": "41891364",
									"description": "(Required) invitation_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permissions\": \"admin\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/invitations/:invitation_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"invitations",
										":invitation_id"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "invitation_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n \"repository\": {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\"\n },\n \"invitee\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"inviter\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"permissions\": \"write\",\n \"created_at\": \"2016-06-13T14:52:50-05:00\",\n \"url\": \"https://api.github.com/user/repository_invitations/1296269\",\n \"html_url\": \"https://github.com/octocat/Hello-World/invitations\"\n}"
						}
					]
				},
				{
					"name": "Get the combined status for a specific reference",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:ref/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"commits",
								":ref",
								"status"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "ref",
									"value": "aliquip sint",
									"description": "(Required) ref+ parameter"
								}
							]
						},
						"description": "Users with pull access in a repository can access a combined view of commit statuses for a given ref. The ref can be a SHA, a branch name, or a tag name.\n\nThe most recent status for each context is returned, up to 100. This field [paginates](https://developer.github.com/v3/#pagination) if there are over 100 contexts.\n\nAdditionally, a combined `state` is returned. The `state` is one of:\n\n*   **failure** if any of the contexts report as `error` or `failure`\n*   **pending** if there are no statuses or a context is `pending`\n*   **success** if the latest status for all contexts is `success`"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:ref/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":ref",
										"status"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"state\": \"success\",\n \"statuses\": [\n  {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"avatar_url\": \"https://github.com/images/error/hubot_happy.gif\",\n   \"id\": 1,\n   \"node_id\": \"MDY6U3RhdHVzMQ==\",\n   \"state\": \"success\",\n   \"description\": \"Build has completed successfully\",\n   \"target_url\": \"https://ci.example.com/1000/output\",\n   \"context\": \"continuous-integration/jenkins\",\n   \"created_at\": \"2012-07-20T01:19:13Z\",\n   \"updated_at\": \"2012-07-20T01:19:13Z\"\n  },\n  {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n   \"id\": 2,\n   \"node_id\": \"MDY6U3RhdHVzMg==\",\n   \"state\": \"success\",\n   \"description\": \"Testing has completed successfully\",\n   \"target_url\": \"https://ci.example.com/2000/output\",\n   \"context\": \"security/brakeman\",\n   \"created_at\": \"2012-08-20T01:19:13Z\",\n   \"updated_at\": \"2012-08-20T01:19:13Z\"\n  }\n ],\n \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"total_count\": 2,\n \"repository\": {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"hooks_url\": \"http://api.github.com/repos/octocat/Hello-World/hooks\"\n },\n \"commit_url\": \"https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/6dcb09b5b57875f334f61aebed695e2e4193db5e/status\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:ref/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":ref",
										"status"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Create a commit status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"state\": \"success\",\n    \"target_url\": \"https://example.com/build/status\",\n    \"description\": \"The build succeeded!\",\n    \"context\": \"continuous-integration/jenkins\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/statuses/:sha",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"statuses",
								":sha"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "sha",
									"value": "aliquip sint",
									"description": "(Required) sha parameter"
								}
							]
						},
						"description": "Users with push access in a repository can create commit statuses for a given SHA.\n\nNote: there is a limit of 1000 statuses per `sha` and `context` within a repository. Attempts to create more than 1000 statuses will result in a validation error."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"state\": \"success\",\n    \"target_url\": \"https://example.com/build/status\",\n    \"description\": \"The build succeeded!\",\n    \"context\": \"continuous-integration/jenkins\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/statuses/:sha",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"statuses",
										":sha"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "sha"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"avatar_url\": \"https://github.com/images/error/hubot_happy.gif\",\n \"id\": 1,\n \"node_id\": \"MDY6U3RhdHVzMQ==\",\n \"state\": \"success\",\n \"description\": \"Build has completed successfully\",\n \"target_url\": \"https://ci.example.com/1000/output\",\n \"context\": \"continuous-integration/jenkins\",\n \"created_at\": \"2012-07-20T01:19:13Z\",\n \"updated_at\": \"2012-07-20T01:19:13Z\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n}"
						}
					]
				},
				{
					"name": "Create a deployment status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"environment\": \"production\",\n    \"state\": \"success\",\n    \"log_url\": \"https://example.com/deployment/42/output\",\n    \"description\": \"Deployment finished successfully.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id/statuses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"deployments",
								":deployment_id",
								"statuses"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "deployment_id",
									"value": "41891364",
									"description": "(Required) deployment_id parameter"
								}
							]
						},
						"description": "Users with `push` access can create deployment statuses for a given deployment.\n\nGitHub Apps require `read & write` access to \"Deployments\" and `read-only` access to \"Repo contents\" (for private repos). OAuth Apps require the `repo_deployment` scope."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": \"production\",\n    \"state\": \"success\",\n    \"log_url\": \"https://example.com/deployment/42/output\",\n    \"description\": \"Deployment finished successfully.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id/statuses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments",
										":deployment_id",
										"statuses"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "deployment_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"environment\": \"production\",\n    \"state\": \"success\",\n    \"log_url\": \"https://example.com/deployment/42/output\",\n    \"description\": \"Deployment finished successfully.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id/statuses",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments",
										":deployment_id",
										"statuses"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "deployment_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/example/deployments/42/statuses/1\",\n \"id\": 1,\n \"node_id\": \"MDE2OkRlcGxveW1lbnRTdGF0dXMx\",\n \"state\": \"success\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"description\": \"Deployment finished successfully.\",\n \"environment\": \"production\",\n \"target_url\": \"https://example.com/deployment/42/output\",\n \"created_at\": \"2012-07-20T01:19:13Z\",\n \"updated_at\": \"2012-07-20T01:19:13Z\",\n \"deployment_url\": \"https://api.github.com/repos/octocat/example/deployments/42\",\n \"repository_url\": \"https://api.github.com/repos/octocat/example\",\n \"environment_url\": \"https://test-branch.lab.acme.com\",\n \"log_url\": \"https://example.com/deployment/42/output\"\n}"
						}
					]
				},
				{
					"name": "List deployment statuses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id/statuses?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"deployments",
								":deployment_id",
								"statuses"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "deployment_id",
									"value": "41891364",
									"description": "(Required) deployment_id parameter"
								}
							]
						},
						"description": "Users with pull access can view deployment statuses for a deployment:"
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id/statuses?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments",
										":deployment_id",
										"statuses"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "deployment_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/deployments/:deployment_id/statuses?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"deployments",
										":deployment_id",
										"statuses"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "deployment_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"url\": \"https://api.github.com/repos/octocat/example/deployments/42/statuses/1\",\n  \"id\": 1,\n  \"node_id\": \"MDE2OkRlcGxveW1lbnRTdGF0dXMx\",\n  \"state\": \"success\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"description\": \"Deployment finished successfully.\",\n  \"environment\": \"production\",\n  \"target_url\": \"https://example.com/deployment/42/output\",\n  \"created_at\": \"2012-07-20T01:19:13Z\",\n  \"updated_at\": \"2012-07-20T01:19:13Z\",\n  \"deployment_url\": \"https://api.github.com/repos/octocat/example/deployments/42\",\n  \"repository_url\": \"https://api.github.com/repos/octocat/example\",\n  \"environment_url\": \"https://test-branch.lab.acme.com\",\n  \"log_url\": \"https://example.com/deployment/42/output\"\n }\n]"
						}
					]
				},
				{
					"name": "Download a repository archive (tar)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/tarball/:ref",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"tarball",
								":ref"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "ref",
									"value": "aliquip sint",
									"description": "(Required) ref parameter"
								}
							]
						},
						"description": "Gets a redirect URL to download a tar archive for a repository. If you omit `:ref`, the repository’s default branch (usually\n`master`) will be used. Please make sure your HTTP framework is configured to follow redirects or you will need to use\nthe `Location` header to make a second `GET` request.\n**Note**: For private repositories, these links are temporary and expire after five minutes."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/tarball/:ref",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"tarball",
										":ref"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "Found",
							"code": 302,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Location",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get all contributor commit activity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/stats/contributors",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"stats",
								"contributors"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "\nReturns the `total` number of commits authored by the contributor. In addition, the response includes a Weekly Hash (`weeks` array) with the following information:\n\n*   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n*   `a` - Number of additions\n*   `d` - Number of deletions\n*   `c` - Number of commits"
					},
					"response": [
						{
							"name": "*   `w` - Start of the week, given as a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time).\n*   `a` - Number of additions\n*   `d` - Number of deletions\n*   `c` - Number of commits",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/stats/contributors",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"stats",
										"contributors"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"author\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"total\": 135,\n  \"weeks\": [\n   {\n    \"w\": \"1367712000\",\n    \"a\": 6898,\n    \"d\": 77,\n    \"c\": 10\n   }\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "Get a repository README",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/readme?ref=aliquip sint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"readme"
							],
							"query": [
								{
									"key": "ref",
									"value": "aliquip sint",
									"description": "The name of the commit/branch/tag. Default: the repository’s default branch (usually `master`)"
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Gets the preferred README for a repository.\n\nREADMEs support [custom media types](https://developer.github.com/v3/repos/contents/#custom-media-types) for retrieving the raw content or rendered HTML."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/readme?ref=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"readme"
									],
									"query": [
										{
											"key": "ref",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"type\": \"file\",\n \"encoding\": \"base64\",\n \"size\": 5362,\n \"name\": \"README.md\",\n \"path\": \"README.md\",\n \"content\": \"encoded content ...\",\n \"sha\": \"3d21ec53a331a6f037a91c368710b99387d012c1\",\n \"url\": \"https://api.github.com/repos/octokit/octokit.rb/contents/README.md\",\n \"git_url\": \"https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1\",\n \"html_url\": \"https://github.com/octokit/octokit.rb/blob/master/README.md\",\n \"download_url\": \"https://raw.githubusercontent.com/octokit/octokit.rb/master/README.md\",\n \"_links\": {\n  \"git\": \"https://api.github.com/repos/octokit/octokit.rb/git/blobs/3d21ec53a331a6f037a91c368710b99387d012c1\",\n  \"self\": \"https://api.github.com/repos/octokit/octokit.rb/contents/README.md\",\n  \"html\": \"https://github.com/octokit/octokit.rb/blob/master/README.md\"\n }\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/readme?ref=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"readme"
									],
									"query": [
										{
											"key": "ref",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/readme?ref=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"readme"
									],
									"query": [
										{
											"key": "ref",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List commit comments for a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/comments?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"comments"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Commit Comments use [these custom media types](https://developer.github.com/v3/repos/comments/#custom-media-types). You can read more about the use of media types in the API [here](https://developer.github.com/v3/media/).\n\nComments are ordered by ascending ID."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/comments?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"comments"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"html_url\": \"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e#commitcomment-1\",\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/comments/1\",\n  \"id\": 1,\n  \"node_id\": \"MDEzOkNvbW1pdENvbW1lbnQx\",\n  \"body\": \"Great stuff\",\n  \"path\": \"file1.txt\",\n  \"position\": 4,\n  \"line\": 14,\n  \"commit_id\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"user\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"created_at\": \"2011-04-14T16:00:49Z\",\n  \"updated_at\": \"2011-04-14T16:00:49Z\",\n  \"author_association\": \"collaborator\"\n }\n]"
						}
					]
				},
				{
					"name": "Get a commit",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:ref",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"commits",
								":ref"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "ref",
									"value": "aliquip sint",
									"description": "(Required) ref+ parameter"
								}
							]
						},
						"description": "Returns the contents of a single commit reference. You must have `read` access for the repository to use this endpoint.\n\nYou can pass the appropriate [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests) to fetch `diff` and `patch` formats. Diffs with binary data will have no `patch` property.\n\nTo return only the SHA-1 hash of the commit reference, you can provide the `sha` custom [media type](https://developer.github.com/v3/media/#commits-commit-comparison-and-pull-requests) in the `Accept` header. You can use this endpoint to check if a remote reference's SHA-1 hash is the same as your local reference's SHA-1 hash by providing the local SHA-1 reference as the ETag.\n\n**Signature verification object**\n\nThe response will include a `verification` object that describes the result of verifying the commit's signature. The following fields are included in the `verification` object:\n\nThese are the possible values for `reason` in the `verification` object:\n\n| Value                    | Description                                                                                                                       |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------- |\n| `expired_key`            | The key that made the signature is expired.                                                                                       |\n| `not_signing_key`        | The \"signing\" flag is not among the usage flags in the GPG key that made the signature.                                           |\n| `gpgverify_error`        | There was an error communicating with the signature verification service.                                                         |\n| `gpgverify_unavailable`  | The signature verification service is currently unavailable.                                                                      |\n| `unsigned`               | The object does not include a signature.                                                                                          |\n| `unknown_signature_type` | A non-PGP signature was found in the commit.                                                                                      |\n| `no_user`                | No user was associated with the `committer` email address in the commit.                                                          |\n| `unverified_email`       | The `committer` email address in the commit was associated with a user, but the email address is not verified on her/his account. |\n| `bad_email`              | The `committer` email address in the commit is not included in the identities of the PGP key that made the signature.             |\n| `unknown_key`            | The key that made the signature has not been registered with any user's account.                                                  |\n| `malformed_signature`    | There was an error parsing the signature.                                                                                         |\n| `invalid`                | The signature could not be cryptographically verified using the key whose key-id was found in the signature.                      |\n| `valid`                  | None of the above errors applied, so the signature is considered to be verified.                                                  |"
					},
					"response": [
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:ref",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":ref"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:ref",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":ref"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:ref",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":ref"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/commits/:ref",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"commits",
										":ref"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "ref"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"node_id\": \"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\n \"html_url\": \"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\n \"commit\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"author\": {\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"mona@github.com\",\n   \"date\": \"2011-04-14T16:00:49Z\"\n  },\n  \"committer\": {\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"mona@github.com\",\n   \"date\": \"2011-04-14T16:00:49Z\"\n  },\n  \"message\": \"Fix all the bugs\",\n  \"tree\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n  },\n  \"comment_count\": 0,\n  \"verification\": {\n   \"verified\": false,\n   \"reason\": \"unsigned\",\n   \"signature\": null,\n   \"payload\": null\n  }\n },\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"committer\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"parents\": [\n  {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n  }\n ],\n \"stats\": {\n  \"additions\": 104,\n  \"deletions\": 4,\n  \"total\": 108\n },\n \"files\": [\n  {\n   \"filename\": \"file1.txt\",\n   \"additions\": 10,\n   \"deletions\": 2,\n   \"changes\": 12,\n   \"status\": \"modified\",\n   \"raw_url\": \"https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt\",\n   \"blob_url\": \"https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt\",\n   \"patch\": \"@@ -29,7 +29,7 @@\\n.....\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get the latest release",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/releases/latest",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"releases",
								"latest"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "View the latest published full release for the repository.\n\nThe latest release is the most recent non-prerelease, non-draft release, sorted by the `created_at` attribute. The `created_at` attribute is the date of the commit used for the release, and not the date when the release was drafted or published."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/releases/latest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"releases",
										"latest"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1\",\n \"html_url\": \"https://github.com/octocat/Hello-World/releases/v1.0.0\",\n \"assets_url\": \"https://api.github.com/repos/octocat/Hello-World/releases/1/assets\",\n \"upload_url\": \"https://uploads.github.com/repos/octocat/Hello-World/releases/1/assets{?name,label}\",\n \"tarball_url\": \"https://api.github.com/repos/octocat/Hello-World/tarball/v1.0.0\",\n \"zipball_url\": \"https://api.github.com/repos/octocat/Hello-World/zipball/v1.0.0\",\n \"id\": 1,\n \"node_id\": \"MDc6UmVsZWFzZTE=\",\n \"tag_name\": \"v1.0.0\",\n \"target_commitish\": \"master\",\n \"name\": \"v1.0.0\",\n \"body\": \"Description of the release\",\n \"draft\": false,\n \"prerelease\": false,\n \"created_at\": \"2013-02-27T19:35:32Z\",\n \"published_at\": \"2013-02-27T19:35:32Z\",\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"assets\": [\n  {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/releases/assets/1\",\n   \"browser_download_url\": \"https://github.com/octocat/Hello-World/releases/download/v1.0.0/example.zip\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOlJlbGVhc2VBc3NldDE=\",\n   \"name\": \"example.zip\",\n   \"label\": \"short description\",\n   \"state\": \"uploaded\",\n   \"content_type\": \"application/zip\",\n   \"size\": 1024,\n   \"download_count\": 42,\n   \"created_at\": \"2013-02-27T19:35:32Z\",\n   \"updated_at\": \"2013-02-27T19:35:32Z\",\n   \"uploader\": {\n    \"login\": \"octocat\",\n    \"id\": 1,\n    \"node_id\": \"MDQ6VXNlcjE=\",\n    \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Get the weekly commit activity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/stats/code_frequency",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"stats",
								"code_frequency"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Returns a weekly aggregate of the number of additions and deletions pushed to a repository."
					},
					"response": [
						{
							"name": "Returns a weekly aggregate of the number of additions and deletions pushed to a repository.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/stats/code_frequency",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"stats",
										"code_frequency"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n [\n  1302998400,\n  1124,\n  -435\n ]\n]"
						}
					]
				},
				{
					"name": "List repository contributors",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/contributors?anon=aliquip sint&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"contributors"
							],
							"query": [
								{
									"key": "anon",
									"value": "aliquip sint",
									"description": "Set to `1` or `true` to include anonymous contributors in results."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists contributors to the specified repository and sorts them by the number of commits per contributor in descending order. This endpoint may return information that is a few hours old because the GitHub REST API v3 caches contributor data to improve performance.\n\nGitHub identifies contributors by author email address. This endpoint groups contribution counts by GitHub user, which includes all associated email addresses. To improve performance, only the first 500 author email addresses in the repository link to GitHub users. The rest will appear as anonymous contributors without associated GitHub user information."
					},
					"response": [
						{
							"name": "Response if repository is empty",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contributors?anon=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contributors"
									],
									"query": [
										{
											"key": "anon",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contributors?anon=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contributors"
									],
									"query": [
										{
											"key": "anon",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Response if repository contains content",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contributors?anon=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contributors"
									],
									"query": [
										{
											"key": "anon",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false,\n  \"contributions\": 32\n }\n]"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/contributors?anon=nisi reprehenderit&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"contributors"
									],
									"query": [
										{
											"key": "anon",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List repository collaborators",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators?affiliation=all&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"collaborators"
							],
							"query": [
								{
									"key": "affiliation",
									"value": "all",
									"description": "Filter collaborators returned by their affiliation. Can be one of:  \n\\* `outside`: All outside collaborators of an organization-owned repository.  \n\\* `direct`: All collaborators with permissions to an organization-owned repository, regardless of organization membership status.  \n\\* `all`: All collaborators the authenticated user can see."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "For organization-owned repositories, the list of collaborators includes outside collaborators, organization members that are direct collaborators, organization members with access through team memberships, organization members with access through default organization permissions, and organization owners.\n\nTeam members will include the members of child teams."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators?affiliation=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"collaborators"
									],
									"query": [
										{
											"key": "affiliation",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators?affiliation=all&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"collaborators"
									],
									"query": [
										{
											"key": "affiliation",
											"value": "all"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false,\n  \"permissions\": {\n   \"pull\": true,\n   \"push\": true,\n   \"admin\": false\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Merge a branch",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"base\": \"master\",\n    \"head\": \"cool_feature\",\n    \"commit_message\": \"Shipped cool_feature!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/merges",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"merges"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Successful Response (The resulting merge commit)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"base\": \"master\",\n    \"head\": \"cool_feature\",\n    \"commit_message\": \"Shipped cool_feature!\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/merges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"merges"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"node_id\": \"MDY6Q29tbWl0NmRjYjA5YjViNTc4NzVmMzM0ZjYxYWViZWQ2OTVlMmU0MTkzZGI1ZQ==\",\n \"html_url\": \"https://github.com/octocat/Hello-World/commit/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e/comments\",\n \"commit\": {\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n  \"author\": {\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"mona@github.com\",\n   \"date\": \"2011-04-14T16:00:49Z\"\n  },\n  \"committer\": {\n   \"name\": \"Monalisa Octocat\",\n   \"email\": \"mona@github.com\",\n   \"date\": \"2011-04-14T16:00:49Z\"\n  },\n  \"message\": \"Fix all the bugs\",\n  \"tree\": {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/tree/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n  },\n  \"comment_count\": 0,\n  \"verification\": {\n   \"verified\": false,\n   \"reason\": \"unsigned\",\n   \"signature\": null,\n   \"payload\": null\n  }\n },\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"committer\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"parents\": [\n  {\n   \"url\": \"https://api.github.com/repos/octocat/Hello-World/commits/6dcb09b5b57875f334f61aebed695e2e4193db5e\",\n   \"sha\": \"6dcb09b5b57875f334f61aebed695e2e4193db5e\"\n  }\n ],\n \"stats\": {\n  \"additions\": 104,\n  \"deletions\": 4,\n  \"total\": 108\n },\n \"files\": [\n  {\n   \"filename\": \"file1.txt\",\n   \"additions\": 10,\n   \"deletions\": 2,\n   \"changes\": 12,\n   \"status\": \"modified\",\n   \"raw_url\": \"https://github.com/octocat/Hello-World/raw/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt\",\n   \"blob_url\": \"https://github.com/octocat/Hello-World/blob/7ca483543807a51b6079e54ac4cc392bc29ae284/file1.txt\",\n   \"patch\": \"@@ -29,7 +29,7 @@\\n.....\"\n  }\n ]\n}"
						},
						{
							"name": "Merge conflict response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"base\": \"master\",\n    \"head\": \"cool_feature\",\n    \"commit_message\": \"Shipped cool_feature!\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/merges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"merges"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Merge Conflict\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"base\": \"master\",\n    \"head\": \"cool_feature\",\n    \"commit_message\": \"Shipped cool_feature!\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/merges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"merges"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"base\": \"master\",\n    \"head\": \"cool_feature\",\n    \"commit_message\": \"Shipped cool_feature!\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/merges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"merges"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"base\": \"master\",\n    \"head\": \"cool_feature\",\n    \"commit_message\": \"Shipped cool_feature!\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/merges",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"merges"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Base does not exist\"\n}"
						}
					]
				},
				{
					"name": "Get repository permissions for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators/:username/permission",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"repos",
								":owner",
								":repo",
								"collaborators",
								":username",
								"permission"
							],
							"variable": [
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Checks the repository permission of a collaborator. The possible repository permissions are `admin`, `write`, `read`, and `none`."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators/:username/permission",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"collaborators",
										":username",
										"permission"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Response if user has admin permissions",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/repos/:owner/:repo/collaborators/:username/permission",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"repos",
										":owner",
										":repo",
										"collaborators",
										":username",
										"permission"
									],
									"variable": [
										{
											"key": "owner"
										},
										{
											"key": "repo"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"permission\": \"admin\",\n \"user\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n}"
						}
					]
				}
			],
			"description": "Interact with GitHub Repos.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "scim",
			"item": [
				{
					"name": "Get SCIM provisioning information for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scim",
								"v2",
								"organizations",
								":org",
								"Users",
								":scim_user_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "scim_user_id",
									"value": "aliquip sint",
									"description": "(Required) scim_user_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/scim+json"
								}
							],
							"cookie": [],
							"body": "{\n \"schemas\": [\n  \"urn:ietf:params:scim:schemas:core:2.0:User\"\n ],\n \"id\": \"edefdfedf-050c-11e7-8d32\",\n \"externalId\": \"a7d0f98382\",\n \"userName\": \"mona.octocat@okta.example.com\",\n \"name\": {\n  \"givenName\": \"Monalisa\",\n  \"familyName\": \"Octocat\"\n },\n \"emails\": [\n  {\n   \"value\": \"mona.octocat@okta.example.com\",\n   \"primary\": true\n  },\n  {\n   \"value\": \"monalisa@octocat.github.com\"\n  }\n ],\n \"active\": true,\n \"meta\": {\n  \"resourceType\": \"User\",\n  \"created\": \"2017-03-09T16:11:13-05:00\",\n  \"lastModified\": \"2017-03-09T16:11:13-05:00\",\n  \"location\": \"https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32\"\n }\n}"
						}
					]
				},
				{
					"name": "Update a provisioned organization membership",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userName\": \"someone@example.com\",\n    \"name\": {\n        \"givenName\": \"tempor\",\n        \"familyName\": \"magna quis ut\"\n    },\n    \"emails\": [\n        {\n            \"value\": \"exercitation quis tempor commodo\",\n            \"type\": \"deserunt aliqua ipsum non Excepteur\",\n            \"primary\": true\n        }\n    ],\n    \"schemas\": [\n        \"veniam voluptate\",\n        \"deserunt cillum\"\n    ],\n    \"displayName\": \"deserunt eiusmod cupidat\",\n    \"externalId\": \"aliqua tempor consectetur\",\n    \"groups\": [\n        \"quis ea\",\n        \"Duis quis\"\n    ],\n    \"active\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scim",
								"v2",
								"organizations",
								":org",
								"Users",
								":scim_user_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "scim_user_id",
									"value": "aliquip sint",
									"description": "(Required) scim_user_id parameter"
								}
							]
						},
						"description": "Replaces an existing provisioned user's information. You must provide all the information required for the user as if you were provisioning them for the first time. Any existing user information that you don't provide will be removed. If you want to only update a specific attribute, use the [Update an attribute for a SCIM user](https://developer.github.com/v3/scim/#update-an-attribute-for-a-scim-user) endpoint instead.\n\nYou must at least provide the required values for the user: `userName`, `name`, and `emails`.\n\n**Warning:** Setting `active: false` removes the user from the organization, deletes the external identity, and deletes the associated `{scim_user_id}`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"someone@example.com\",\n    \"name\": {\n        \"givenName\": \"quis\",\n        \"familyName\": \"officia pariatur exercitation non\"\n    },\n    \"emails\": [\n        {\n            \"value\": \"nostrud qui in\",\n            \"type\": \"dol\",\n            \"primary\": false\n        }\n    ],\n    \"schemas\": [\n        \"dolor\",\n        \"non cillum velit aute\"\n    ],\n    \"displayName\": \"ea qui\",\n    \"externalId\": \"cillum\",\n    \"groups\": [\n        \"aute officia ex\",\n        \"ad velit ut deserunt\"\n    ],\n    \"active\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/scim+json"
								}
							],
							"cookie": [],
							"body": "{\n \"schemas\": [\n  \"urn:ietf:params:scim:schemas:core:2.0:User\"\n ],\n \"id\": \"edefdfedf-050c-11e7-8d32\",\n \"externalId\": \"a7d0f98382\",\n \"userName\": \"mona.octocat@okta.example.com\",\n \"name\": {\n  \"givenName\": \"Monalisa\",\n  \"familyName\": \"Octocat\"\n },\n \"emails\": [\n  {\n   \"value\": \"mona.octocat@okta.example.com\",\n   \"primary\": true\n  },\n  {\n   \"value\": \"monalisa@octocat.github.com\"\n  }\n ],\n \"active\": true,\n \"meta\": {\n  \"resourceType\": \"User\",\n  \"created\": \"2017-03-09T16:11:13-05:00\",\n  \"lastModified\": \"2017-03-09T16:11:13-05:00\",\n  \"location\": \"https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32\"\n }\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"someone@example.com\",\n    \"name\": {\n        \"givenName\": \"quis\",\n        \"familyName\": \"officia pariatur exercitation non\"\n    },\n    \"emails\": [\n        {\n            \"value\": \"nostrud qui in\",\n            \"type\": \"dol\",\n            \"primary\": false\n        }\n    ],\n    \"schemas\": [\n        \"dolor\",\n        \"non cillum velit aute\"\n    ],\n    \"displayName\": \"ea qui\",\n    \"externalId\": \"cillum\",\n    \"groups\": [\n        \"aute officia ex\",\n        \"ad velit ut deserunt\"\n    ],\n    \"active\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"someone@example.com\",\n    \"name\": {\n        \"givenName\": \"quis\",\n        \"familyName\": \"officia pariatur exercitation non\"\n    },\n    \"emails\": [\n        {\n            \"value\": \"nostrud qui in\",\n            \"type\": \"dol\",\n            \"primary\": false\n        }\n    ],\n    \"schemas\": [\n        \"dolor\",\n        \"non cillum velit aute\"\n    ],\n    \"displayName\": \"ea qui\",\n    \"externalId\": \"cillum\",\n    \"groups\": [\n        \"aute officia ex\",\n        \"ad velit ut deserunt\"\n    ],\n    \"active\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"someone@example.com\",\n    \"name\": {\n        \"givenName\": \"quis\",\n        \"familyName\": \"officia pariatur exercitation non\"\n    },\n    \"emails\": [\n        {\n            \"value\": \"nostrud qui in\",\n            \"type\": \"dol\",\n            \"primary\": false\n        }\n    ],\n    \"schemas\": [\n        \"dolor\",\n        \"non cillum velit aute\"\n    ],\n    \"displayName\": \"ea qui\",\n    \"externalId\": \"cillum\",\n    \"groups\": [\n        \"aute officia ex\",\n        \"ad velit ut deserunt\"\n    ],\n    \"active\": false\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						}
					]
				},
				{
					"name": "Update an attribute for a SCIM user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ],\n    \"schemas\": [\n        \"officia Duis id esse\",\n        \"et Excepteur\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scim",
								"v2",
								"organizations",
								":org",
								"Users",
								":scim_user_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "scim_user_id",
									"value": "aliquip sint",
									"description": "(Required) scim_user_id parameter"
								}
							]
						},
						"description": "Allows you to change a provisioned user's individual attributes. To change a user's values, you must provide a specific `Operations` JSON format that contains at least one of the `add`, `remove`, or `replace` operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).\n\n**Note:** Complicated SCIM `path` selectors that include filters are not supported. For example, a `path` selector defined as `\"path\": \"emails[type eq \\\"work\\\"]\"` will not work.\n\n**Warning:** If you set `active:false` using the `replace` operation (as shown in the JSON example below), it removes the user from the organization, deletes the external identity, and deletes the associated `:scim_user_id`.\n\n```\n{\n  \"Operations\":[{\n    \"op\":\"replace\",\n    \"value\":{\n      \"active\":false\n    }\n  }]\n}\n```"
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ],\n    \"schemas\": [\n        \"ex nulla dolor\",\n        \"eiusmod pariatur labore nostrud commodo\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ],\n    \"schemas\": [\n        \"ex nulla dolor\",\n        \"eiusmod pariatur labore nostrud commodo\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/scim+json"
								}
							],
							"cookie": [],
							"body": "{\n \"schemas\": [\n  \"urn:ietf:params:scim:schemas:core:2.0:User\"\n ],\n \"id\": \"edefdfedf-050c-11e7-8d32\",\n \"externalId\": \"a7d0f98382\",\n \"userName\": \"mona.octocat@okta.example.com\",\n \"name\": {\n  \"givenName\": \"Monalisa\",\n  \"familyName\": \"Octocat\"\n },\n \"emails\": [\n  {\n   \"value\": \"mona.octocat@okta.example.com\",\n   \"primary\": true\n  },\n  {\n   \"value\": \"monalisa@octocat.github.com\"\n  }\n ],\n \"active\": true,\n \"meta\": {\n  \"resourceType\": \"User\",\n  \"created\": \"2017-03-09T16:11:13-05:00\",\n  \"lastModified\": \"2017-03-09T16:11:13-05:00\",\n  \"location\": \"https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32\"\n }\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ],\n    \"schemas\": [\n        \"ex nulla dolor\",\n        \"eiusmod pariatur labore nostrud commodo\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ],\n    \"schemas\": [\n        \"ex nulla dolor\",\n        \"eiusmod pariatur labore nostrud commodo\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ],\n    \"schemas\": [\n        \"ex nulla dolor\",\n        \"eiusmod pariatur labore nostrud commodo\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						},
						{
							"name": "Too many requests",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Operations\": [\n        {\n            \"op\": \"replace\",\n            \"value\": {\n                \"active\": false\n            }\n        }\n    ],\n    \"schemas\": [\n        \"ex nulla dolor\",\n        \"eiusmod pariatur labore nostrud commodo\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Delete a SCIM user from an organization",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scim",
								"v2",
								"organizations",
								":org",
								"Users",
								":scim_user_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "scim_user_id",
									"value": "aliquip sint",
									"description": "(Required) scim_user_id parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users/:scim_user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users",
										":scim_user_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "scim_user_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List SCIM provisioned identities",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users?startIndex=41891364&count=41891364&filter=aliquip sint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scim",
								"v2",
								"organizations",
								":org",
								"Users"
							],
							"query": [
								{
									"key": "startIndex",
									"value": "41891364",
									"description": "Used for pagination: the index of the first result to return."
								},
								{
									"key": "count",
									"value": "41891364",
									"description": "Used for pagination: the number of results to return."
								},
								{
									"key": "filter",
									"value": "aliquip sint",
									"description": "Filters results using the equals query parameter operator (`eq`). You can filter results that are equal to `id`, `userName`, `emails`, and `external_id`. For example, to search for an identity with the `userName` Octocat, you would use this query:\n\n`?filter=userName%20eq%20\\\"Octocat\\\"`.\n\nTo filter results for for the identity with the email `octocat@github.com`, you would use this query:\n\n`?filter=emails%20eq%20\\\"octocat@github.com\\\"`."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Retrieves a paginated list of all provisioned organization members, including pending invitations. If you provide the `filter` parameter, the resources for all matching provisions members are returned.\n\nWhen a user with a SAML-provisioned external identity leaves (or is removed from) an organization, the account's metadata is immediately removed. However, the returned list of user accounts might not always match the organization or enterprise member list you see on GitHub. This can happen in certain cases where an external identity associated with an organization will not match an organization member:\n  - When a user with a SCIM-provisioned external identity is removed from an organization, the account's metadata is preserved to allow the user to re-join the organization in the future.\n  - When inviting a user to join an organization, you can expect to see their external identity in the results before they accept the invitation, or if the invitation is cancelled (or never accepted).\n  - When a user is invited over SCIM, an external identity is created that matches with the invitee's email address. However, this identity is only linked to a user account when the user accepts the invitation by going through SAML SSO.\n\nThe returned list of external identities can include an entry for a `null` user. These are unlinked SAML identities that are created when a user goes through the following Single Sign-On (SSO) process but does not sign in to their GitHub account after completing SSO:\n\n1. The user is granted access by the IdP and is not a member of the GitHub organization.\n\n1. The user attempts to access the GitHub organization and initiates the SAML SSO process, and is not currently signed in to their GitHub account.\n\n1. After successfully authenticating with the SAML SSO IdP, the `null` external identity entry is created and the user is prompted to sign in to their GitHub account:\n   - If the user signs in, their GitHub account is linked to this entry.\n   - If the user does not sign in (or does not create a new account when prompted), they are not added to the GitHub organization, and the external identity `null` entry remains in place."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users?startIndex=-28117428&count=-28117428&filter=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "-28117428"
										},
										{
											"key": "count",
											"value": "-28117428"
										},
										{
											"key": "filter",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users?startIndex=-28117428&count=-28117428&filter=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "-28117428"
										},
										{
											"key": "count",
											"value": "-28117428"
										},
										{
											"key": "filter",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users?startIndex=-28117428&count=-28117428&filter=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "-28117428"
										},
										{
											"key": "count",
											"value": "-28117428"
										},
										{
											"key": "filter",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users?startIndex=-28117428&count=-28117428&filter=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "-28117428"
										},
										{
											"key": "count",
											"value": "-28117428"
										},
										{
											"key": "filter",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users?startIndex=-28117428&count=-28117428&filter=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users"
									],
									"query": [
										{
											"key": "startIndex",
											"value": "-28117428"
										},
										{
											"key": "count",
											"value": "-28117428"
										},
										{
											"key": "filter",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/scim+json"
								}
							],
							"cookie": [],
							"body": "{\n \"schemas\": [\n  \"urn:ietf:params:scim:api:messages:2.0:ListResponse\"\n ],\n \"totalResults\": 1,\n \"itemsPerPage\": 1,\n \"startIndex\": 1,\n \"Resources\": [\n  {\n   \"schemas\": [\n    \"urn:ietf:params:scim:schemas:core:2.0:User\"\n   ],\n   \"id\": \"5fc0c238-1112-11e8-8e45-920c87bdbd75\",\n   \"externalId\": \"00u1dhhb1fkIGP7RL1d8\",\n   \"userName\": \"octocat@github.com\",\n   \"name\": {\n    \"givenName\": \"Mona\",\n    \"familyName\": \"Octocat\"\n   },\n   \"emails\": [\n    {\n     \"value\": \"octocat@github.com\",\n     \"primary\": true\n    }\n   ],\n   \"active\": true,\n   \"meta\": {\n    \"resourceType\": \"User\",\n    \"created\": \"2018-02-13T15:05:24.000-08:00\",\n    \"lastModified\": \"2018-02-13T15:05:55.000-08:00\",\n    \"location\": \"https://api.github.com/scim/v2/organizations/octo-org/Users/5fc0c238-1112-11e8-8e45-920c87bdbd75\"\n   }\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Provision and invite a SCIM user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"userName\": \"someone@example.com\",\n    \"name\": {\n        \"givenName\": \"Excepteur aliqua fugiat laborum ea\",\n        \"familyName\": \"incididunt culpa\"\n    },\n    \"emails\": [\n        {\n            \"value\": \"aliquip quis ad\",\n            \"primary\": true,\n            \"type\": \"sunt in non laboris\"\n        }\n    ],\n    \"schemas\": [\n        \"ipsum\",\n        \"laborum\"\n    ],\n    \"displayName\": \"irure sint incididunt minim Lorem\",\n    \"externalId\": \"sunt eu\",\n    \"groups\": [\n        \"amet nulla\",\n        \"sint anim dolor labore qui\"\n    ],\n    \"active\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scim",
								"v2",
								"organizations",
								":org",
								"Users"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Provision organization membership for a user, and send an activation email to the email address."
					},
					"response": [
						{
							"name": "Internal Error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"someone@example.com\",\n    \"name\": {\n        \"givenName\": \"tempor aute\",\n        \"familyName\": \"occaecat nisi officia culpa\"\n    },\n    \"emails\": [\n        {\n            \"value\": \"ea consequat ex nostrud\",\n            \"primary\": true,\n            \"type\": \"nisi sit deseru\"\n        }\n    ],\n    \"schemas\": [\n        \"minim in magna incididunt anim\",\n        \"Ut\"\n    ],\n    \"displayName\": \"eu aliqua c\",\n    \"externalId\": \"id culpa\",\n    \"groups\": [\n        \"et\",\n        \"officia dolor\"\n    ],\n    \"active\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"someone@example.com\",\n    \"name\": {\n        \"givenName\": \"tempor aute\",\n        \"familyName\": \"occaecat nisi officia culpa\"\n    },\n    \"emails\": [\n        {\n            \"value\": \"ea consequat ex nostrud\",\n            \"primary\": true,\n            \"type\": \"nisi sit deseru\"\n        }\n    ],\n    \"schemas\": [\n        \"minim in magna incididunt anim\",\n        \"Ut\"\n    ],\n    \"displayName\": \"eu aliqua c\",\n    \"externalId\": \"id culpa\",\n    \"groups\": [\n        \"et\",\n        \"officia dolor\"\n    ],\n    \"active\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Conflict",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"someone@example.com\",\n    \"name\": {\n        \"givenName\": \"tempor aute\",\n        \"familyName\": \"occaecat nisi officia culpa\"\n    },\n    \"emails\": [\n        {\n            \"value\": \"ea consequat ex nostrud\",\n            \"primary\": true,\n            \"type\": \"nisi sit deseru\"\n        }\n    ],\n    \"schemas\": [\n        \"minim in magna incididunt anim\",\n        \"Ut\"\n    ],\n    \"displayName\": \"eu aliqua c\",\n    \"externalId\": \"id culpa\",\n    \"groups\": [\n        \"et\",\n        \"officia dolor\"\n    ],\n    \"active\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"someone@example.com\",\n    \"name\": {\n        \"givenName\": \"tempor aute\",\n        \"familyName\": \"occaecat nisi officia culpa\"\n    },\n    \"emails\": [\n        {\n            \"value\": \"ea consequat ex nostrud\",\n            \"primary\": true,\n            \"type\": \"nisi sit deseru\"\n        }\n    ],\n    \"schemas\": [\n        \"minim in magna incididunt anim\",\n        \"Ut\"\n    ],\n    \"displayName\": \"eu aliqua c\",\n    \"externalId\": \"id culpa\",\n    \"groups\": [\n        \"et\",\n        \"officia dolor\"\n    ],\n    \"active\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"someone@example.com\",\n    \"name\": {\n        \"givenName\": \"tempor aute\",\n        \"familyName\": \"occaecat nisi officia culpa\"\n    },\n    \"emails\": [\n        {\n            \"value\": \"ea consequat ex nostrud\",\n            \"primary\": true,\n            \"type\": \"nisi sit deseru\"\n        }\n    ],\n    \"schemas\": [\n        \"minim in magna incididunt anim\",\n        \"Ut\"\n    ],\n    \"displayName\": \"eu aliqua c\",\n    \"externalId\": \"id culpa\",\n    \"groups\": [\n        \"et\",\n        \"officia dolor\"\n    ],\n    \"active\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"someone@example.com\",\n    \"name\": {\n        \"givenName\": \"tempor aute\",\n        \"familyName\": \"occaecat nisi officia culpa\"\n    },\n    \"emails\": [\n        {\n            \"value\": \"ea consequat ex nostrud\",\n            \"primary\": true,\n            \"type\": \"nisi sit deseru\"\n        }\n    ],\n    \"schemas\": [\n        \"minim in magna incididunt anim\",\n        \"Ut\"\n    ],\n    \"displayName\": \"eu aliqua c\",\n    \"externalId\": \"id culpa\",\n    \"groups\": [\n        \"et\",\n        \"officia dolor\"\n    ],\n    \"active\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/scim+json"
								}
							],
							"cookie": [],
							"body": "{\n \"schemas\": [\n  \"urn:ietf:params:scim:schemas:core:2.0:User\"\n ],\n \"id\": \"edefdfedf-050c-11e7-8d32\",\n \"externalId\": \"a7d0f98382\",\n \"userName\": \"mona.octocat@okta.example.com\",\n \"name\": {\n  \"givenName\": \"Monalisa\",\n  \"familyName\": \"Octocat\"\n },\n \"emails\": [\n  {\n   \"value\": \"mona.octocat@okta.example.com\",\n   \"primary\": true\n  },\n  {\n   \"value\": \"monalisa@octocat.github.com\"\n  }\n ],\n \"active\": true,\n \"meta\": {\n  \"resourceType\": \"User\",\n  \"created\": \"2017-03-09T16:11:13-05:00\",\n  \"lastModified\": \"2017-03-09T16:11:13-05:00\",\n  \"location\": \"https://api.github.com/scim/v2/organizations/octo-org/Users/edefdfedf-050c-11e7-8d32\"\n }\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userName\": \"someone@example.com\",\n    \"name\": {\n        \"givenName\": \"tempor aute\",\n        \"familyName\": \"occaecat nisi officia culpa\"\n    },\n    \"emails\": [\n        {\n            \"value\": \"ea consequat ex nostrud\",\n            \"primary\": true,\n            \"type\": \"nisi sit deseru\"\n        }\n    ],\n    \"schemas\": [\n        \"minim in magna incididunt anim\",\n        \"Ut\"\n    ],\n    \"displayName\": \"eu aliqua c\",\n    \"externalId\": \"id culpa\",\n    \"groups\": [\n        \"et\",\n        \"officia dolor\"\n    ],\n    \"active\": true\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/scim/v2/organizations/:org/Users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"scim",
										"v2",
										"organizations",
										":org",
										"Users"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"sit Ut\",\n \"documentation_url\": \"ea commodo sit reprehenderit\",\n \"detail\": \"pariatur fugiat cillum dolore\",\n \"status\": -48514425,\n \"scimType\": \"Lorem n\",\n \"schemas\": [\n  \"et\",\n  \"esse ad\"\n ]\n}"
						}
					]
				}
			],
			"description": "Provisioning of GitHub organization membership for SCIM-enabled providers.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "search",
			"item": [
				{
					"name": "Search code",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/search/code?q=aliquip sint&sort=indexed&order=desc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"code"
							],
							"query": [
								{
									"key": "q",
									"value": "aliquip sint",
									"description": "(Required) The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://developer.github.com/v3/search/#constructing-a-search-query). See \"[Searching code](https://help.github.com/articles/searching-code/)\" for a detailed list of qualifiers."
								},
								{
									"key": "sort",
									"value": "indexed",
									"description": "Sorts the results of your query. Can only be `indexed`, which indicates how recently a file has been indexed by the GitHub search infrastructure. Default: [best match](https://developer.github.com/v3/search/#ranking-search-results)"
								},
								{
									"key": "order",
									"value": "desc",
									"description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Searches for query terms inside of a file. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for code, you can get text match metadata for the file **content** and file **path** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata).\n\nFor example, if you want to find the definition of the `addClass` function inside [jQuery](https://github.com/jquery/jquery) repository, your query would look something like this:\n\n`q=addClass+in:file+language:js+repo:jquery/jquery`\n\nThis query searches for the keyword `addClass` within a file's contents. The query limits the search to files where the language is JavaScript in the `jquery/jquery` repository.\n\n#### Considerations for code search\n\nDue to the complexity of searching code, there are a few restrictions on how searches are performed:\n\n*   Only the _default branch_ is considered. In most cases, this will be the `master` branch.\n*   Only files smaller than 384 KB are searchable.\n*   You must always include at least one search term when searching source code. For example, searching for [`language:go`](https://github.com/search?utf8=%E2%9C%93&q=language%3Ago&type=Code) is not valid, while [`amazing\nlanguage:go`](https://github.com/search?utf8=%E2%9C%93&q=amazing+language%3Ago&type=Code) is."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/code?q=nisi reprehenderit&sort=indexed&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"code"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "indexed"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/code?q=nisi reprehenderit&sort=indexed&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"code"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "indexed"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 7,\n \"incomplete_results\": false,\n \"items\": [\n  {\n   \"name\": \"classes.js\",\n   \"path\": \"src/attributes/classes.js\",\n   \"sha\": \"d7212f9dee2dcc18f084d7df8f417b80846ded5a\",\n   \"url\": \"https://api.github.com/repositories/167174/contents/src/attributes/classes.js?ref=825ac3773694e0cd23ee74895fd5aeb535b27da4\",\n   \"git_url\": \"https://api.github.com/repositories/167174/git/blobs/d7212f9dee2dcc18f084d7df8f417b80846ded5a\",\n   \"html_url\": \"https://github.com/jquery/jquery/blob/825ac3773694e0cd23ee74895fd5aeb535b27da4/src/attributes/classes.js\",\n   \"repository\": {\n    \"id\": 167174,\n    \"node_id\": \"MDEwOlJlcG9zaXRvcnkxNjcxNzQ=\",\n    \"name\": \"jquery\",\n    \"full_name\": \"jquery/jquery\",\n    \"owner\": {\n     \"login\": \"jquery\",\n     \"id\": 70142,\n     \"node_id\": \"MDQ6VXNlcjcwMTQy\",\n     \"avatar_url\": \"https://0.gravatar.com/avatar/6906f317a4733f4379b06c32229ef02f?d=https%3A%2F%2Fidenticons.github.com%2Ff426f04f2f9813718fb806b30e0093de.png\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/jquery\",\n     \"html_url\": \"https://github.com/jquery\",\n     \"followers_url\": \"https://api.github.com/users/jquery/followers\",\n     \"following_url\": \"https://api.github.com/users/jquery/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/jquery/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/jquery/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/jquery/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/jquery/orgs\",\n     \"repos_url\": \"https://api.github.com/users/jquery/repos\",\n     \"events_url\": \"https://api.github.com/users/jquery/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/jquery/received_events\",\n     \"type\": \"Organization\",\n     \"site_admin\": false\n    },\n    \"private\": false,\n    \"html_url\": \"https://github.com/jquery/jquery\",\n    \"description\": \"jQuery JavaScript Library\",\n    \"fork\": false,\n    \"url\": \"https://api.github.com/repos/jquery/jquery\",\n    \"forks_url\": \"https://api.github.com/repos/jquery/jquery/forks\",\n    \"keys_url\": \"https://api.github.com/repos/jquery/jquery/keys{/key_id}\",\n    \"collaborators_url\": \"https://api.github.com/repos/jquery/jquery/collaborators{/collaborator}\",\n    \"teams_url\": \"https://api.github.com/repos/jquery/jquery/teams\",\n    \"hooks_url\": \"https://api.github.com/repos/jquery/jquery/hooks\",\n    \"issue_events_url\": \"https://api.github.com/repos/jquery/jquery/issues/events{/number}\",\n    \"events_url\": \"https://api.github.com/repos/jquery/jquery/events\",\n    \"assignees_url\": \"https://api.github.com/repos/jquery/jquery/assignees{/user}\",\n    \"branches_url\": \"https://api.github.com/repos/jquery/jquery/branches{/branch}\",\n    \"tags_url\": \"https://api.github.com/repos/jquery/jquery/tags\",\n    \"blobs_url\": \"https://api.github.com/repos/jquery/jquery/git/blobs{/sha}\",\n    \"git_tags_url\": \"https://api.github.com/repos/jquery/jquery/git/tags{/sha}\",\n    \"git_refs_url\": \"https://api.github.com/repos/jquery/jquery/git/refs{/sha}\",\n    \"trees_url\": \"https://api.github.com/repos/jquery/jquery/git/trees{/sha}\",\n    \"statuses_url\": \"https://api.github.com/repos/jquery/jquery/statuses/{sha}\",\n    \"languages_url\": \"https://api.github.com/repos/jquery/jquery/languages\",\n    \"stargazers_url\": \"https://api.github.com/repos/jquery/jquery/stargazers\",\n    \"contributors_url\": \"https://api.github.com/repos/jquery/jquery/contributors\",\n    \"subscribers_url\": \"https://api.github.com/repos/jquery/jquery/subscribers\",\n    \"subscription_url\": \"https://api.github.com/repos/jquery/jquery/subscription\",\n    \"commits_url\": \"https://api.github.com/repos/jquery/jquery/commits{/sha}\",\n    \"git_commits_url\": \"https://api.github.com/repos/jquery/jquery/git/commits{/sha}\",\n    \"comments_url\": \"https://api.github.com/repos/jquery/jquery/comments{/number}\",\n    \"issue_comment_url\": \"https://api.github.com/repos/jquery/jquery/issues/comments/{number}\",\n    \"contents_url\": \"https://api.github.com/repos/jquery/jquery/contents/{+path}\",\n    \"compare_url\": \"https://api.github.com/repos/jquery/jquery/compare/{base}...{head}\",\n    \"merges_url\": \"https://api.github.com/repos/jquery/jquery/merges\",\n    \"archive_url\": \"https://api.github.com/repos/jquery/jquery/{archive_format}{/ref}\",\n    \"downloads_url\": \"https://api.github.com/repos/jquery/jquery/downloads\",\n    \"issues_url\": \"https://api.github.com/repos/jquery/jquery/issues{/number}\",\n    \"pulls_url\": \"https://api.github.com/repos/jquery/jquery/pulls{/number}\",\n    \"milestones_url\": \"https://api.github.com/repos/jquery/jquery/milestones{/number}\",\n    \"notifications_url\": \"https://api.github.com/repos/jquery/jquery/notifications{?since,all,participating}\",\n    \"labels_url\": \"https://api.github.com/repos/jquery/jquery/labels{/name}\",\n    \"deployments_url\": \"http://api.github.com/repos/octocat/Hello-World/deployments\",\n    \"releases_url\": \"http://api.github.com/repos/octocat/Hello-World/releases{/id}\"\n   },\n   \"score\": 1\n  }\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/code?q=nisi reprehenderit&sort=indexed&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"code"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "indexed"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/code?q=nisi reprehenderit&sort=indexed&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"code"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "indexed"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sint exercitation velit\",\n \"message\": \"cupidatat do velit ut\",\n \"documentation_url\": \"elit non dolore et eiusmod\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/code?q=nisi reprehenderit&sort=indexed&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"code"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "indexed"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Search labels",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/search/labels?repository_id=41891364&q=aliquip sint&sort=updated&order=desc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"labels"
							],
							"query": [
								{
									"key": "repository_id",
									"value": "41891364",
									"description": "(Required) The id of the repository."
								},
								{
									"key": "q",
									"value": "aliquip sint",
									"description": "(Required) The search keywords. This endpoint does not accept qualifiers in the query. To learn more about the format of the query, see [Constructing a search query](https://developer.github.com/v3/search/#constructing-a-search-query)."
								},
								{
									"key": "sort",
									"value": "updated",
									"description": "Sorts the results of your query by when the label was `created` or `updated`. Default: [best match](https://developer.github.com/v3/search/#ranking-search-results)"
								},
								{
									"key": "order",
									"value": "desc",
									"description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`."
								}
							]
						},
						"description": "Find labels in a repository with names or descriptions that match search keywords. Returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for labels, you can get text match metadata for the label **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata).\n\nFor example, if you want to find labels in the `linguist` repository that match `bug`, `defect`, or `enhancement`. Your query might look like this:\n\n`q=bug+defect+enhancement&repository_id=64778136`\n\nThe labels that best match the query appear first in the search results."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/labels?repository_id=-28117428&q=nisi reprehenderit&sort=updated&order=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"labels"
									],
									"query": [
										{
											"key": "repository_id",
											"value": "-28117428"
										},
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "order",
											"value": "desc"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/labels?repository_id=-28117428&q=nisi reprehenderit&sort=updated&order=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"labels"
									],
									"query": [
										{
											"key": "repository_id",
											"value": "-28117428"
										},
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "order",
											"value": "desc"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 2,\n \"incomplete_results\": false,\n \"items\": [\n  {\n   \"id\": 418327088,\n   \"node_id\": \"MDU6TGFiZWw0MTgzMjcwODg=\",\n   \"url\": \"https://api.github.com/repos/octocat/linguist/labels/enhancement\",\n   \"name\": \"enhancement\",\n   \"color\": \"84b6eb\",\n   \"default\": true,\n   \"description\": \"New feature or request.\",\n   \"score\": 1\n  },\n  {\n   \"id\": 418327086,\n   \"node_id\": \"MDU6TGFiZWw0MTgzMjcwODY=\",\n   \"url\": \"https://api.github.com/repos/octocat/linguist/labels/bug\",\n   \"name\": \"bug\",\n   \"color\": \"ee0701\",\n   \"default\": true,\n   \"description\": \"Something isn't working.\",\n   \"score\": 1\n  }\n ]\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/labels?repository_id=-28117428&q=nisi reprehenderit&sort=updated&order=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"labels"
									],
									"query": [
										{
											"key": "repository_id",
											"value": "-28117428"
										},
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "order",
											"value": "desc"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/labels?repository_id=-28117428&q=nisi reprehenderit&sort=updated&order=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"labels"
									],
									"query": [
										{
											"key": "repository_id",
											"value": "-28117428"
										},
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "order",
											"value": "desc"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/labels?repository_id=-28117428&q=nisi reprehenderit&sort=updated&order=desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"labels"
									],
									"query": [
										{
											"key": "repository_id",
											"value": "-28117428"
										},
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "updated"
										},
										{
											"key": "order",
											"value": "desc"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Search users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/search/users?q=aliquip sint&sort=repositories&order=desc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"users"
							],
							"query": [
								{
									"key": "q",
									"value": "aliquip sint",
									"description": "(Required) The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://developer.github.com/v3/search/#constructing-a-search-query). See \"[Searching users](https://help.github.com/articles/searching-users/)\" for a detailed list of qualifiers."
								},
								{
									"key": "sort",
									"value": "repositories",
									"description": "Sorts the results of your query by number of `followers` or `repositories`, or when the person `joined` GitHub. Default: [best match](https://developer.github.com/v3/search/#ranking-search-results)"
								},
								{
									"key": "order",
									"value": "desc",
									"description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Find users via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for users, you can get text match metadata for the issue **login**, **email**, and **name** fields when you pass the `text-match` media type. For more details about highlighting search results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata). For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata).\n\nFor example, if you're looking for a list of popular users, you might try this query:\n\n`q=tom+repos:%3E42+followers:%3E1000`\n\nThis query searches for users with the name `tom`. The results are restricted to users with more than 42 repositories and over 1,000 followers."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/users?q=nisi reprehenderit&sort=joined&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"users"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "joined"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/users?q=nisi reprehenderit&sort=joined&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"users"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "joined"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sint exercitation velit\",\n \"message\": \"cupidatat do velit ut\",\n \"documentation_url\": \"elit non dolore et eiusmod\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/users?q=nisi reprehenderit&sort=joined&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"users"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "joined"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/users?q=nisi reprehenderit&sort=joined&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"users"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "joined"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 12,\n \"incomplete_results\": false,\n \"items\": [\n  {\n   \"login\": \"mojombo\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://secure.gravatar.com/avatar/25c7c18223fb42a4c6ae1c8db6f50f9b?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/mojombo\",\n   \"html_url\": \"https://github.com/mojombo\",\n   \"followers_url\": \"https://api.github.com/users/mojombo/followers\",\n   \"subscriptions_url\": \"https://api.github.com/users/mojombo/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/mojombo/orgs\",\n   \"repos_url\": \"https://api.github.com/users/mojombo/repos\",\n   \"received_events_url\": \"https://api.github.com/users/mojombo/received_events\",\n   \"type\": \"User\",\n   \"score\": 1,\n   \"following_url\": \"https://api.github.com/users/mojombo/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/mojombo/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/mojombo/starred{/owner}{/repo}\",\n   \"events_url\": \"https://api.github.com/users/mojombo/events{/privacy}\",\n   \"site_admin\": true\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Search commits",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/search/commits?q=aliquip sint&sort=author-date&order=desc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"commits"
							],
							"query": [
								{
									"key": "q",
									"value": "aliquip sint",
									"description": "(Required) The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://developer.github.com/v3/search/#constructing-a-search-query). See \"[Searching commits](https://help.github.com/articles/searching-commits/)\" for a detailed list of qualifiers."
								},
								{
									"key": "sort",
									"value": "author-date",
									"description": "Sorts the results of your query by `author-date` or `committer-date`. Default: [best match](https://developer.github.com/v3/search/#ranking-search-results)"
								},
								{
									"key": "order",
									"value": "desc",
									"description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Find commits via various criteria on the default branch (usually `master`). This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for commits, you can get text match metadata for the **message** field when you provide the `text-match` media type. For more details about how to receive highlighted search results, see [Text match\nmetadata](https://developer.github.com/v3/search/#text-match-metadata).\n\nFor example, if you want to find commits related to CSS in the [octocat/Spoon-Knife](https://github.com/octocat/Spoon-Knife) repository. Your query would look something like this:\n\n`q=repo:octocat/Spoon-Knife+css`"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/commits?q=nisi reprehenderit&sort=author-date&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"commits"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "author-date"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 1,\n \"incomplete_results\": false,\n \"items\": [\n  {\n   \"url\": \"https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f\",\n   \"sha\": \"bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f\",\n   \"html_url\": \"https://github.com/octocat/Spoon-Knife/commit/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f\",\n   \"comments_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f/comments\",\n   \"commit\": {\n    \"url\": \"https://api.github.com/repos/octocat/Spoon-Knife/git/commits/bb4cc8d3b2e14b3af5df699876dd4ff3acd00b7f\",\n    \"author\": {\n     \"date\": \"2014-02-04T14:38:36-08:00\",\n     \"name\": \"The Octocat\",\n     \"email\": \"octocat@nowhere.com\"\n    },\n    \"committer\": {\n     \"date\": \"2014-02-12T15:18:55-08:00\",\n     \"name\": \"The Octocat\",\n     \"email\": \"octocat@nowhere.com\"\n    },\n    \"message\": \"Create styles.css and updated README\",\n    \"tree\": {\n     \"url\": \"https://api.github.com/repos/octocat/Spoon-Knife/git/trees/a639e96f9038797fba6e0469f94a4b0cc459fa68\",\n     \"sha\": \"a639e96f9038797fba6e0469f94a4b0cc459fa68\"\n    },\n    \"comment_count\": 8\n   },\n   \"author\": {\n    \"login\": \"octocat\",\n    \"id\": 583231,\n    \"node_id\": \"MDQ6VXNlcjU4MzIzMQ==\",\n    \"avatar_url\": \"https://avatars.githubusercontent.com/u/583231?v=3\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/octocat\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": false\n   },\n   \"committer\": {},\n   \"parents\": [\n    {\n     \"url\": \"https://api.github.com/repos/octocat/Spoon-Knife/commits/a30c19e3f13765a3b48829788bc1cb8b4e95cee4\",\n     \"html_url\": \"https://github.com/octocat/Spoon-Knife/commit/a30c19e3f13765a3b48829788bc1cb8b4e95cee4\",\n     \"sha\": \"a30c19e3f13765a3b48829788bc1cb8b4e95cee4\"\n    }\n   ],\n   \"repository\": {\n    \"id\": 1300192,\n    \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMzAwMTky\",\n    \"name\": \"Spoon-Knife\",\n    \"full_name\": \"octocat/Spoon-Knife\",\n    \"owner\": {\n     \"login\": \"octocat\",\n     \"id\": 583231,\n     \"node_id\": \"MDQ6VXNlcjU4MzIzMQ==\",\n     \"avatar_url\": \"https://avatars.githubusercontent.com/u/583231?v=3\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    },\n    \"private\": false,\n    \"html_url\": \"https://github.com/octocat/Spoon-Knife\",\n    \"description\": \"This repo is for demonstration purposes only.\",\n    \"fork\": false,\n    \"url\": \"https://api.github.com/repos/octocat/Spoon-Knife\",\n    \"forks_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/forks\",\n    \"keys_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/keys{/key_id}\",\n    \"collaborators_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/collaborators{/collaborator}\",\n    \"teams_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/teams\",\n    \"hooks_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/hooks\",\n    \"issue_events_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/issues/events{/number}\",\n    \"events_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/events\",\n    \"assignees_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/assignees{/user}\",\n    \"branches_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/branches{/branch}\",\n    \"tags_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/tags\",\n    \"blobs_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/git/blobs{/sha}\",\n    \"git_tags_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/git/tags{/sha}\",\n    \"git_refs_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/git/refs{/sha}\",\n    \"trees_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/git/trees{/sha}\",\n    \"statuses_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/statuses/{sha}\",\n    \"languages_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/languages\",\n    \"stargazers_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/stargazers\",\n    \"contributors_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/contributors\",\n    \"subscribers_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/subscribers\",\n    \"subscription_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/subscription\",\n    \"commits_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/commits{/sha}\",\n    \"git_commits_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/git/commits{/sha}\",\n    \"comments_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/comments{/number}\",\n    \"issue_comment_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/issues/comments{/number}\",\n    \"contents_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/contents/{+path}\",\n    \"compare_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/compare/{base}...{head}\",\n    \"merges_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/merges\",\n    \"archive_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/{archive_format}{/ref}\",\n    \"downloads_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/downloads\",\n    \"issues_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/issues{/number}\",\n    \"pulls_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/pulls{/number}\",\n    \"milestones_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/milestones{/number}\",\n    \"notifications_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/notifications{?since,all,participating}\",\n    \"labels_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/labels{/name}\",\n    \"releases_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/releases{/id}\",\n    \"deployments_url\": \"https://api.github.com/repos/octocat/Spoon-Knife/deployments\"\n   },\n   \"score\": 1,\n   \"node_id\": \"MDQ6VXNlcjU4MzIzMQ==\"\n  }\n ]\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/commits?q=nisi reprehenderit&sort=author-date&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"commits"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "author-date"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/commits?q=nisi reprehenderit&sort=author-date&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"commits"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "author-date"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Search issues and pull requests",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/search/issues?q=aliquip sint&sort=reactions--1&order=desc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"issues"
							],
							"query": [
								{
									"key": "q",
									"value": "aliquip sint",
									"description": "(Required) The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://developer.github.com/v3/search/#constructing-a-search-query). See \"[Searching issues and pull requests](https://help.github.com/articles/searching-issues-and-pull-requests/)\" for a detailed list of qualifiers."
								},
								{
									"key": "sort",
									"value": "reactions--1",
									"description": "Sorts the results of your query by the number of `comments`, `reactions`, `reactions-+1`, `reactions--1`, `reactions-smile`, `reactions-thinking_face`, `reactions-heart`, `reactions-tada`, or `interactions`. You can also sort results by how recently the items were `created` or `updated`, Default: [best match](https://developer.github.com/v3/search/#ranking-search-results)"
								},
								{
									"key": "order",
									"value": "desc",
									"description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Find issues by state and keyword. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for issues, you can get text match metadata for the issue **title**, issue **body**, and issue **comment body** fields when you pass the `text-match` media type. For more details about how to receive highlighted\nsearch results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata).\n\nFor example, if you want to find the oldest unresolved Python bugs on Windows. Your query might look something like this.\n\n`q=windows+label:bug+language:python+state:open&sort=created&order=asc`\n\nThis query searches for the keyword `windows`, within any open issue that is labeled as `bug`. The search runs across repositories whose primary language is Python. The results are sorted by creation date in ascending order, whick means the oldest issues appear first in the search results."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/issues?q=nisi reprehenderit&sort=reactions-+1&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"issues"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "reactions-+1"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/issues?q=nisi reprehenderit&sort=reactions-+1&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"issues"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "reactions-+1"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 280,\n \"incomplete_results\": false,\n \"items\": [\n  {\n   \"url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132\",\n   \"repository_url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit\",\n   \"labels_url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/labels{/name}\",\n   \"comments_url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/comments\",\n   \"events_url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit/issues/132/events\",\n   \"html_url\": \"https://github.com/batterseapower/pinyin-toolkit/issues/132\",\n   \"id\": 35802,\n   \"node_id\": \"MDU6SXNzdWUzNTgwMg==\",\n   \"number\": 132,\n   \"title\": \"Line Number Indexes Beyond 20 Not Displayed\",\n   \"user\": {\n    \"login\": \"Nick3C\",\n    \"id\": 90254,\n    \"node_id\": \"MDQ6VXNlcjkwMjU0\",\n    \"avatar_url\": \"https://secure.gravatar.com/avatar/934442aadfe3b2f4630510de416c5718?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/Nick3C\",\n    \"html_url\": \"https://github.com/Nick3C\",\n    \"followers_url\": \"https://api.github.com/users/Nick3C/followers\",\n    \"following_url\": \"https://api.github.com/users/Nick3C/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/Nick3C/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/Nick3C/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/Nick3C/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/Nick3C/orgs\",\n    \"repos_url\": \"https://api.github.com/users/Nick3C/repos\",\n    \"events_url\": \"https://api.github.com/users/Nick3C/events{/privacy}\",\n    \"received_events_url\": \"https://api.github.com/users/Nick3C/received_events\",\n    \"type\": \"User\",\n    \"site_admin\": true\n   },\n   \"labels\": [\n    {\n     \"id\": 4,\n     \"node_id\": \"MDU6TGFiZWw0\",\n     \"url\": \"https://api.github.com/repos/batterseapower/pinyin-toolkit/labels/bug\",\n     \"name\": \"bug\",\n     \"color\": \"ff0000\"\n    }\n   ],\n   \"state\": \"open\",\n   \"assignee\": null,\n   \"milestone\": {\n    \"url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/milestones/v1.0\",\n    \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones/1/labels\",\n    \"id\": 1002604,\n    \"node_id\": \"MDk6TWlsZXN0b25lMTAwMjYwNA==\",\n    \"number\": 1,\n    \"state\": \"open\",\n    \"title\": \"v1.0\",\n    \"description\": \"Tracking milestone for version 1.0\",\n    \"creator\": {\n     \"login\": \"octocat\",\n     \"id\": 1,\n     \"node_id\": \"MDQ6VXNlcjE=\",\n     \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n     \"gravatar_id\": \"\",\n     \"url\": \"https://api.github.com/users/octocat\",\n     \"html_url\": \"https://github.com/octocat\",\n     \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n     \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n     \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n     \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n     \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n     \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n     \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n     \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n     \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n     \"type\": \"User\",\n     \"site_admin\": false\n    },\n    \"open_issues\": 4,\n    \"closed_issues\": 8,\n    \"created_at\": \"2011-04-10T20:09:31Z\",\n    \"updated_at\": \"2014-03-03T18:58:10Z\",\n    \"closed_at\": \"2013-02-12T13:22:01Z\",\n    \"due_on\": \"2012-10-09T23:39:01Z\"\n   },\n   \"comments\": 15,\n   \"created_at\": \"2009-07-12T20:10:41Z\",\n   \"updated_at\": \"2009-07-19T09:23:43Z\",\n   \"closed_at\": null,\n   \"pull_request\": {\n    \"url\": \"https://api/github.com/repos/octocat/Hello-World/pull/1347\",\n    \"html_url\": \"https://github.com/octocat/Hello-World/pull/1347\",\n    \"diff_url\": \"https://github.com/octocat/Hello-World/pull/1347.diff\",\n    \"patch_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls/1347\"\n   },\n   \"body\": \"...\",\n   \"score\": 1,\n   \"locked\": true,\n   \"author_association\": \"collaborator\"\n  }\n ]\n}"
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/issues?q=nisi reprehenderit&sort=reactions-+1&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"issues"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "reactions-+1"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sint exercitation velit\",\n \"message\": \"cupidatat do velit ut\",\n \"documentation_url\": \"elit non dolore et eiusmod\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/issues?q=nisi reprehenderit&sort=reactions-+1&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"issues"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "reactions-+1"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/issues?q=nisi reprehenderit&sort=reactions-+1&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"issues"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "reactions-+1"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Search repositories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/search/repositories?q=aliquip sint&sort=forks&order=desc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"repositories"
							],
							"query": [
								{
									"key": "q",
									"value": "aliquip sint",
									"description": "(Required) The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://developer.github.com/v3/search/#constructing-a-search-query). See \"[Searching for repositories](https://help.github.com/articles/searching-for-repositories/)\" for a detailed list of qualifiers."
								},
								{
									"key": "sort",
									"value": "forks",
									"description": "Sorts the results of your query by number of `stars`, `forks`, or `help-wanted-issues` or how recently the items were `updated`. Default: [best match](https://developer.github.com/v3/search/#ranking-search-results)"
								},
								{
									"key": "order",
									"value": "desc",
									"description": "Determines whether the first search result returned is the highest number of matches (`desc`) or lowest number of matches (`asc`). This parameter is ignored unless you provide `sort`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Find repositories via various criteria. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination).\n\nWhen searching for repositories, you can get text match metadata for the **name** and **description** fields when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata).\n\nFor example, if you want to search for popular Tetris repositories written in assembly code, your query might look like this:\n\n`q=tetris+language:assembly&sort=stars&order=desc`\n\nThis query searches for repositories with the word `tetris` in the name, the description, or the README. The results are limited to repositories where the primary language is assembly. The results are sorted by stars in descending order, so that the most popular repositories appear first in the search results.\n\nWhen you include the `mercy` preview header, you can also search for multiple topics by adding more `topic:` instances. For example, your query might look like this:\n\n`q=topic:ruby+topic:rails`"
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/repositories?q=nisi reprehenderit&sort=help-wanted-issues&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"repositories"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "help-wanted-issues"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/repositories?q=nisi reprehenderit&sort=help-wanted-issues&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"repositories"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "help-wanted-issues"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/repositories?q=nisi reprehenderit&sort=help-wanted-issues&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"repositories"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "help-wanted-issues"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 40,\n \"incomplete_results\": false,\n \"items\": [\n  {\n   \"id\": 3081286,\n   \"node_id\": \"MDEwOlJlcG9zaXRvcnkzMDgxMjg2\",\n   \"name\": \"Tetris\",\n   \"full_name\": \"dtrupenn/Tetris\",\n   \"owner\": {\n    \"login\": \"dtrupenn\",\n    \"id\": 872147,\n    \"node_id\": \"MDQ6VXNlcjg3MjE0Nw==\",\n    \"avatar_url\": \"https://secure.gravatar.com/avatar/e7956084e75f239de85d3a31bc172ace?d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png\",\n    \"gravatar_id\": \"\",\n    \"url\": \"https://api.github.com/users/dtrupenn\",\n    \"received_events_url\": \"https://api.github.com/users/dtrupenn/received_events\",\n    \"type\": \"User\",\n    \"html_url\": \"https://github.com/octocat\",\n    \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n    \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n    \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n    \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n    \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n    \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n    \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n    \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n    \"site_admin\": true\n   },\n   \"private\": false,\n   \"html_url\": \"https://github.com/dtrupenn/Tetris\",\n   \"description\": \"A C implementation of Tetris using Pennsim through LC4\",\n   \"fork\": false,\n   \"url\": \"https://api.github.com/repos/dtrupenn/Tetris\",\n   \"created_at\": \"2012-01-01T00:31:50Z\",\n   \"updated_at\": \"2013-01-05T17:58:47Z\",\n   \"pushed_at\": \"2012-01-01T00:37:02Z\",\n   \"homepage\": \"https://github.com\",\n   \"size\": 524,\n   \"stargazers_count\": 1,\n   \"watchers_count\": 1,\n   \"language\": \"Assembly\",\n   \"forks_count\": 0,\n   \"open_issues_count\": 0,\n   \"master_branch\": \"master\",\n   \"default_branch\": \"master\",\n   \"score\": 1,\n   \"archive_url\": \"https://api.github.com/repos/dtrupenn/Tetris/{archive_format}{/ref}\",\n   \"assignees_url\": \"https://api.github.com/repos/dtrupenn/Tetris/assignees{/user}\",\n   \"blobs_url\": \"https://api.github.com/repos/dtrupenn/Tetris/git/blobs{/sha}\",\n   \"branches_url\": \"https://api.github.com/repos/dtrupenn/Tetris/branches{/branch}\",\n   \"collaborators_url\": \"https://api.github.com/repos/dtrupenn/Tetris/collaborators{/collaborator}\",\n   \"comments_url\": \"https://api.github.com/repos/dtrupenn/Tetris/comments{/number}\",\n   \"commits_url\": \"https://api.github.com/repos/dtrupenn/Tetris/commits{/sha}\",\n   \"compare_url\": \"https://api.github.com/repos/dtrupenn/Tetris/compare/{base}...{head}\",\n   \"contents_url\": \"https://api.github.com/repos/dtrupenn/Tetris/contents/{+path}\",\n   \"contributors_url\": \"https://api.github.com/repos/dtrupenn/Tetris/contributors\",\n   \"deployments_url\": \"https://api.github.com/repos/dtrupenn/Tetris/deployments\",\n   \"downloads_url\": \"https://api.github.com/repos/dtrupenn/Tetris/downloads\",\n   \"events_url\": \"https://api.github.com/repos/dtrupenn/Tetris/events\",\n   \"forks_url\": \"https://api.github.com/repos/dtrupenn/Tetris/forks\",\n   \"git_commits_url\": \"https://api.github.com/repos/dtrupenn/Tetris/git/commits{/sha}\",\n   \"git_refs_url\": \"https://api.github.com/repos/dtrupenn/Tetris/git/refs{/sha}\",\n   \"git_tags_url\": \"https://api.github.com/repos/dtrupenn/Tetris/git/tags{/sha}\",\n   \"git_url\": \"git:github.com/dtrupenn/Tetris.git\",\n   \"issue_comment_url\": \"https://api.github.com/repos/dtrupenn/Tetris/issues/comments{/number}\",\n   \"issue_events_url\": \"https://api.github.com/repos/dtrupenn/Tetris/issues/events{/number}\",\n   \"issues_url\": \"https://api.github.com/repos/dtrupenn/Tetris/issues{/number}\",\n   \"keys_url\": \"https://api.github.com/repos/dtrupenn/Tetris/keys{/key_id}\",\n   \"labels_url\": \"https://api.github.com/repos/dtrupenn/Tetris/labels{/name}\",\n   \"languages_url\": \"https://api.github.com/repos/dtrupenn/Tetris/languages\",\n   \"merges_url\": \"https://api.github.com/repos/dtrupenn/Tetris/merges\",\n   \"milestones_url\": \"https://api.github.com/repos/dtrupenn/Tetris/milestones{/number}\",\n   \"notifications_url\": \"https://api.github.com/repos/dtrupenn/Tetris/notifications{?since,all,participating}\",\n   \"pulls_url\": \"https://api.github.com/repos/dtrupenn/Tetris/pulls{/number}\",\n   \"releases_url\": \"https://api.github.com/repos/dtrupenn/Tetris/releases{/id}\",\n   \"ssh_url\": \"git@github.com:dtrupenn/Tetris.git\",\n   \"stargazers_url\": \"https://api.github.com/repos/dtrupenn/Tetris/stargazers\",\n   \"statuses_url\": \"https://api.github.com/repos/dtrupenn/Tetris/statuses/{sha}\",\n   \"subscribers_url\": \"https://api.github.com/repos/dtrupenn/Tetris/subscribers\",\n   \"subscription_url\": \"https://api.github.com/repos/dtrupenn/Tetris/subscription\",\n   \"tags_url\": \"https://api.github.com/repos/dtrupenn/Tetris/tags\",\n   \"teams_url\": \"https://api.github.com/repos/dtrupenn/Tetris/teams\",\n   \"trees_url\": \"https://api.github.com/repos/dtrupenn/Tetris/git/trees{/sha}\",\n   \"clone_url\": \"https://github.com/dtrupenn/Tetris.git\",\n   \"mirror_url\": \"git:git.example.com/dtrupenn/Tetris\",\n   \"hooks_url\": \"https://api.github.com/repos/dtrupenn/Tetris/hooks\",\n   \"svn_url\": \"https://svn.github.com/dtrupenn/Tetris\",\n   \"forks\": 1,\n   \"open_issues\": 1,\n   \"watchers\": 1,\n   \"has_issues\": true,\n   \"has_projects\": true,\n   \"has_pages\": true,\n   \"has_wiki\": true,\n   \"has_downloads\": true,\n   \"archived\": true,\n   \"disabled\": true,\n   \"license\": {\n    \"key\": \"mit\",\n    \"name\": \"MIT License\",\n    \"url\": \"https://api.github.com/licenses/mit\",\n    \"spdx_id\": \"MIT\",\n    \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n    \"html_url\": \"https://api.github.com/licenses/mit\"\n   }\n  }\n ]\n}"
						},
						{
							"name": "Service Unavailable",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/repositories?q=nisi reprehenderit&sort=help-wanted-issues&order=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"repositories"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										},
										{
											"key": "sort",
											"value": "help-wanted-issues"
										},
										{
											"key": "order",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Service Unavailable",
							"code": 503,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"sint exercitation velit\",\n \"message\": \"cupidatat do velit ut\",\n \"documentation_url\": \"elit non dolore et eiusmod\"\n}"
						}
					]
				},
				{
					"name": "Search topics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/search/topics?q=aliquip sint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"search",
								"topics"
							],
							"query": [
								{
									"key": "q",
									"value": "aliquip sint",
									"description": "(Required) The query contains one or more search keywords and qualifiers. Qualifiers allow you to limit your search to specific areas of GitHub. The REST API supports the same qualifiers as GitHub.com. To learn more about the format of the query, see [Constructing a search query](https://developer.github.com/v3/search/#constructing-a-search-query)."
								}
							]
						},
						"description": "Find topics via various criteria. Results are sorted by best match. This method returns up to 100 results [per page](https://developer.github.com/v3/#pagination). See \"[Searching topics](https://help.github.com/articles/searching-topics/)\" for a detailed list of qualifiers.\n\nWhen searching for topics, you can get text match metadata for the topic's **short\\_description**, **description**, **name**, or **display\\_name** field when you pass the `text-match` media type. For more details about how to receive highlighted search results, see [Text match metadata](https://developer.github.com/v3/search/#text-match-metadata).\n\nFor example, if you want to search for topics related to Ruby that are featured on https://github.com/topics. Your query might look like this:\n\n`q=ruby+is:featured`\n\nThis query searches for topics with the keyword `ruby` and limits the results to find only topics that are featured. The topics that are the best match for the query appear first in the search results."
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/topics?q=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"topics"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/topics?q=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"topics"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"total_count\": 6,\n \"incomplete_results\": false,\n \"items\": [\n  {\n   \"name\": \"ruby\",\n   \"display_name\": \"Ruby\",\n   \"short_description\": \"Ruby is a scripting language designed for simplified object-oriented programming.\",\n   \"description\": \"Ruby was developed by Yukihiro \\\"Matz\\\" Matsumoto in 1995 with the intent of having an easily readable programming language. It is integrated with the Rails framework to create dynamic web-applications. Ruby's syntax is similar to that of Perl and Python.\",\n   \"created_by\": \"Yukihiro Matsumoto\",\n   \"released\": \"December 21, 1995\",\n   \"created_at\": \"2016-11-28T22:03:59Z\",\n   \"updated_at\": \"2017-10-30T18:16:32Z\",\n   \"featured\": true,\n   \"curated\": true,\n   \"score\": 1\n  },\n  {\n   \"name\": \"rails\",\n   \"display_name\": \"Rails\",\n   \"short_description\": \"Ruby on Rails (Rails) is a web application framework written in Ruby.\",\n   \"description\": \"Ruby on Rails (Rails) is a web application framework written in Ruby. It is meant to help simplify the building of complex websites.\",\n   \"created_by\": \"David Heinemeier Hansson\",\n   \"released\": \"December 13 2005\",\n   \"created_at\": \"2016-12-09T17:03:50Z\",\n   \"updated_at\": \"2017-10-30T16:20:19Z\",\n   \"featured\": true,\n   \"curated\": true,\n   \"score\": 1\n  },\n  {\n   \"name\": \"python\",\n   \"display_name\": \"Python\",\n   \"short_description\": \"Python is a dynamically typed programming language.\",\n   \"description\": \"Python is a dynamically typed programming language designed by Guido Van Rossum. Much like the programming language Ruby, Python was designed to be easily read by programmers. Because of its large following and many libraries, Python can be implemented and used to do anything from webpages to scientific research.\",\n   \"created_by\": \"Guido van Rossum\",\n   \"released\": \"February 20, 1991\",\n   \"created_at\": \"2016-12-07T00:07:02Z\",\n   \"updated_at\": \"2017-10-27T22:45:43Z\",\n   \"featured\": true,\n   \"curated\": true,\n   \"score\": 1\n  },\n  {\n   \"name\": \"jekyll\",\n   \"display_name\": \"Jekyll\",\n   \"short_description\": \"Jekyll is a simple, blog-aware static site generator.\",\n   \"description\": \"Jekyll is a blog-aware, site generator written in Ruby. It takes raw text files, runs it through a renderer and produces a publishable static website.\",\n   \"created_by\": \"Tom Preston-Werner\",\n   \"released\": \"2008\",\n   \"created_at\": \"2016-12-16T21:53:08Z\",\n   \"updated_at\": \"2017-10-27T19:00:24Z\",\n   \"featured\": true,\n   \"curated\": true,\n   \"score\": 1\n  },\n  {\n   \"name\": \"sass\",\n   \"display_name\": \"Sass\",\n   \"short_description\": \"Sass is a stable extension to classic CSS.\",\n   \"description\": \"Sass is a stylesheet language with a main implementation in Ruby. It is an extension of CSS that makes improvements to the old stylesheet format, such as being able to declare variables and using a cleaner nesting syntax.\",\n   \"created_by\": \"Hampton Catlin, Natalie Weizenbaum, Chris Eppstein\",\n   \"released\": \"November 28, 2006\",\n   \"created_at\": \"2016-12-16T21:53:45Z\",\n   \"updated_at\": \"2018-01-16T16:30:40Z\",\n   \"featured\": true,\n   \"curated\": true,\n   \"score\": 1\n  },\n  {\n   \"name\": \"homebrew\",\n   \"display_name\": \"Homebrew\",\n   \"short_description\": \"Homebrew is a package manager for macOS.\",\n   \"description\": \"Homebrew is a package manager for Apple's macOS operating system. It simplifies the installation of software and is popular in the Ruby on Rails community.\",\n   \"created_by\": \"Max Howell\",\n   \"released\": \"2009\",\n   \"created_at\": \"2016-12-17T20:30:44Z\",\n   \"updated_at\": \"2018-02-06T16:14:56Z\",\n   \"featured\": true,\n   \"curated\": true,\n   \"score\": 1\n  }\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/search/topics?q=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"search",
										"topics"
									],
									"query": [
										{
											"key": "q",
											"value": "nisi reprehenderit"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Look for stuff on GitHub.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "teams",
			"item": [
				{
					"name": "Add team member (Legacy)",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/members/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"members",
								":username"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "The \"Add team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Add or update team membership for a user](https://developer.github.com/v3/teams/members/#add-or-update-team-membership-for-a-user) endpoint instead. It allows you to invite new organization members to your teams.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo add someone to a team, the authenticated user must be an organization owner or a team maintainer in the team they're changing. The person being added to the team must be a member of the team's organization.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\nNote that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\""
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"members",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Cannot add an organization as a member.\",\n \"errors\": [\n  {\n   \"code\": \"org\",\n   \"field\": \"user\",\n   \"resource\": \"TeamMember\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"members",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"members",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response if team synchronization is set up",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"members",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove team member (Legacy)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/members/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"members",
								":username"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "The \"Remove team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Remove team membership for a user](https://developer.github.com/v3/teams/members/#remove-team-membership-for-a-user) endpoint instead. It allows you to remove both active and pending memberships.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo remove a team member, the authenticated user must have 'admin' permissions to the team or be an owner of the org that the team is associated with. Removing a team member does not delete the user, it just removes them from the team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\""
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"members",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response if team synchronization is setup",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"members",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get team member (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/members/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"members",
								":username"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "The \"Get team member\" endpoint (described below) is deprecated.\n\nWe recommend using the [Get team membership for a user](https://developer.github.com/v3/teams/members/#get-team-membership-for-a-user) endpoint instead. It allows you to get both active and pending memberships.\n\nTo list members in a team, the team must be visible to the authenticated user."
					},
					"response": [
						{
							"name": "Response if user is not a member",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"members",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response if user is a member",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/members/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"members",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check team permissions for a repository",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/repos/:owner/:repo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"repos",
								":owner",
								":repo"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Checks whether a team has `admin`, `push`, `maintain`, `triage`, or `pull` permission for a repository. Repositories inherited through a parent team will also be checked.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://developer.github.com/v3/media/) via the `application/vnd.github.v3.repository+json` accept header.\n\nIf a team doesn't have permission for the repository, you will receive a `404 Not Found` response status.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`."
					},
					"response": [
						{
							"name": "Alternative response with repository permissions",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.github.v3.repository+json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1296269,\n \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n \"name\": \"Hello-World\",\n \"full_name\": \"octocat/Hello-World\",\n \"owner\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"private\": false,\n \"html_url\": \"https://github.com/octocat/Hello-World\",\n \"description\": \"This your first repo!\",\n \"fork\": false,\n \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n \"homepage\": \"https://github.com\",\n \"language\": null,\n \"forks_count\": 9,\n \"stargazers_count\": 80,\n \"watchers_count\": 80,\n \"size\": 108,\n \"default_branch\": \"master\",\n \"open_issues_count\": 0,\n \"is_template\": true,\n \"topics\": [\n  \"octocat\",\n  \"atom\",\n  \"electron\",\n  \"api\"\n ],\n \"has_issues\": true,\n \"has_projects\": true,\n \"has_wiki\": true,\n \"has_pages\": false,\n \"has_downloads\": true,\n \"archived\": false,\n \"disabled\": false,\n \"visibility\": \"public\",\n \"pushed_at\": \"2011-01-26T19:06:43Z\",\n \"created_at\": \"2011-01-26T19:01:12Z\",\n \"updated_at\": \"2011-01-26T19:14:43Z\",\n \"permissions\": {\n  \"admin\": false,\n  \"push\": false,\n  \"pull\": true\n },\n \"allow_rebase_merge\": true,\n \"template_repository\": null,\n \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n \"allow_squash_merge\": true,\n \"delete_branch_on_merge\": true,\n \"allow_merge_commit\": true,\n \"subscribers_count\": 42,\n \"network_count\": 0,\n \"license\": {\n  \"key\": \"mit\",\n  \"name\": \"MIT License\",\n  \"url\": \"https://api.github.com/licenses/mit\",\n  \"spdx_id\": \"MIT\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n  \"html_url\": \"https://api.github.com/licenses/mit\"\n },\n \"forks\": 1,\n \"open_issues\": 1,\n \"watchers\": 1\n}"
						},
						{
							"name": "Response if team has permission for the repository",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response if team does not have permission for the repository",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add or update team repository permissions",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"permission\": \"triage\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/repos/:owner/:repo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"repos",
								":owner",
								":repo"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "To add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization. Note that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`.\n\nFor more information about the permission levels, see \"[Repository permission levels for an organization](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/repository-permission-levels-for-an-organization#permission-levels-for-repositories-owned-by-an-organization)\"."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"triage\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove a repository from a team",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/repos/:owner/:repo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"repos",
								":owner",
								":repo"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "If the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. This does not delete the repository, it just removes it from the team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/repos/{owner}/{repo}`."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List team members",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/members?role=maintainer&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"members"
							],
							"query": [
								{
									"key": "role",
									"value": "maintainer",
									"description": "Filters members returned by their role in the team. Can be one of:  \n\\* `member` - normal members of the team.  \n\\* `maintainer` - team maintainers.  \n\\* `all` - all members of the team."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								}
							]
						},
						"description": "Team members will include the members of child teams.\n\nTo list members in a team, the team must be visible to the authenticated user."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/members?role=maintainer&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"members"
									],
									"query": [
										{
											"key": "role",
											"value": "maintainer"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						}
					]
				},
				{
					"name": "Delete a discussion comment (Legacy)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/comments/:comment_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"discussions",
								":discussion_number",
								"comments",
								":comment_number"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "comment_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Delete a discussion comment](https://developer.github.com/v3/teams/discussion_comments/#delete-a-discussion-comment) endpoint.\n\nDeletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/comments/:comment_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"discussions",
										":discussion_number",
										"comments",
										":comment_number"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "discussion_number"
										},
										{
											"key": "comment_number"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a discussion comment (Legacy)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"Do you like pineapples?\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/comments/:comment_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"discussions",
								":discussion_number",
								"comments",
								":comment_number"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "comment_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a discussion comment](https://developer.github.com/v3/teams/discussion_comments/#update-a-discussion-comment) endpoint.\n\nEdits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Do you like pineapples?\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/comments/:comment_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"discussions",
										":discussion_number",
										"comments",
										":comment_number"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "discussion_number"
										},
										{
											"key": "comment_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Do you like pineapples?\",\n \"body_html\": \"<p>Do you like pineapples?</p>\",\n \"body_version\": \"e6907b24d9c93cc0c5024a7af5888116\",\n \"created_at\": \"2018-01-15T23:53:58Z\",\n \"last_edited_at\": \"2018-01-26T18:22:20Z\",\n \"discussion_url\": \"https://api.github.com/teams/2403582/discussions/1\",\n \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\n \"node_id\": \"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\n \"number\": 1,\n \"updated_at\": \"2018-01-26T18:22:20Z\",\n \"url\": \"https://api.github.com/teams/2403582/discussions/1/comments/1\",\n \"reactions\": {\n  \"url\": \"https://api.github.com/teams/2403582/discussions/1/reactions\",\n  \"total_count\": 5,\n  \"+1\": 3,\n  \"-1\": 1,\n  \"laugh\": 0,\n  \"confused\": 0,\n  \"heart\": 1,\n  \"hooray\": 0,\n  \"eyes\": 1,\n  \"rocket\": 1\n }\n}"
						}
					]
				},
				{
					"name": "Get a discussion comment (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/comments/:comment_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"discussions",
								":discussion_number",
								"comments",
								":comment_number"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "comment_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion comment](https://developer.github.com/v3/teams/discussion_comments/#get-a-discussion-comment) endpoint.\n\nGet a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/comments/:comment_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"discussions",
										":discussion_number",
										"comments",
										":comment_number"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "discussion_number"
										},
										{
											"key": "comment_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Do you like apples?\",\n \"body_html\": \"<p>Do you like apples?</p>\",\n \"body_version\": \"5eb32b219cdc6a5a9b29ba5d6caa9c51\",\n \"created_at\": \"2018-01-15T23:53:58Z\",\n \"last_edited_at\": null,\n \"discussion_url\": \"https://api.github.com/teams/2403582/discussions/1\",\n \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\n \"node_id\": \"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\n \"number\": 1,\n \"updated_at\": \"2018-01-15T23:53:58Z\",\n \"url\": \"https://api.github.com/teams/2403582/discussions/1/comments/1\",\n \"reactions\": {\n  \"url\": \"https://api.github.com/teams/2403582/discussions/1/reactions\",\n  \"total_count\": 5,\n  \"+1\": 3,\n  \"-1\": 1,\n  \"laugh\": 0,\n  \"confused\": 0,\n  \"heart\": 1,\n  \"hooray\": 0,\n  \"eyes\": 1,\n  \"rocket\": 1\n }\n}"
						}
					]
				},
				{
					"name": "Remove a repository from a team (Legacy)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/repos/:owner/:repo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"repos",
								":owner",
								":repo"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove a repository from a team](https://developer.github.com/v3/teams/#remove-a-repository-from-a-team) endpoint.\n\nIf the authenticated user is an organization owner or a team maintainer, they can remove any repositories from the team. To remove a repository from a team as an organization member, the authenticated user must have admin access to the repository and must be able to see the team. NOTE: This does not delete the repository, it just removes it from the team."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check team permissions for a repository (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/repos/:owner/:repo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"repos",
								":owner",
								":repo"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Note**: Repositories inherited through a parent team will also be checked.\n\n**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a repository](https://developer.github.com/v3/teams/#check-team-permissions-for-a-repository) endpoint.\n\nYou can also get information about the specified repository, including what permissions the team grants on it, by passing the following custom [media type](https://developer.github.com/v3/media/) via the `Accept` header:"
					},
					"response": [
						{
							"name": "Response if repository is not managed by this team",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Alternative response with extra repository information",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/vnd.github.v3.repository+json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1296269,\n \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n \"name\": \"Hello-World\",\n \"full_name\": \"octocat/Hello-World\",\n \"owner\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"private\": false,\n \"html_url\": \"https://github.com/octocat/Hello-World\",\n \"description\": \"This your first repo!\",\n \"fork\": false,\n \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n \"homepage\": \"https://github.com\",\n \"language\": null,\n \"forks_count\": 9,\n \"stargazers_count\": 80,\n \"watchers_count\": 80,\n \"size\": 108,\n \"default_branch\": \"master\",\n \"open_issues_count\": 0,\n \"is_template\": true,\n \"topics\": [\n  \"octocat\",\n  \"atom\",\n  \"electron\",\n  \"api\"\n ],\n \"has_issues\": true,\n \"has_projects\": true,\n \"has_wiki\": true,\n \"has_pages\": false,\n \"has_downloads\": true,\n \"archived\": false,\n \"disabled\": false,\n \"visibility\": \"public\",\n \"pushed_at\": \"2011-01-26T19:06:43Z\",\n \"created_at\": \"2011-01-26T19:01:12Z\",\n \"updated_at\": \"2011-01-26T19:14:43Z\",\n \"permissions\": {\n  \"admin\": false,\n  \"push\": false,\n  \"pull\": true\n },\n \"allow_rebase_merge\": true,\n \"template_repository\": null,\n \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n \"allow_squash_merge\": true,\n \"delete_branch_on_merge\": true,\n \"allow_merge_commit\": true,\n \"subscribers_count\": 42,\n \"network_count\": 0,\n \"license\": {\n  \"key\": \"mit\",\n  \"name\": \"MIT License\",\n  \"url\": \"https://api.github.com/licenses/mit\",\n  \"spdx_id\": \"MIT\",\n  \"node_id\": \"MDc6TGljZW5zZW1pdA==\",\n  \"html_url\": \"https://api.github.com/licenses/mit\"\n },\n \"forks\": 1,\n \"open_issues\": 1,\n \"watchers\": 1\n}"
						},
						{
							"name": "Response if repository is managed by this team",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add or update team repository permissions (Legacy)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"permission\": \"push\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/repos/:owner/:repo",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"repos",
								":owner",
								":repo"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "owner",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "repo",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Add or update team repository permissions](https://developer.github.com/v3/teams/#add-or-update-team-repository-permissions) endpoint.\n\nTo add a repository to a team or update the team's permission on a repository, the authenticated user must have admin access to the repository, and must be able to see the team. The repository must be owned by the organization, or a direct fork of a repository owned by the organization. You will get a `422 Unprocessable Entity` status if you attempt to add a repository to a team that is not owned by the organization.\n\nNote that, if you choose not to pass any parameters, you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\""
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"push\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"push\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"push\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/repos/:owner/:repo",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"repos",
										":owner",
										":repo"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "owner"
										},
										{
											"key": "repo"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Remove team membership for a user (Legacy)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/memberships/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"memberships",
								":username"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove team membership for a user](https://developer.github.com/v3/teams/members/#remove-team-membership-for-a-user) endpoint.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\""
					},
					"response": [
						{
							"name": "Response if team synchronization is set up",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get team membership for a user (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/memberships/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"memberships",
								":username"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get team membership for a user](https://developer.github.com/v3/teams/members/#get-team-membership-for-a-user) endpoint.\n\nTeam members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:** The `role` for organization owners returns as `maintainer`. For more information about `maintainer` roles, see [Create a team](https://developer.github.com/v3/teams/#create-a-team)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/teams/1/memberships/octocat\",\n \"role\": \"member\",\n \"state\": \"active\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Add or update team membership for a user (Legacy)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\": \"maintainer\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/memberships/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"memberships",
								":username"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Add or update team membership for a user](https://developer.github.com/v3/teams/members/#add-or-update-team-membership-for-a-user) endpoint.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nIf the user is already a member of the team's organization, this endpoint will add the user to the team. To add a membership between an organization member and a team, the authenticated user must be an organization owner or a team maintainer.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\nIf the user is unaffiliated with the team's organization, this endpoint will send an invitation to the user via email. This newly-created membership will be in the \"pending\" state until the user accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team. To add a membership between an unaffiliated user and a team, the authenticated user must be an organization owner.\n\nIf the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer."
					},
					"response": [
						{
							"name": "Response if team synchronization is set up",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"role\": \"maintainer\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"role\": \"maintainer\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/teams/1/memberships/octocat\",\n \"role\": \"member\",\n \"state\": \"active\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"role\": \"maintainer\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Response if you attempt to add an organization to a team",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"role\": \"maintainer\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Cannot add an organization as a member.\",\n \"errors\": [\n  {\n   \"code\": \"org\",\n   \"field\": \"user\",\n   \"resource\": \"TeamMember\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List discussion comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments?direction=desc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions",
								":discussion_number",
								"comments"
							],
							"query": [
								{
									"key": "direction",
									"value": "desc",
									"description": "One of `asc` (ascending) or `desc` (descending)."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "List all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments?direction=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions",
										":discussion_number",
										"comments"
									],
									"query": [
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "discussion_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"author\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"body\": \"Do you like apples?\",\n  \"body_html\": \"<p>Do you like apples?</p>\",\n  \"body_version\": \"5eb32b219cdc6a5a9b29ba5d6caa9c51\",\n  \"created_at\": \"2018-01-15T23:53:58Z\",\n  \"last_edited_at\": null,\n  \"discussion_url\": \"https://api.github.com/teams/2403582/discussions/1\",\n  \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\n  \"node_id\": \"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\n  \"number\": 1,\n  \"updated_at\": \"2018-01-15T23:53:58Z\",\n  \"url\": \"https://api.github.com/teams/2403582/discussions/1/comments/1\",\n  \"reactions\": {\n   \"url\": \"https://api.github.com/teams/2403582/discussions/1/reactions\",\n   \"total_count\": 5,\n   \"+1\": 3,\n   \"-1\": 1,\n   \"laugh\": 0,\n   \"confused\": 0,\n   \"heart\": 1,\n   \"hooray\": 0,\n   \"eyes\": 1,\n   \"rocket\": 1\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Create a discussion comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"Do you like apples?\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions",
								":discussion_number",
								"comments"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Creates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Do you like apples?\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions",
										":discussion_number",
										"comments"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "discussion_number"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Do you like apples?\",\n \"body_html\": \"<p>Do you like apples?</p>\",\n \"body_version\": \"5eb32b219cdc6a5a9b29ba5d6caa9c51\",\n \"created_at\": \"2018-01-15T23:53:58Z\",\n \"last_edited_at\": null,\n \"discussion_url\": \"https://api.github.com/teams/2403582/discussions/1\",\n \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\n \"node_id\": \"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\n \"number\": 1,\n \"updated_at\": \"2018-01-15T23:53:58Z\",\n \"url\": \"https://api.github.com/teams/2403582/discussions/1/comments/1\",\n \"reactions\": {\n  \"url\": \"https://api.github.com/teams/2403582/discussions/1/reactions\",\n  \"total_count\": 5,\n  \"+1\": 3,\n  \"-1\": 1,\n  \"laugh\": 0,\n  \"confused\": 0,\n  \"heart\": 1,\n  \"hooray\": 0,\n  \"eyes\": 1,\n  \"rocket\": 1\n }\n}"
						}
					]
				},
				{
					"name": "Get a discussion (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"discussions",
								":discussion_number"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Get a discussion](https://developer.github.com/v3/teams/discussions/#get-a-discussion) endpoint.\n\nGet a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"discussions",
										":discussion_number"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "discussion_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Hi! This is an area for us to collaborate as a team.\",\n \"body_html\": \"<p>Hi! This is an area for us to collaborate as a team</p>\",\n \"body_version\": \"0d495416a700fb06133c612575d92bfb\",\n \"comments_count\": 0,\n \"comments_url\": \"https://api.github.com/teams/2343027/discussions/1/comments\",\n \"created_at\": \"2018-01-25T18:56:31Z\",\n \"last_edited_at\": null,\n \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1\",\n \"node_id\": \"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\n \"number\": 1,\n \"pinned\": false,\n \"private\": false,\n \"team_url\": \"https://api.github.com/teams/2343027\",\n \"title\": \"Our first team post\",\n \"updated_at\": \"2018-01-25T18:56:31Z\",\n \"url\": \"https://api.github.com/teams/2343027/discussions/1\",\n \"reactions\": {\n  \"url\": \"https://api.github.com/teams/2343027/discussions/1/reactions\",\n  \"total_count\": 5,\n  \"+1\": 3,\n  \"-1\": 1,\n  \"laugh\": 0,\n  \"confused\": 0,\n  \"heart\": 1,\n  \"hooray\": 0,\n  \"eyes\": 1,\n  \"rocket\": 1\n }\n}"
						}
					]
				},
				{
					"name": "Update a discussion (Legacy)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Welcome to our first team post\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"discussions",
								":discussion_number"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a discussion](https://developer.github.com/v3/teams/discussions/#update-a-discussion) endpoint.\n\nEdits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Welcome to our first team post\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"discussions",
										":discussion_number"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "discussion_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Hi! This is an area for us to collaborate as a team.\",\n \"body_html\": \"<p>Hi! This is an area for us to collaborate as a team</p>\",\n \"body_version\": \"0d495416a700fb06133c612575d92bfb\",\n \"comments_count\": 1,\n \"comments_url\": \"https://api.github.com/teams/2343027/discussions/1/comments\",\n \"created_at\": \"2018-01-25T18:56:31Z\",\n \"last_edited_at\": \"2018-01-26T18:22:20Z\",\n \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1\",\n \"node_id\": \"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\n \"number\": 1,\n \"pinned\": false,\n \"private\": false,\n \"team_url\": \"https://api.github.com/teams/2343027\",\n \"title\": \"Welcome to our first team post\",\n \"updated_at\": \"2018-01-26T18:22:20Z\",\n \"url\": \"https://api.github.com/teams/2343027/discussions/1\",\n \"reactions\": {\n  \"url\": \"https://api.github.com/teams/2343027/discussions/1/reactions\",\n  \"total_count\": 5,\n  \"+1\": 3,\n  \"-1\": 1,\n  \"laugh\": 0,\n  \"confused\": 0,\n  \"heart\": 1,\n  \"hooray\": 0,\n  \"eyes\": 1,\n  \"rocket\": 1\n }\n}"
						}
					]
				},
				{
					"name": "Delete a discussion (Legacy)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"discussions",
								":discussion_number"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Delete a discussion`](https://developer.github.com/v3/teams/discussions/#delete-a-discussion) endpoint.\n\nDelete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"discussions",
										":discussion_number"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "discussion_number"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete a team (Legacy)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Delete a team](https://developer.github.com/v3/teams/#delete-a-team) endpoint.\n\nTo delete a team, the authenticated user must be an organization owner or team maintainer.\n\nIf you are an organization owner, deleting a parent team will delete all of its child teams as well."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update a team (Legacy)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"new team name\",\n    \"description\": \"new team description\",\n    \"privacy\": \"closed\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Update a team](https://developer.github.com/v3/teams/#update-a-team) endpoint.\n\nTo edit a team, the authenticated user must either be an organization owner or a team maintainer.\n\n**Note:** With nested teams, the `privacy` for parent teams cannot be `secret`."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"new team name\",\n    \"description\": \"new team description\",\n    \"privacy\": \"closed\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"new team name\",\n    \"description\": \"new team description\",\n    \"privacy\": \"closed\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDQ6VGVhbTE=\",\n \"url\": \"https://api.github.com/teams/1\",\n \"html_url\": \"https://api.github.com/teams/justice-league\",\n \"name\": \"Justice League\",\n \"slug\": \"justice-league\",\n \"description\": \"A great team.\",\n \"privacy\": \"closed\",\n \"permission\": \"admin\",\n \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n \"parent\": null,\n \"members_count\": 3,\n \"repos_count\": 10,\n \"created_at\": \"2017-07-14T16:53:42Z\",\n \"updated_at\": \"2017-08-17T12:37:15Z\",\n \"organization\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n  \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n  \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n  \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"description\": \"A great organization\",\n  \"name\": \"github\",\n  \"company\": \"GitHub\",\n  \"blog\": \"https://github.com/blog\",\n  \"location\": \"San Francisco\",\n  \"email\": \"octocat@github.com\",\n  \"is_verified\": true,\n  \"has_organization_projects\": true,\n  \"has_repository_projects\": true,\n  \"public_repos\": 2,\n  \"public_gists\": 1,\n  \"followers\": 20,\n  \"following\": 0,\n  \"html_url\": \"https://github.com/octocat\",\n  \"created_at\": \"2008-01-14T04:33:35Z\",\n  \"updated_at\": \"2017-08-17T12:37:15Z\",\n  \"type\": \"Organization\"\n }\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"new team name\",\n    \"description\": \"new team description\",\n    \"privacy\": \"closed\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"new team name\",\n    \"description\": \"new team description\",\n    \"privacy\": \"closed\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get a team (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the [Get a team by name](https://developer.github.com/v3/teams/#get-a-team-by-name) endpoint."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDQ6VGVhbTE=\",\n \"url\": \"https://api.github.com/teams/1\",\n \"html_url\": \"https://api.github.com/teams/justice-league\",\n \"name\": \"Justice League\",\n \"slug\": \"justice-league\",\n \"description\": \"A great team.\",\n \"privacy\": \"closed\",\n \"permission\": \"admin\",\n \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n \"parent\": null,\n \"members_count\": 3,\n \"repos_count\": 10,\n \"created_at\": \"2017-07-14T16:53:42Z\",\n \"updated_at\": \"2017-08-17T12:37:15Z\",\n \"organization\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n  \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n  \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n  \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"description\": \"A great organization\",\n  \"name\": \"github\",\n  \"company\": \"GitHub\",\n  \"blog\": \"https://github.com/blog\",\n  \"location\": \"San Francisco\",\n  \"email\": \"octocat@github.com\",\n  \"is_verified\": true,\n  \"has_organization_projects\": true,\n  \"has_repository_projects\": true,\n  \"public_repos\": 2,\n  \"public_gists\": 1,\n  \"followers\": 20,\n  \"following\": 0,\n  \"html_url\": \"https://github.com/octocat\",\n  \"created_at\": \"2008-01-14T04:33:35Z\",\n  \"updated_at\": \"2017-08-17T12:37:15Z\",\n  \"type\": \"Organization\"\n }\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Create a discussion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Our first team post\",\n    \"body\": \"Hi! This is an area for us to collaborate as a team.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								}
							]
						},
						"description": "Creates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `POST /organizations/{org_id}/team/{team_id}/discussions`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Our first team post\",\n    \"body\": \"Hi! This is an area for us to collaborate as a team.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Hi! This is an area for us to collaborate as a team.\",\n \"body_html\": \"<p>Hi! This is an area for us to collaborate as a team</p>\",\n \"body_version\": \"0d495416a700fb06133c612575d92bfb\",\n \"comments_count\": 0,\n \"comments_url\": \"https://api.github.com/teams/2343027/discussions/1/comments\",\n \"created_at\": \"2018-01-25T18:56:31Z\",\n \"last_edited_at\": null,\n \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1\",\n \"node_id\": \"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\n \"number\": 1,\n \"pinned\": false,\n \"private\": false,\n \"team_url\": \"https://api.github.com/teams/2343027\",\n \"title\": \"Our first team post\",\n \"updated_at\": \"2018-01-25T18:56:31Z\",\n \"url\": \"https://api.github.com/teams/2343027/discussions/1\",\n \"reactions\": {\n  \"url\": \"https://api.github.com/teams/2343027/discussions/1/reactions\",\n  \"total_count\": 5,\n  \"+1\": 3,\n  \"-1\": 1,\n  \"laugh\": 0,\n  \"confused\": 0,\n  \"heart\": 1,\n  \"hooray\": 0,\n  \"eyes\": 1,\n  \"rocket\": 1\n }\n}"
						}
					]
				},
				{
					"name": "List discussions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions?direction=desc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions"
							],
							"query": [
								{
									"key": "direction",
									"value": "desc",
									"description": "One of `asc` (ascending) or `desc` (descending)."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								}
							]
						},
						"description": "List all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions?direction=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions"
									],
									"query": [
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"author\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"body\": \"Hi! This is an area for us to collaborate as a team.\",\n  \"body_html\": \"<p>Hi! This is an area for us to collaborate as a team</p>\",\n  \"body_version\": \"0d495416a700fb06133c612575d92bfb\",\n  \"comments_count\": 0,\n  \"comments_url\": \"https://api.github.com/teams/2343027/discussions/1/comments\",\n  \"created_at\": \"2018-01-25T18:56:31Z\",\n  \"last_edited_at\": null,\n  \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1\",\n  \"node_id\": \"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\n  \"number\": 1,\n  \"pinned\": false,\n  \"private\": false,\n  \"team_url\": \"https://api.github.com/teams/2343027\",\n  \"title\": \"Our first team post\",\n  \"updated_at\": \"2018-01-25T18:56:31Z\",\n  \"url\": \"https://api.github.com/teams/2343027/discussions/1\",\n  \"reactions\": {\n   \"url\": \"https://api.github.com/teams/2343027/discussions/1/reactions\",\n   \"total_count\": 5,\n   \"+1\": 3,\n   \"-1\": 1,\n   \"laugh\": 0,\n   \"confused\": 0,\n   \"heart\": 1,\n   \"hooray\": 0,\n   \"eyes\": 1,\n   \"rocket\": 1\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Create or update IdP group connections (Legacy)",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"groups\": [\n        {\n            \"group_id\": \"123\",\n            \"group_name\": \"Octocat admins\",\n            \"description\": \"The people who configure your octoworld.\",\n            \"group_description\": \"string\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/team-sync/group-mappings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"team-sync",
								"group-mappings"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create or update IdP group connections`](https://developer.github.com/v3/teams/team_sync/#create-or-update-idp-group-connections) endpoint.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nCreates, updates, or removes a connection between a team and an IdP group. When adding groups to a team, you must include all new and existing groups to avoid replacing existing groups with the new ones. Specifying an empty `groups` array will remove all connections for a team."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groups\": [\n        {\n            \"group_id\": \"123\",\n            \"group_name\": \"Octocat admins\",\n            \"description\": \"The people who configure your octoworld.\",\n            \"group_description\": \"string\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/team-sync/group-mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"team-sync",
										"group-mappings"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groups\": [\n  {\n   \"group_id\": \"123\",\n   \"group_name\": \"Octocat admins\",\n   \"group_description\": \"The people who configure your octoworld.\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groups\": [\n        {\n            \"group_id\": \"123\",\n            \"group_name\": \"Octocat admins\",\n            \"description\": \"The people who configure your octoworld.\",\n            \"group_description\": \"string\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/team-sync/group-mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"team-sync",
										"group-mappings"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groups\": [\n        {\n            \"group_id\": \"123\",\n            \"group_name\": \"Octocat admins\",\n            \"description\": \"The people who configure your octoworld.\",\n            \"group_description\": \"string\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/team-sync/group-mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"team-sync",
										"group-mappings"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List IdP groups for a team (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/team-sync/group-mappings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"team-sync",
								"group-mappings"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List IdP groups for a team`](https://developer.github.com/v3/teams/team_sync/#list-idp-groups-for-a-team) endpoint.\n\nTeam synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nList IdP groups connected to a team on GitHub."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/team-sync/group-mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"team-sync",
										"group-mappings"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/team-sync/group-mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"team-sync",
										"group-mappings"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groups\": [\n  {\n   \"group_id\": \"123\",\n   \"group_name\": \"Octocat admins\",\n   \"group_description\": \"The people who configure your octoworld.\"\n  },\n  {\n   \"group_id\": \"456\",\n   \"group_name\": \"Octocat docs members\",\n   \"group_description\": \"The people who make your octoworld come to life.\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/team-sync/group-mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"team-sync",
										"group-mappings"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Update a discussion",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Welcome to our first team post\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions",
								":discussion_number"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Edits the title and body text of a discussion post. Only the parameters you provide are updated. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Welcome to our first team post\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions",
										":discussion_number"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "discussion_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Hi! This is an area for us to collaborate as a team.\",\n \"body_html\": \"<p>Hi! This is an area for us to collaborate as a team</p>\",\n \"body_version\": \"0d495416a700fb06133c612575d92bfb\",\n \"comments_count\": 1,\n \"comments_url\": \"https://api.github.com/teams/2343027/discussions/1/comments\",\n \"created_at\": \"2018-01-25T18:56:31Z\",\n \"last_edited_at\": \"2018-01-26T18:22:20Z\",\n \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1\",\n \"node_id\": \"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\n \"number\": 1,\n \"pinned\": false,\n \"private\": false,\n \"team_url\": \"https://api.github.com/teams/2343027\",\n \"title\": \"Welcome to our first team post\",\n \"updated_at\": \"2018-01-26T18:22:20Z\",\n \"url\": \"https://api.github.com/teams/2343027/discussions/1\",\n \"reactions\": {\n  \"url\": \"https://api.github.com/teams/2343027/discussions/1/reactions\",\n  \"total_count\": 5,\n  \"+1\": 3,\n  \"-1\": 1,\n  \"laugh\": 0,\n  \"confused\": 0,\n  \"heart\": 1,\n  \"hooray\": 0,\n  \"eyes\": 1,\n  \"rocket\": 1\n }\n}"
						}
					]
				},
				{
					"name": "Delete a discussion",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions",
								":discussion_number"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Delete a discussion from a team's page. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions",
										":discussion_number"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "discussion_number"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a discussion",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions",
								":discussion_number"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Get a specific discussion on a team's page. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions",
										":discussion_number"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "discussion_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Hi! This is an area for us to collaborate as a team.\",\n \"body_html\": \"<p>Hi! This is an area for us to collaborate as a team</p>\",\n \"body_version\": \"0d495416a700fb06133c612575d92bfb\",\n \"comments_count\": 0,\n \"comments_url\": \"https://api.github.com/teams/2343027/discussions/1/comments\",\n \"created_at\": \"2018-01-25T18:56:31Z\",\n \"last_edited_at\": null,\n \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1\",\n \"node_id\": \"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\n \"number\": 1,\n \"pinned\": false,\n \"private\": false,\n \"team_url\": \"https://api.github.com/teams/2343027\",\n \"title\": \"Our first team post\",\n \"updated_at\": \"2018-01-25T18:56:31Z\",\n \"url\": \"https://api.github.com/teams/2343027/discussions/1\",\n \"reactions\": {\n  \"url\": \"https://api.github.com/teams/2343027/discussions/1/reactions\",\n  \"total_count\": 5,\n  \"+1\": 3,\n  \"-1\": 1,\n  \"laugh\": 0,\n  \"confused\": 0,\n  \"heart\": 1,\n  \"hooray\": 0,\n  \"eyes\": 1,\n  \"rocket\": 1\n }\n}"
						}
					]
				},
				{
					"name": "List pending team invitations (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/invitations?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"invitations"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List pending team invitations`](https://developer.github.com/v3/teams/members/#list-pending-team-invitations) endpoint.\n\nThe return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/invitations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"invitations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"login\": \"monalisa\",\n  \"email\": \"octocat@github.com\",\n  \"role\": \"direct_member\",\n  \"created_at\": \"2016-11-30T06:46:10-08:00\",\n  \"inviter\": {\n   \"login\": \"other_user\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/other_user\",\n   \"html_url\": \"https://github.com/other_user\",\n   \"followers_url\": \"https://api.github.com/users/other_user/followers\",\n   \"following_url\": \"https://api.github.com/users/other_user/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/other_user/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/other_user/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/other_user/orgs\",\n   \"repos_url\": \"https://api.github.com/users/other_user/repos\",\n   \"events_url\": \"https://api.github.com/users/other_user/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/other_user/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"team_count\": 2,\n  \"invitation_team_url\": \"https://api.github.com/organizations/2/invitations/1/teams\"\n }\n]"
						}
					]
				},
				{
					"name": "Create a discussion comment (Legacy)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"Do you like apples?\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"discussions",
								":discussion_number",
								"comments"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Create a discussion comment](https://developer.github.com/v3/teams/discussion_comments/#create-a-discussion-comment) endpoint.\n\nCreates a new comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Do you like apples?\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/comments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"discussions",
										":discussion_number",
										"comments"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "discussion_number"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Do you like apples?\",\n \"body_html\": \"<p>Do you like apples?</p>\",\n \"body_version\": \"5eb32b219cdc6a5a9b29ba5d6caa9c51\",\n \"created_at\": \"2018-01-15T23:53:58Z\",\n \"last_edited_at\": null,\n \"discussion_url\": \"https://api.github.com/teams/2403582/discussions/1\",\n \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\n \"node_id\": \"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\n \"number\": 1,\n \"updated_at\": \"2018-01-15T23:53:58Z\",\n \"url\": \"https://api.github.com/teams/2403582/discussions/1/comments/1\",\n \"reactions\": {\n  \"url\": \"https://api.github.com/teams/2403582/discussions/1/reactions\",\n  \"total_count\": 5,\n  \"+1\": 3,\n  \"-1\": 1,\n  \"laugh\": 0,\n  \"confused\": 0,\n  \"heart\": 1,\n  \"hooray\": 0,\n  \"eyes\": 1,\n  \"rocket\": 1\n }\n}"
						}
					]
				},
				{
					"name": "List discussion comments (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/comments?direction=desc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"discussions",
								":discussion_number",
								"comments"
							],
							"query": [
								{
									"key": "direction",
									"value": "desc",
									"description": "One of `asc` (ascending) or `desc` (descending)."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List discussion comments](https://developer.github.com/v3/teams/discussion_comments/#list-discussion-comments) endpoint.\n\nList all comments on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/discussions/:discussion_number/comments?direction=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"discussions",
										":discussion_number",
										"comments"
									],
									"query": [
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "discussion_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"author\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"body\": \"Do you like apples?\",\n  \"body_html\": \"<p>Do you like apples?</p>\",\n  \"body_version\": \"5eb32b219cdc6a5a9b29ba5d6caa9c51\",\n  \"created_at\": \"2018-01-15T23:53:58Z\",\n  \"last_edited_at\": null,\n  \"discussion_url\": \"https://api.github.com/teams/2403582/discussions/1\",\n  \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\n  \"node_id\": \"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\n  \"number\": 1,\n  \"updated_at\": \"2018-01-15T23:53:58Z\",\n  \"url\": \"https://api.github.com/teams/2403582/discussions/1/comments/1\",\n  \"reactions\": {\n   \"url\": \"https://api.github.com/teams/2403582/discussions/1/reactions\",\n   \"total_count\": 5,\n   \"+1\": 3,\n   \"-1\": 1,\n   \"laugh\": 0,\n   \"confused\": 0,\n   \"heart\": 1,\n   \"hooray\": 0,\n   \"eyes\": 1,\n   \"rocket\": 1\n  }\n }\n]"
						}
					]
				},
				{
					"name": "List team projects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/projects?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"projects"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								}
							]
						},
						"description": "Lists the organization projects for a team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/projects?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"projects"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"owner_url\": \"https://api.github.com/orgs/octocat\",\n  \"url\": \"https://api.github.com/projects/1002605\",\n  \"html_url\": \"https://github.com/orgs/api-playground/projects/1\",\n  \"columns_url\": \"https://api.github.com/projects/1002605/columns\",\n  \"id\": 1002605,\n  \"node_id\": \"MDc6UHJvamVjdDEwMDI2MDU=\",\n  \"name\": \"Organization Roadmap\",\n  \"body\": \"High-level roadmap for the upcoming year.\",\n  \"number\": 1,\n  \"state\": \"open\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"created_at\": \"2011-04-11T20:09:31Z\",\n  \"updated_at\": \"2014-03-04T18:58:10Z\",\n  \"organization_permission\": \"write\",\n  \"private\": false,\n  \"permissions\": {\n   \"read\": true,\n   \"write\": true,\n   \"admin\": false\n  }\n }\n]"
						}
					]
				},
				{
					"name": "List team repositories (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/repos?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"repos"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [List team repositories](https://developer.github.com/v3/teams/#list-team-repositories) endpoint."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/repos?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"repos"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/repos?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"repos"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"template_repository\": \"octocat/template\",\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"delete_branch_on_merge\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"spdx_id\": \"MIT\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Add or update team project permissions",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"permission\": \"read\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/projects/:project_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"projects",
								":project_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "project_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Adds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/projects/{project_id}`."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"read\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response if the project is not owned by the organization",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"read\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Must have admin rights to Repository.\",\n \"documentation_url\": \"https://developer.github.com/v3/teams/#add-or-update-team-project-permissions\"\n}"
						}
					]
				},
				{
					"name": "Remove a project from a team",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/projects/:project_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"projects",
								":project_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "project_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Removes an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. This endpoint removes the project from the team, but does not delete the project.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/projects/{project_id}`."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check team permissions for a project",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/projects/:project_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"projects",
								":project_id"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "project_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Checks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/projects/{project_id}`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"owner_url\": \"https://api.github.com/orgs/octocat\",\n \"url\": \"https://api.github.com/projects/1002605\",\n \"html_url\": \"https://github.com/orgs/api-playground/projects/1\",\n \"columns_url\": \"https://api.github.com/projects/1002605/columns\",\n \"id\": 1002605,\n \"node_id\": \"MDc6UHJvamVjdDEwMDI2MDU=\",\n \"name\": \"Organization Roadmap\",\n \"body\": \"High-level roadmap for the upcoming year.\",\n \"number\": 1,\n \"state\": \"open\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-11T20:09:31Z\",\n \"updated_at\": \"2014-03-04T18:58:10Z\",\n \"organization_permission\": \"write\",\n \"private\": false,\n \"permissions\": {\n  \"read\": true,\n  \"write\": true,\n  \"admin\": false\n }\n}"
						},
						{
							"name": "Response if project is not managed by this team",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a discussion comment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions",
								":discussion_number",
								"comments",
								":comment_number"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "comment_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Get a specific comment on a team discussion. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions",
										":discussion_number",
										"comments",
										":comment_number"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "discussion_number"
										},
										{
											"key": "comment_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Do you like apples?\",\n \"body_html\": \"<p>Do you like apples?</p>\",\n \"body_version\": \"5eb32b219cdc6a5a9b29ba5d6caa9c51\",\n \"created_at\": \"2018-01-15T23:53:58Z\",\n \"last_edited_at\": null,\n \"discussion_url\": \"https://api.github.com/teams/2403582/discussions/1\",\n \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\n \"node_id\": \"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\n \"number\": 1,\n \"updated_at\": \"2018-01-15T23:53:58Z\",\n \"url\": \"https://api.github.com/teams/2403582/discussions/1/comments/1\",\n \"reactions\": {\n  \"url\": \"https://api.github.com/teams/2403582/discussions/1/reactions\",\n  \"total_count\": 5,\n  \"+1\": 3,\n  \"-1\": 1,\n  \"laugh\": 0,\n  \"confused\": 0,\n  \"heart\": 1,\n  \"hooray\": 0,\n  \"eyes\": 1,\n  \"rocket\": 1\n }\n}"
						}
					]
				},
				{
					"name": "Update a discussion comment",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"body\": \"Do you like pineapples?\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions",
								":discussion_number",
								"comments",
								":comment_number"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "comment_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Edits the body text of a discussion comment. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"body\": \"Do you like pineapples?\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions",
										":discussion_number",
										"comments",
										":comment_number"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "discussion_number"
										},
										{
											"key": "comment_number"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Do you like pineapples?\",\n \"body_html\": \"<p>Do you like pineapples?</p>\",\n \"body_version\": \"e6907b24d9c93cc0c5024a7af5888116\",\n \"created_at\": \"2018-01-15T23:53:58Z\",\n \"last_edited_at\": \"2018-01-26T18:22:20Z\",\n \"discussion_url\": \"https://api.github.com/teams/2403582/discussions/1\",\n \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1/comments/1\",\n \"node_id\": \"MDIxOlRlYW1EaXNjdXNzaW9uQ29tbWVudDE=\",\n \"number\": 1,\n \"updated_at\": \"2018-01-26T18:22:20Z\",\n \"url\": \"https://api.github.com/teams/2403582/discussions/1/comments/1\",\n \"reactions\": {\n  \"url\": \"https://api.github.com/teams/2403582/discussions/1/reactions\",\n  \"total_count\": 5,\n  \"+1\": 3,\n  \"-1\": 1,\n  \"laugh\": 0,\n  \"confused\": 0,\n  \"heart\": 1,\n  \"hooray\": 0,\n  \"eyes\": 1,\n  \"rocket\": 1\n }\n}"
						}
					]
				},
				{
					"name": "Delete a discussion comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"discussions",
								":discussion_number",
								"comments",
								":comment_number"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "discussion_number",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "comment_number",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "Deletes a comment on a team discussion. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/discussions/{discussion_number}/comments/{comment_number}`."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"discussions",
										":discussion_number",
										"comments",
										":comment_number"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "discussion_number"
										},
										{
											"key": "comment_number"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List child teams (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/teams?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"teams"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List child teams`](https://developer.github.com/v3/teams/#list-child-teams) endpoint."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/teams?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"teams"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/teams?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"teams"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Response if child teams exist",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/teams?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"teams"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 2,\n  \"node_id\": \"MDQ6VGVhbTI=\",\n  \"url\": \"https://api.github.com/teams/2\",\n  \"name\": \"Original Roster\",\n  \"slug\": \"original-roster\",\n  \"description\": \"Started it all.\",\n  \"privacy\": \"closed\",\n  \"permission\": \"admin\",\n  \"members_url\": \"https://api.github.com/teams/2/members{/member}\",\n  \"repositories_url\": \"https://api.github.com/teams/2/repos\",\n  \"parent\": {\n   \"id\": 1,\n   \"node_id\": \"MDQ6VGVhbTE=\",\n   \"url\": \"https://api.github.com/teams/1\",\n   \"html_url\": \"https://api.github.com/teams/justice-league\",\n   \"name\": \"Justice League\",\n   \"slug\": \"justice-league\",\n   \"description\": \"A great team.\",\n   \"privacy\": \"closed\",\n   \"permission\": \"admin\",\n   \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n   \"repositories_url\": \"https://api.github.com/teams/1/repos\"\n  },\n  \"html_url\": \"https://github.com/orgs/rails/teams/core\"\n }\n]"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/teams?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"teams"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List team repositories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/repos?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"repos"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								}
							]
						},
						"description": "Lists a team's repositories visible to the authenticated user.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/repos`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/repos?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"repos"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1296269,\n  \"node_id\": \"MDEwOlJlcG9zaXRvcnkxMjk2MjY5\",\n  \"name\": \"Hello-World\",\n  \"full_name\": \"octocat/Hello-World\",\n  \"owner\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"private\": false,\n  \"html_url\": \"https://github.com/octocat/Hello-World\",\n  \"description\": \"This your first repo!\",\n  \"fork\": false,\n  \"url\": \"https://api.github.com/repos/octocat/Hello-World\",\n  \"archive_url\": \"https://api.github.com/repos/octocat/Hello-World/{archive_format}{/ref}\",\n  \"assignees_url\": \"https://api.github.com/repos/octocat/Hello-World/assignees{/user}\",\n  \"blobs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/blobs{/sha}\",\n  \"branches_url\": \"https://api.github.com/repos/octocat/Hello-World/branches{/branch}\",\n  \"collaborators_url\": \"https://api.github.com/repos/octocat/Hello-World/collaborators{/collaborator}\",\n  \"comments_url\": \"https://api.github.com/repos/octocat/Hello-World/comments{/number}\",\n  \"commits_url\": \"https://api.github.com/repos/octocat/Hello-World/commits{/sha}\",\n  \"compare_url\": \"https://api.github.com/repos/octocat/Hello-World/compare/{base}...{head}\",\n  \"contents_url\": \"https://api.github.com/repos/octocat/Hello-World/contents/{+path}\",\n  \"contributors_url\": \"https://api.github.com/repos/octocat/Hello-World/contributors\",\n  \"deployments_url\": \"https://api.github.com/repos/octocat/Hello-World/deployments\",\n  \"downloads_url\": \"https://api.github.com/repos/octocat/Hello-World/downloads\",\n  \"events_url\": \"https://api.github.com/repos/octocat/Hello-World/events\",\n  \"forks_url\": \"https://api.github.com/repos/octocat/Hello-World/forks\",\n  \"git_commits_url\": \"https://api.github.com/repos/octocat/Hello-World/git/commits{/sha}\",\n  \"git_refs_url\": \"https://api.github.com/repos/octocat/Hello-World/git/refs{/sha}\",\n  \"git_tags_url\": \"https://api.github.com/repos/octocat/Hello-World/git/tags{/sha}\",\n  \"git_url\": \"git:github.com/octocat/Hello-World.git\",\n  \"issue_comment_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/comments{/number}\",\n  \"issue_events_url\": \"https://api.github.com/repos/octocat/Hello-World/issues/events{/number}\",\n  \"issues_url\": \"https://api.github.com/repos/octocat/Hello-World/issues{/number}\",\n  \"keys_url\": \"https://api.github.com/repos/octocat/Hello-World/keys{/key_id}\",\n  \"labels_url\": \"https://api.github.com/repos/octocat/Hello-World/labels{/name}\",\n  \"languages_url\": \"https://api.github.com/repos/octocat/Hello-World/languages\",\n  \"merges_url\": \"https://api.github.com/repos/octocat/Hello-World/merges\",\n  \"milestones_url\": \"https://api.github.com/repos/octocat/Hello-World/milestones{/number}\",\n  \"notifications_url\": \"https://api.github.com/repos/octocat/Hello-World/notifications{?since,all,participating}\",\n  \"pulls_url\": \"https://api.github.com/repos/octocat/Hello-World/pulls{/number}\",\n  \"releases_url\": \"https://api.github.com/repos/octocat/Hello-World/releases{/id}\",\n  \"ssh_url\": \"git@github.com:octocat/Hello-World.git\",\n  \"stargazers_url\": \"https://api.github.com/repos/octocat/Hello-World/stargazers\",\n  \"statuses_url\": \"https://api.github.com/repos/octocat/Hello-World/statuses/{sha}\",\n  \"subscribers_url\": \"https://api.github.com/repos/octocat/Hello-World/subscribers\",\n  \"subscription_url\": \"https://api.github.com/repos/octocat/Hello-World/subscription\",\n  \"tags_url\": \"https://api.github.com/repos/octocat/Hello-World/tags\",\n  \"teams_url\": \"https://api.github.com/repos/octocat/Hello-World/teams\",\n  \"trees_url\": \"https://api.github.com/repos/octocat/Hello-World/git/trees{/sha}\",\n  \"clone_url\": \"https://github.com/octocat/Hello-World.git\",\n  \"mirror_url\": \"git:git.example.com/octocat/Hello-World\",\n  \"hooks_url\": \"https://api.github.com/repos/octocat/Hello-World/hooks\",\n  \"svn_url\": \"https://svn.github.com/octocat/Hello-World\",\n  \"homepage\": \"https://github.com\",\n  \"language\": null,\n  \"forks_count\": 9,\n  \"stargazers_count\": 80,\n  \"watchers_count\": 80,\n  \"size\": 108,\n  \"default_branch\": \"master\",\n  \"open_issues_count\": 0,\n  \"is_template\": true,\n  \"topics\": [\n   \"octocat\",\n   \"atom\",\n   \"electron\",\n   \"api\"\n  ],\n  \"has_issues\": true,\n  \"has_projects\": true,\n  \"has_wiki\": true,\n  \"has_pages\": false,\n  \"has_downloads\": true,\n  \"archived\": false,\n  \"disabled\": false,\n  \"visibility\": \"public\",\n  \"pushed_at\": \"2011-01-26T19:06:43Z\",\n  \"created_at\": \"2011-01-26T19:01:12Z\",\n  \"updated_at\": \"2011-01-26T19:14:43Z\",\n  \"permissions\": {\n   \"admin\": false,\n   \"push\": false,\n   \"pull\": true\n  },\n  \"template_repository\": \"octocat/template\",\n  \"temp_clone_token\": \"ABTLWHOULUVAXGTRYU7OC2876QJ2O\",\n  \"delete_branch_on_merge\": true,\n  \"subscribers_count\": 42,\n  \"network_count\": 0,\n  \"license\": {\n   \"key\": \"mit\",\n   \"name\": \"MIT License\",\n   \"spdx_id\": \"MIT\",\n   \"url\": \"https://api.github.com/licenses/mit\",\n   \"node_id\": \"MDc6TGljZW5zZW1pdA==\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "List IdP groups for an organization",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/team-sync/groups?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"team-sync",
								"groups"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nList IdP groups available in an organization. You can limit your page results using the `per_page` parameter. GitHub generates a url-encoded `page` token using a cursor value for where the next page begins. For more information on cursor pagination, see \"[Offset and Cursor Pagination explained](https://dev.to/jackmarchant/offset-and-cursor-pagination-explained-b89).\"\n\nThe `per_page` parameter provides pagination for a list of IdP groups the authenticated user can access in an organization. For example, if the user `octocat` wants to see two groups per page in `octo-org` via cURL, it would look like this:"
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/team-sync/groups?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"team-sync",
										"groups"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groups\": [\n  {\n   \"group_id\": \"123\",\n   \"group_name\": \"Octocat admins\",\n   \"group_description\": \"The people who configure your octoworld.\"\n  },\n  {\n   \"group_id\": \"456\",\n   \"group_name\": \"Octocat docs members\",\n   \"group_description\": \"The people who make your octoworld come to life.\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Add or update team project permissions (Legacy)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"permission\": \"read\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/projects/:project_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"projects",
								":project_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "project_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Add or update team project permissions](https://developer.github.com/v3/teams/#add-or-update-team-project-permissions) endpoint.\n\nAdds an organization project to a team. To add a project to a team or update the team's permission on a project, the authenticated user must have `admin` permissions for the project. The project and team must be part of the same organization."
					},
					"response": [
						{
							"name": "Response if the project is not owned by the organization",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"read\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Must have admin rights to Repository.\",\n \"documentation_url\": \"https://developer.github.com/v3/teams/#add-or-update-team-project-permissions\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"read\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"read\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"read\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"permission\": \"read\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check team permissions for a project (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/projects/:project_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"projects",
								":project_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "project_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Check team permissions for a project](https://developer.github.com/v3/teams/#check-team-permissions-for-a-project) endpoint.\n\nChecks whether a team has `read`, `write`, or `admin` permissions for an organization project. The response includes projects inherited from a parent team."
					},
					"response": [
						{
							"name": "Response if project is not managed by this team",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"owner_url\": \"https://api.github.com/orgs/octocat\",\n \"url\": \"https://api.github.com/projects/1002605\",\n \"html_url\": \"https://github.com/orgs/api-playground/projects/1\",\n \"columns_url\": \"https://api.github.com/projects/1002605/columns\",\n \"id\": 1002605,\n \"node_id\": \"MDc6UHJvamVjdDEwMDI2MDU=\",\n \"name\": \"Organization Roadmap\",\n \"body\": \"High-level roadmap for the upcoming year.\",\n \"number\": 1,\n \"state\": \"open\",\n \"creator\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"created_at\": \"2011-04-11T20:09:31Z\",\n \"updated_at\": \"2014-03-04T18:58:10Z\",\n \"organization_permission\": \"write\",\n \"private\": false,\n \"permissions\": {\n  \"read\": true,\n  \"write\": true,\n  \"admin\": false\n }\n}"
						}
					]
				},
				{
					"name": "Remove a project from a team (Legacy)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/projects/:project_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"projects",
								":project_id"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								},
								{
									"key": "project_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [Remove a project from a team](https://developer.github.com/v3/teams/#remove-a-project-from-a-team) endpoint.\n\nRemoves an organization project from a team. An organization owner or a team maintainer can remove any project from the team. To remove a project from a team as an organization member, the authenticated user must have `read` access to both the team and project, or `admin` access to the team or project. **Note:** This endpoint removes the project from the team, but does not delete it."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/projects/:project_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"projects",
										":project_id"
									],
									"variable": [
										{
											"key": "team_id"
										},
										{
											"key": "project_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						}
					]
				},
				{
					"name": "Get team membership for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/memberships/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"memberships",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Team members will include the members of child teams.\n\nTo get a user's membership with a team, the team must be visible to the authenticated user.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/memberships/{username}`.\n\n**Note:** The `role` for organization owners returns as `maintainer`. For more information about `maintainer` roles, see [Create a team](https://developer.github.com/v3/teams/#create-a-team)."
					},
					"response": [
						{
							"name": "Response if user has no team membership",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/teams/1/memberships/octocat\",\n \"role\": \"member\",\n \"state\": \"active\"\n}"
						}
					]
				},
				{
					"name": "Add or update team membership for a user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\": \"maintainer\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/memberships/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"memberships",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nAdds an organization member to a team. An authenticated organization owner or team maintainer can add organization members to a team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\nAn organization owner can add someone who is not part of the team's organization to a team. When an organization owner adds someone to a team who is not an organization member, this endpoint will send an invitation to the person via email. This newly-created membership will be in the \"pending\" state until the person accepts the invitation, at which point the membership will transition to the \"active\" state and the user will be added as a member of the team.\n\nIf the user is already a member of the team, this endpoint will update the role of the team member's role. To update the membership of a team member, the authenticated user must be an organization owner or a team maintainer.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PUT /organizations/{org_id}/team/{team_id}/memberships/{username}`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"role\": \"maintainer\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"url\": \"https://api.github.com/teams/1/memberships/octocat\",\n \"role\": \"member\",\n \"state\": \"active\"\n}"
						},
						{
							"name": "Response if you attempt to add an organization to a team",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"role\": \"maintainer\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"Cannot add an organization as a member.\",\n \"errors\": [\n  {\n   \"code\": \"org\",\n   \"field\": \"user\",\n   \"resource\": \"TeamMember\"\n  }\n ]\n}"
						},
						{
							"name": "Response if team synchronization is set up",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"role\": \"maintainer\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Remove team membership for a user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/memberships/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"memberships",
								":username"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								},
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nTo remove a membership between a user and a team, the authenticated user must have 'admin' permissions to the team or be an owner of the organization that the team is associated with. Removing team membership does not delete the user, it just removes their membership from the team.\n\n**Note:** When you have team synchronization set up for a team with your organization's identity provider (IdP), you will see an error if you attempt to use the API for making changes to the team's membership. If you have access to manage group membership in your IdP, you can manage GitHub team membership through your identity provider, which automatically adds and removes team members in an organization. For more information, see \"[Synchronizing teams between your identity provider and GitHub](https://help.github.com/articles/synchronizing-teams-between-your-identity-provider-and-github/).\"\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}/memberships/{username}`."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response if team synchronization is set up",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/memberships/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"memberships",
										":username"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										},
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List team projects (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/projects?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"projects"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team projects`](https://developer.github.com/v3/teams/#list-team-projects) endpoint.\n\nLists the organization projects for a team."
					},
					"response": [
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/projects?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"projects"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/projects?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"projects"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/projects?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"projects"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"owner_url\": \"https://api.github.com/orgs/octocat\",\n  \"url\": \"https://api.github.com/projects/1002605\",\n  \"html_url\": \"https://github.com/orgs/api-playground/projects/1\",\n  \"columns_url\": \"https://api.github.com/projects/1002605/columns\",\n  \"id\": 1002605,\n  \"node_id\": \"MDc6UHJvamVjdDEwMDI2MDU=\",\n  \"name\": \"Organization Roadmap\",\n  \"body\": \"High-level roadmap for the upcoming year.\",\n  \"number\": 1,\n  \"state\": \"open\",\n  \"creator\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"created_at\": \"2011-04-11T20:09:31Z\",\n  \"updated_at\": \"2014-03-04T18:58:10Z\",\n  \"organization_permission\": \"write\",\n  \"private\": false,\n  \"permissions\": {\n   \"read\": true,\n   \"write\": true,\n   \"admin\": false\n  }\n }\n]"
						}
					]
				},
				{
					"name": "List pending team invitations",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/invitations?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"invitations"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								}
							]
						},
						"description": "The return hash contains a `role` field which refers to the Organization Invitation role and will be one of the following values: `direct_member`, `admin`, `billing_manager`, `hiring_manager`, or `reinstate`. If the invitee is not a GitHub member, the `login` field in the return hash will be `null`.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/invitations`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/invitations?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"invitations"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"login\": \"monalisa\",\n  \"email\": \"octocat@github.com\",\n  \"role\": \"direct_member\",\n  \"created_at\": \"2016-11-30T06:46:10-08:00\",\n  \"inviter\": {\n   \"login\": \"other_user\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/other_user_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/other_user\",\n   \"html_url\": \"https://github.com/other_user\",\n   \"followers_url\": \"https://api.github.com/users/other_user/followers\",\n   \"following_url\": \"https://api.github.com/users/other_user/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/other_user/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/other_user/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/other_user/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/other_user/orgs\",\n   \"repos_url\": \"https://api.github.com/users/other_user/repos\",\n   \"events_url\": \"https://api.github.com/users/other_user/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/other_user/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"team_count\": 2,\n  \"invitation_team_url\": \"https://api.github.com/organizations/2/invitations/1/teams\"\n }\n]"
						}
					]
				},
				{
					"name": "Update a team",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"new team name\",\n    \"description\": \"new team description\",\n    \"privacy\": \"closed\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								}
							]
						},
						"description": "To edit a team, the authenticated user must either be an organization owner or a team maintainer.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"new team name\",\n    \"description\": \"new team description\",\n    \"privacy\": \"closed\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDQ6VGVhbTE=\",\n \"url\": \"https://api.github.com/teams/1\",\n \"html_url\": \"https://api.github.com/teams/justice-league\",\n \"name\": \"Justice League\",\n \"slug\": \"justice-league\",\n \"description\": \"A great team.\",\n \"privacy\": \"closed\",\n \"permission\": \"admin\",\n \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n \"parent\": null,\n \"members_count\": 3,\n \"repos_count\": 10,\n \"created_at\": \"2017-07-14T16:53:42Z\",\n \"updated_at\": \"2017-08-17T12:37:15Z\",\n \"organization\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n  \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n  \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n  \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"description\": \"A great organization\",\n  \"name\": \"github\",\n  \"company\": \"GitHub\",\n  \"blog\": \"https://github.com/blog\",\n  \"location\": \"San Francisco\",\n  \"email\": \"octocat@github.com\",\n  \"is_verified\": true,\n  \"has_organization_projects\": true,\n  \"has_repository_projects\": true,\n  \"public_repos\": 2,\n  \"public_gists\": 1,\n  \"followers\": 20,\n  \"following\": 0,\n  \"html_url\": \"https://github.com/octocat\",\n  \"created_at\": \"2008-01-14T04:33:35Z\",\n  \"updated_at\": \"2017-08-17T12:37:15Z\",\n  \"type\": \"Organization\"\n }\n}"
						}
					]
				},
				{
					"name": "Delete a team",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								}
							]
						},
						"description": "To delete a team, the authenticated user must be an organization owner or team maintainer.\n\nIf you are an organization owner, deleting a parent team will delete all of its child teams as well.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `DELETE /organizations/{org_id}/team/{team_id}`."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get a team by name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								}
							]
						},
						"description": "Gets a team using the team's `slug`. GitHub generates the `slug` from the team `name`.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}`."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDQ6VGVhbTE=\",\n \"url\": \"https://api.github.com/teams/1\",\n \"html_url\": \"https://api.github.com/teams/justice-league\",\n \"name\": \"Justice League\",\n \"slug\": \"justice-league\",\n \"description\": \"A great team.\",\n \"privacy\": \"closed\",\n \"permission\": \"admin\",\n \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n \"parent\": null,\n \"members_count\": 3,\n \"repos_count\": 10,\n \"created_at\": \"2017-07-14T16:53:42Z\",\n \"updated_at\": \"2017-08-17T12:37:15Z\",\n \"organization\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n  \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n  \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n  \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"description\": \"A great organization\",\n  \"name\": \"github\",\n  \"company\": \"GitHub\",\n  \"blog\": \"https://github.com/blog\",\n  \"location\": \"San Francisco\",\n  \"email\": \"octocat@github.com\",\n  \"is_verified\": true,\n  \"has_organization_projects\": true,\n  \"has_repository_projects\": true,\n  \"public_repos\": 2,\n  \"public_gists\": 1,\n  \"followers\": 20,\n  \"following\": 0,\n  \"html_url\": \"https://github.com/octocat\",\n  \"created_at\": \"2008-01-14T04:33:35Z\",\n  \"updated_at\": \"2017-08-17T12:37:15Z\",\n  \"type\": \"Organization\"\n }\n}"
						}
					]
				},
				{
					"name": "List teams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists all teams in an organization that are visible to the authenticated user."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDQ6VGVhbTE=\",\n  \"url\": \"https://api.github.com/teams/1\",\n  \"html_url\": \"https://api.github.com/teams/justice-league\",\n  \"name\": \"Justice League\",\n  \"slug\": \"justice-league\",\n  \"description\": \"A great team.\",\n  \"privacy\": \"closed\",\n  \"permission\": \"admin\",\n  \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n  \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n  \"parent\": null\n }\n]"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Create a team",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Justice League\",\n    \"description\": \"A great team\",\n    \"permission\": \"admin\",\n    \"privacy\": \"closed\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "To create a team, the authenticated user must be a member or owner of `{org}`. By default, organization members can create teams. Organization owners can limit team creation to organization owners. For more information, see \"[Setting team creation permissions](https://help.github.com/en/articles/setting-team-creation-permissions-in-your-organization).\"\n\nWhen you create a new team, you automatically become a team maintainer without explicitly adding yourself to the optional array of `maintainers`. For more information, see \"[About teams](https://help.github.com/en/github/setting-up-and-managing-organizations-and-teams/about-teams)\"."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Justice League\",\n    \"description\": \"A great team\",\n    \"permission\": \"admin\",\n    \"privacy\": \"closed\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Justice League\",\n    \"description\": \"A great team\",\n    \"permission\": \"admin\",\n    \"privacy\": \"closed\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 1,\n \"node_id\": \"MDQ6VGVhbTE=\",\n \"url\": \"https://api.github.com/teams/1\",\n \"html_url\": \"https://api.github.com/teams/justice-league\",\n \"name\": \"Justice League\",\n \"slug\": \"justice-league\",\n \"description\": \"A great team.\",\n \"privacy\": \"closed\",\n \"permission\": \"admin\",\n \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n \"parent\": null,\n \"members_count\": 3,\n \"repos_count\": 10,\n \"created_at\": \"2017-07-14T16:53:42Z\",\n \"updated_at\": \"2017-08-17T12:37:15Z\",\n \"organization\": {\n  \"login\": \"github\",\n  \"id\": 1,\n  \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n  \"url\": \"https://api.github.com/orgs/github\",\n  \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n  \"events_url\": \"https://api.github.com/orgs/github/events\",\n  \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n  \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n  \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n  \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"description\": \"A great organization\",\n  \"name\": \"github\",\n  \"company\": \"GitHub\",\n  \"blog\": \"https://github.com/blog\",\n  \"location\": \"San Francisco\",\n  \"email\": \"octocat@github.com\",\n  \"is_verified\": true,\n  \"has_organization_projects\": true,\n  \"has_repository_projects\": true,\n  \"public_repos\": 2,\n  \"public_gists\": 1,\n  \"followers\": 20,\n  \"following\": 0,\n  \"html_url\": \"https://github.com/octocat\",\n  \"created_at\": \"2008-01-14T04:33:35Z\",\n  \"updated_at\": \"2017-08-17T12:37:15Z\",\n  \"type\": \"Organization\"\n }\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Justice League\",\n    \"description\": \"A great team\",\n    \"permission\": \"admin\",\n    \"privacy\": \"closed\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams"
									],
									"variable": [
										{
											"key": "org"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List child teams",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/teams?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"teams"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								}
							]
						},
						"description": "Lists the child teams of the team specified by `{team_slug}`.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/teams`."
					},
					"response": [
						{
							"name": "Response if child teams exist",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/teams?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"teams"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 2,\n  \"node_id\": \"MDQ6VGVhbTI=\",\n  \"url\": \"https://api.github.com/teams/2\",\n  \"name\": \"Original Roster\",\n  \"slug\": \"original-roster\",\n  \"description\": \"Started it all.\",\n  \"privacy\": \"closed\",\n  \"permission\": \"admin\",\n  \"members_url\": \"https://api.github.com/teams/2/members{/member}\",\n  \"repositories_url\": \"https://api.github.com/teams/2/repos\",\n  \"parent\": {\n   \"id\": 1,\n   \"node_id\": \"MDQ6VGVhbTE=\",\n   \"url\": \"https://api.github.com/teams/1\",\n   \"html_url\": \"https://api.github.com/teams/justice-league\",\n   \"name\": \"Justice League\",\n   \"slug\": \"justice-league\",\n   \"description\": \"A great team.\",\n   \"privacy\": \"closed\",\n   \"permission\": \"admin\",\n   \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n   \"repositories_url\": \"https://api.github.com/teams/1/repos\"\n  },\n  \"html_url\": \"https://github.com/orgs/rails/teams/core\"\n }\n]"
						}
					]
				},
				{
					"name": "List discussions (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/discussions?direction=desc&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"discussions"
							],
							"query": [
								{
									"key": "direction",
									"value": "desc",
									"description": "One of `asc` (ascending) or `desc` (descending)."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List discussions`](https://developer.github.com/v3/teams/discussions/#list-discussions) endpoint.\n\nList all discussions on a team's page. OAuth access tokens require the `read:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/discussions?direction=desc&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"discussions"
									],
									"query": [
										{
											"key": "direction",
											"value": "desc"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"author\": {\n   \"login\": \"octocat\",\n   \"id\": 1,\n   \"node_id\": \"MDQ6VXNlcjE=\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"gravatar_id\": \"\",\n   \"url\": \"https://api.github.com/users/octocat\",\n   \"html_url\": \"https://github.com/octocat\",\n   \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n   \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n   \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n   \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n   \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n   \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n   \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n   \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n   \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n   \"type\": \"User\",\n   \"site_admin\": false\n  },\n  \"body\": \"Hi! This is an area for us to collaborate as a team.\",\n  \"body_html\": \"<p>Hi! This is an area for us to collaborate as a team</p>\",\n  \"body_version\": \"0d495416a700fb06133c612575d92bfb\",\n  \"comments_count\": 0,\n  \"comments_url\": \"https://api.github.com/teams/2343027/discussions/1/comments\",\n  \"created_at\": \"2018-01-25T18:56:31Z\",\n  \"last_edited_at\": null,\n  \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1\",\n  \"node_id\": \"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\n  \"number\": 1,\n  \"pinned\": false,\n  \"private\": false,\n  \"team_url\": \"https://api.github.com/teams/2343027\",\n  \"title\": \"Our first team post\",\n  \"updated_at\": \"2018-01-25T18:56:31Z\",\n  \"url\": \"https://api.github.com/teams/2343027/discussions/1\",\n  \"reactions\": {\n   \"url\": \"https://api.github.com/teams/2343027/discussions/1/reactions\",\n   \"total_count\": 5,\n   \"+1\": 3,\n   \"-1\": 1,\n   \"laugh\": 0,\n   \"confused\": 0,\n   \"heart\": 1,\n   \"hooray\": 0,\n   \"eyes\": 1,\n   \"rocket\": 1\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Create a discussion (Legacy)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Our first team post\",\n    \"body\": \"Hi! This is an area for us to collaborate as a team.\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/discussions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"discussions"
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`Create a discussion`](https://developer.github.com/v3/teams/discussions/#create-a-discussion) endpoint.\n\nCreates a new discussion post on a team's page. OAuth access tokens require the `write:discussion` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/).\n\nThis endpoint triggers [notifications](https://help.github.com/articles/about-notifications/). Creating content too quickly using this endpoint may result in abuse rate limiting. See \"[Abuse rate limits](https://developer.github.com/v3/#abuse-rate-limits)\" and \"[Dealing with abuse rate limits](https://developer.github.com/v3/guides/best-practices-for-integrators/#dealing-with-abuse-rate-limits)\" for details."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"Our first team post\",\n    \"body\": \"Hi! This is an area for us to collaborate as a team.\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/discussions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"discussions"
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"author\": {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n },\n \"body\": \"Hi! This is an area for us to collaborate as a team.\",\n \"body_html\": \"<p>Hi! This is an area for us to collaborate as a team</p>\",\n \"body_version\": \"0d495416a700fb06133c612575d92bfb\",\n \"comments_count\": 0,\n \"comments_url\": \"https://api.github.com/teams/2343027/discussions/1/comments\",\n \"created_at\": \"2018-01-25T18:56:31Z\",\n \"last_edited_at\": null,\n \"html_url\": \"https://github.com/orgs/github/teams/justice-league/discussions/1\",\n \"node_id\": \"MDE0OlRlYW1EaXNjdXNzaW9uMQ==\",\n \"number\": 1,\n \"pinned\": false,\n \"private\": false,\n \"team_url\": \"https://api.github.com/teams/2343027\",\n \"title\": \"Our first team post\",\n \"updated_at\": \"2018-01-25T18:56:31Z\",\n \"url\": \"https://api.github.com/teams/2343027/discussions/1\",\n \"reactions\": {\n  \"url\": \"https://api.github.com/teams/2343027/discussions/1/reactions\",\n  \"total_count\": 5,\n  \"+1\": 3,\n  \"-1\": 1,\n  \"laugh\": 0,\n  \"confused\": 0,\n  \"heart\": 1,\n  \"hooray\": 0,\n  \"eyes\": 1,\n  \"rocket\": 1\n }\n}"
						}
					]
				},
				{
					"name": "List IdP groups for a team",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/team-sync/group-mappings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"team-sync",
								"group-mappings"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								}
							]
						},
						"description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nList IdP groups connected to a team on GitHub.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `GET /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/team-sync/group-mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"team-sync",
										"group-mappings"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groups\": [\n  {\n   \"group_id\": \"123\",\n   \"group_name\": \"Octocat admins\",\n   \"group_description\": \"The people who configure your octoworld.\"\n  },\n  {\n   \"group_id\": \"456\",\n   \"group_name\": \"Octocat docs members\",\n   \"group_description\": \"The people who make your octoworld come to life.\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Create or update IdP group connections",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"groups\": [\n        {\n            \"group_id\": \"123\",\n            \"group_name\": \"Octocat admins\",\n            \"group_description\": \"string\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/team-sync/group-mappings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orgs",
								":org",
								"teams",
								":team_slug",
								"team-sync",
								"group-mappings"
							],
							"variable": [
								{
									"key": "org",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "team_slug",
									"value": "aliquip sint",
									"description": "(Required) team_slug parameter"
								}
							]
						},
						"description": "Team synchronization is available for organizations using GitHub Enterprise Cloud. For more information, see [GitHub's products](https://help.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.\n\nCreates, updates, or removes a connection between a team and an IdP group. When adding groups to a team, you must include all new and existing groups to avoid replacing existing groups with the new ones. Specifying an empty `groups` array will remove all connections for a team.\n\n**Note:** You can also specify a team by `org_id` and `team_id` using the route `PATCH /organizations/{org_id}/team/{team_id}/team-sync/group-mappings`."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"groups\": [\n        {\n            \"group_id\": \"123\",\n            \"group_name\": \"Octocat admins\",\n            \"group_description\": \"string\"\n        }\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/orgs/:org/teams/:team_slug/team-sync/group-mappings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"orgs",
										":org",
										"teams",
										":team_slug",
										"team-sync",
										"group-mappings"
									],
									"variable": [
										{
											"key": "org"
										},
										{
											"key": "team_slug"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"groups\": [\n  {\n   \"group_id\": \"123\",\n   \"group_name\": \"Octocat admins\",\n   \"group_description\": \"The people who configure your octoworld.\"\n  },\n  {\n   \"group_id\": \"456\",\n   \"group_name\": \"Octocat docs members\",\n   \"group_description\": \"The people who make your octoworld come to life.\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "List team members (Legacy)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/teams/:team_id/members?role=maintainer&per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"teams",
								":team_id",
								"members"
							],
							"query": [
								{
									"key": "role",
									"value": "maintainer",
									"description": "Filters members returned by their role in the team. Can be one of:  \n\\* `member` - normal members of the team.  \n\\* `maintainer` - team maintainers.  \n\\* `all` - all members of the team."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "team_id",
									"value": "41891364",
									"description": "(Required) "
								}
							]
						},
						"description": "**Deprecation Notice:** This endpoint route is deprecated and will be removed from the Teams API. We recommend migrating your existing code to use the new [`List team members`](https://developer.github.com/v3/teams/members/#list-team-members) endpoint.\n\nTeam members will include the members of child teams."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/members?role=maintainer&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"members"
									],
									"query": [
										{
											"key": "role",
											"value": "maintainer"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/:team_id/members?role=maintainer&per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										":team_id",
										"members"
									],
									"query": [
										{
											"key": "role",
											"value": "maintainer"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "team_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List teams for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/teams?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"teams"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "List all of the teams across all of the organizations to which the authenticated user belongs. This method requires `user`, `repo`, or `read:org` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/) when authenticating via [OAuth](https://developer.github.com/apps/building-oauth-apps/)."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/teams?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"teams"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/teams?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"teams"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/teams?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"teams"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/teams?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"teams"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"node_id\": \"MDQ6VGVhbTE=\",\n  \"url\": \"https://api.github.com/teams/1\",\n  \"html_url\": \"https://api.github.com/teams/justice-league\",\n  \"name\": \"Justice League\",\n  \"slug\": \"justice-league\",\n  \"description\": \"A great team.\",\n  \"privacy\": \"closed\",\n  \"permission\": \"admin\",\n  \"members_url\": \"https://api.github.com/teams/1/members{/member}\",\n  \"repositories_url\": \"https://api.github.com/teams/1/repos\",\n  \"parent\": null,\n  \"members_count\": 3,\n  \"repos_count\": 10,\n  \"created_at\": \"2017-07-14T16:53:42Z\",\n  \"updated_at\": \"2017-08-17T12:37:15Z\",\n  \"organization\": {\n   \"login\": \"github\",\n   \"id\": 1,\n   \"node_id\": \"MDEyOk9yZ2FuaXphdGlvbjE=\",\n   \"url\": \"https://api.github.com/orgs/github\",\n   \"repos_url\": \"https://api.github.com/orgs/github/repos\",\n   \"events_url\": \"https://api.github.com/orgs/github/events\",\n   \"hooks_url\": \"https://api.github.com/orgs/github/hooks\",\n   \"issues_url\": \"https://api.github.com/orgs/github/issues\",\n   \"members_url\": \"https://api.github.com/orgs/github/members{/member}\",\n   \"public_members_url\": \"https://api.github.com/orgs/github/public_members{/member}\",\n   \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n   \"description\": \"A great organization\",\n   \"name\": \"github\",\n   \"company\": \"GitHub\",\n   \"blog\": \"https://github.com/blog\",\n   \"location\": \"San Francisco\",\n   \"email\": \"octocat@github.com\",\n   \"is_verified\": true,\n   \"has_organization_projects\": true,\n   \"has_repository_projects\": true,\n   \"public_repos\": 2,\n   \"public_gists\": 1,\n   \"followers\": 20,\n   \"following\": 0,\n   \"html_url\": \"https://github.com/octocat\",\n   \"created_at\": \"2008-01-14T04:33:35Z\",\n   \"updated_at\": \"2017-08-17T12:37:15Z\",\n   \"type\": \"Organization\"\n  }\n }\n]"
						}
					]
				}
			],
			"description": "Interact with GitHub Teams.",
			"protocolProfileBehavior": {}
		},
		{
			"name": "users",
			"item": [
				{
					"name": "List followers of the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/followers?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"followers"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Lists the people following the authenticated user."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/followers?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"followers"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/followers?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"followers"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/followers?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"followers"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/followers?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"followers"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List the people the authenticated user follows",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/following?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"following"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Lists the people who the authenticated user follows."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List GPG keys for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/gpg_keys?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"gpg_keys"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Lists the current user's GPG keys. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 3,\n  \"primary_key_id\": 2,\n  \"key_id\": \"3262EFF25BA0D270\",\n  \"public_key\": \"xsBNBFayYZ...\",\n  \"emails\": [\n   {\n    \"email\": \"mastahyeti@users.noreply.github.com\",\n    \"verified\": true\n   }\n  ],\n  \"subkeys\": [\n   {\n    \"id\": 4,\n    \"primary_key_id\": 3,\n    \"key_id\": \"4A595D4C72EE49C7\",\n    \"public_key\": \"zsBNBFayYZ...\",\n    \"emails\": [],\n    \"subkeys\": [],\n    \"can_sign\": false,\n    \"can_encrypt_comms\": true,\n    \"can_encrypt_storage\": true,\n    \"can_certify\": false,\n    \"created_at\": \"2016-03-24T11:31:04-06:00\",\n    \"expires_at\": \"2016-03-24T11:31:04-07:00\"\n   }\n  ],\n  \"can_sign\": true,\n  \"can_encrypt_comms\": false,\n  \"can_encrypt_storage\": false,\n  \"can_certify\": true,\n  \"created_at\": \"2016-03-24T11:31:04-06:00\",\n  \"expires_at\": \"2016-03-24T11:31:04-07:00\",\n  \"raw_key\": \"string\"\n }\n]"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Create a GPG key for the authenticated user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"armored_public_key\": \"exercitation enim repre\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/gpg_keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"gpg_keys"
							]
						},
						"description": "Adds a GPG key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"armored_public_key\": \"exercitation enim repre\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"armored_public_key\": \"exercitation enim repre\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 3,\n \"primary_key_id\": 2,\n \"key_id\": \"3262EFF25BA0D270\",\n \"public_key\": \"xsBNBFayYZ...\",\n \"emails\": [\n  {\n   \"email\": \"mastahyeti@users.noreply.github.com\",\n   \"verified\": true\n  }\n ],\n \"subkeys\": [\n  {\n   \"id\": 4,\n   \"primary_key_id\": 3,\n   \"key_id\": \"4A595D4C72EE49C7\",\n   \"public_key\": \"zsBNBFayYZ...\",\n   \"emails\": [],\n   \"subkeys\": [],\n   \"can_sign\": false,\n   \"can_encrypt_comms\": true,\n   \"can_encrypt_storage\": true,\n   \"can_certify\": false,\n   \"created_at\": \"2016-03-24T11:31:04-06:00\",\n   \"expires_at\": \"2016-03-24T11:31:04-07:00\"\n  }\n ],\n \"can_sign\": true,\n \"can_encrypt_comms\": false,\n \"can_encrypt_storage\": false,\n \"can_certify\": true,\n \"created_at\": \"2016-03-24T11:31:04-06:00\",\n \"expires_at\": \"2016-03-24T11:31:04-07:00\",\n \"raw_key\": \"\\\"-----BEGIN PGP PUBLIC KEY BLOCK-----\\\\nVersion: GnuPG v2\\\\n\\\\nmQENBFayYZ0BCAC4hScoJXXpyR+MXGcrBxElqw3FzCVvkViuyeko+Jp76QJhg8kr\\\\nucRTxbnOoHfda/FmilEa/wxf9ch5/PSrrL26FxEoPHhJolp8fnIDLQeITn94NYdB\\\\nZtnnEKslpPrG97qSUWIchvyqCPtvOb8+8fWvGx9K/ZWcEEdh1X8+WFR2jMENMeoX\\\\nwxHWQoPnS7LpX/85/M7VUcJxvDVfv+eHsnQupmE5bGarKNih0oMe3LbdN3qA5PTz\\\\nSCm6Iudar1VsQ+xTz08ymL7t4pnEtLguQ7EyatFHCjxNblv5RzxoL0tDgN3HqoDz\\\\nc7TEA+q4RtDQl9amcvQ95emnXmZ974u7UkYdABEBAAG0HlNvbWUgVXNlciA8c29t\\\\nZXVzZXJAZ21haWwuY29tPokBOAQTAQIAIgUCVrJhnQIbAwYLCQgHAwIGFQgCCQoL\\\\nBBYCAwECHgECF4AACgkQMmLv8lug0nAViQgArWjI55+7p48URr2z9Jvak+yrBTx1\\\\nzkufltQAnHTJkq+Kl9dySSmTnOop8o3rE4++IOpYV5Y36PkKf9EZMk4n1RQiDPKE\\\\nAFtRVTkRaoWzOir9KQXJPfhKrl01j/QzY+utfiMvUoBJZ9ybq8Pa885SljW9lbaX\\\\nIYw+hl8ZdJ2KStvGrEyfQvRyq3aN5c9TV//4BdGnwx7Qabq/U+G18lizG6f/yq15\\\\ned7t0KELaCfeKPvytp4VE9/z/Ksah/h3+Qilx07/oG2Ae5kC1bEC9coD/ogPUhbv\\\\nb2bsBIoY9E9YwsLoif2lU+o1t76zLgUktuNscRRUKobW028H1zuFS/XQhrkBDQRW\\\\nsmGdAQgApnyyv3i144OLYy0O4UKQxd3e10Y3WpDwfnGIBefAI1m7RxnUxBag/DsU\\\\n7gi9qLEC4VHSfq4eiNfr1LJOyCL2edTgCWFgBhVjbXjZe6YAOrAnhxwCErnN0Y7N\\\\n6s8wVh9fObSOyf8ZE6G7JeKpcq9Q6gd/KxagfD48a1v+fyRHpyQc6J9pUEmtrDJ7\\\\nBjmsd2VWzLBvNWdHyxDNtZweIaqIO9VUYYpr1mtTliNBOZLUelmgrt7HBRcJpWMA\\\\nS8muVVbuP5MK0trLBq/JB8qUH3zRzB/PhMgzmkIfjEK1VYDWm4E8DYyTWEJcHqkb\\\\neqFsNjrIlwPaA122BWC6gUOPwwH+oQARAQABiQEfBBgBAgAJBQJWsmGdAhsMAAoJ\\\\nEDJi7/JboNJwAyAIALd4xcdmGbZD98gScJzqwzkOMcO8zFHqHNvJ42xIFvGny7c0\\\\n1Rx7iyrdypOby5AxE+viQcjG4rpLZW/xKYBNGrCfDyQO7511I0v8x20EICMlMfD/\\\\nNrWQCzesEPcUlKTP07d+sFyP8AyseOidbzY/92CpskTgdSBjY/ntLSaoknl/fjJE\\\\nQM8OkPqU7IraO1Jzzdnm20d5PZL9+PIwIWdSTedU/vBMTJyNcoqvSfKf1wNC66XP\\\\nhqfYgXJE564AdWZKA3C0IyCqiv+LHwxLnUHio1a4/r91C8KPzxs6tGxRDjXLd7ms\\\\nuYFGWymiUGOE/giHlcxdYcHzwLnPDliMQOLiTkK5AQ0EVuxMygEIAOD+bW1cDTmE\\\\nBxh5JECoqeHuwgl6DlLhnubWPkQ4ZeRzBRAsFcEJQlwlJjrzFDicL+lnm6Qq4tt0\\\\n560TwHdf15/AKTZIZu7H25axvGNzgeaUkJEJdYAq9zTKWwX7wKyzBszi485nQg97\\\\nMfAqwhMpDW0Qqf8+7Ug+WEmfBSGv9uL3aQC6WEeIsHfri0n0n8v4XgwhfShXguxO\\\\nCsOztEsuW7WWKW9P4TngKKv4lCHdPlV6FwxeMzODBJvc2fkHVHnqc0PqszJ5xcF8\\\\n6gZCpMM027SbpeYWCAD5zwJyYP9ntfO1p2HjnQ1dZaP9FeNcO7uIV1Lnd1eGCu6I\\\\nsrVp5k1f3isAEQEAAYkCPgQYAQIACQUCVuxMygIbAgEpCRAyYu/yW6DScMBdIAQZ\\\\nAQIABgUCVuxMygAKCRCKohN4dhq2b4tcCACHxmOHVXNpu47OvUGYQydLgMACUlXN\\\\nlj+HfE0VReqShxdDmpasAY9IRpuMB2RsGK8GbNP+4SlOlAiPf5SMhS7nZNkNDgQQ\\\\naZ3HFpgrFmFwmE10BKT4iQtoxELLM57z0qGOAfTsEjWFQa4sF+6IHAQR/ptkdkkI\\\\nBUEXiMnAwVwBysLIJiLO8qdjB6qp52QkT074JVrwywT/P+DkMfC2k4r/AfEbf6eF\\\\ndmPDuPk6KD87+hJZsSa5MaMUBQVvRO/mgEkhJRITVu58eWGaBOcQJ8gqurhCqM5P\\\\nDfUA4TJ7wiqM6sS764vV1rOioTTXkszzhClQqET7hPVnVQjenYgv0EZHNyQH/1f1\\\\n/CYqvV1vFjM9vJjMbxXsATCkZe6wvBVKD8vLsJAr8N+onKQz+4OPc3kmKq7aESu3\\\\nCi/iuie5KKVwnuNhr9AzT61vEkKxwHcVFEvHB77F6ZAAInhRvjzmQbD2dlPLLQCC\\\\nqDj71ODSSAPTEmUy6969bgD9PfWei7kNkBIx7s3eBv8yzytSc2EcuUgopqFazquw\\\\nFs1+tqGHjBvQfTo6bqbJjp/9Ci2pvde3ElV2rAgUlb3lqXyXjRDqrXosh5GcRPQj\\\\nK8Nhj1BNhnrCVskE4BP0LYbOHuzgm86uXwGCFsY+w2VOsSm16Jx5GHyG5S5WU3+D\\\\nIts/HFYRLiFgDLmTlxo=\\\\n=+OzK\\\\n-----END PGP PUBLIC KEY BLOCK-----\\\"\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"armored_public_key\": \"exercitation enim repre\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"armored_public_key\": \"exercitation enim repre\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"armored_public_key\": \"exercitation enim repre\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"armored_public_key\": \"exercitation enim repre\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Delete a public SSH key for the authenticated user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/keys/:key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"keys",
								":key_id"
							],
							"variable": [
								{
									"key": "key_id",
									"value": "41891364",
									"description": "(Required) key_id parameter"
								}
							]
						},
						"description": "Removes a public SSH key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "key_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "key_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "key_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get a public SSH key for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/keys/:key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"keys",
								":key_id"
							],
							"variable": [
								{
									"key": "key_id",
									"value": "41891364",
									"description": "(Required) key_id parameter"
								}
							]
						},
						"description": "View extended details for a single public SSH key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "key_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"key_id\": \"012345678912345678\",\n \"key\": \"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234\",\n \"id\": 2,\n \"url\": \"https://api.github.com/user/keys/2\",\n \"title\": \"ssh-rsa AAAAB3NzaC1yc2EAAA\",\n \"created_at\": \"2020-06-11T21:31:57Z\",\n \"verified\": false,\n \"read_only\": false\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "key_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Get a GPG key for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/gpg_keys/:gpg_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"gpg_keys",
								":gpg_key_id"
							],
							"variable": [
								{
									"key": "gpg_key_id",
									"value": "41891364",
									"description": "(Required) gpg_key_id parameter"
								}
							]
						},
						"description": "View extended details for a single GPG key. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys/:gpg_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys",
										":gpg_key_id"
									],
									"variable": [
										{
											"key": "gpg_key_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys/:gpg_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys",
										":gpg_key_id"
									],
									"variable": [
										{
											"key": "gpg_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys/:gpg_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys",
										":gpg_key_id"
									],
									"variable": [
										{
											"key": "gpg_key_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys/:gpg_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys",
										":gpg_key_id"
									],
									"variable": [
										{
											"key": "gpg_key_id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 3,\n \"primary_key_id\": 2,\n \"key_id\": \"3262EFF25BA0D270\",\n \"public_key\": \"xsBNBFayYZ...\",\n \"emails\": [\n  {\n   \"email\": \"mastahyeti@users.noreply.github.com\",\n   \"verified\": true\n  }\n ],\n \"subkeys\": [\n  {\n   \"id\": 4,\n   \"primary_key_id\": 3,\n   \"key_id\": \"4A595D4C72EE49C7\",\n   \"public_key\": \"zsBNBFayYZ...\",\n   \"emails\": [],\n   \"subkeys\": [],\n   \"can_sign\": false,\n   \"can_encrypt_comms\": true,\n   \"can_encrypt_storage\": true,\n   \"can_certify\": false,\n   \"created_at\": \"2016-03-24T11:31:04-06:00\",\n   \"expires_at\": \"2016-03-24T11:31:04-07:00\"\n  }\n ],\n \"can_sign\": true,\n \"can_encrypt_comms\": false,\n \"can_encrypt_storage\": false,\n \"can_certify\": true,\n \"created_at\": \"2016-03-24T11:31:04-06:00\",\n \"expires_at\": \"2016-03-24T11:31:04-07:00\",\n \"raw_key\": \"\\\"-----BEGIN PGP PUBLIC KEY BLOCK-----\\\\nVersion: GnuPG v2\\\\n\\\\nmQENBFayYZ0BCAC4hScoJXXpyR+MXGcrBxElqw3FzCVvkViuyeko+Jp76QJhg8kr\\\\nucRTxbnOoHfda/FmilEa/wxf9ch5/PSrrL26FxEoPHhJolp8fnIDLQeITn94NYdB\\\\nZtnnEKslpPrG97qSUWIchvyqCPtvOb8+8fWvGx9K/ZWcEEdh1X8+WFR2jMENMeoX\\\\nwxHWQoPnS7LpX/85/M7VUcJxvDVfv+eHsnQupmE5bGarKNih0oMe3LbdN3qA5PTz\\\\nSCm6Iudar1VsQ+xTz08ymL7t4pnEtLguQ7EyatFHCjxNblv5RzxoL0tDgN3HqoDz\\\\nc7TEA+q4RtDQl9amcvQ95emnXmZ974u7UkYdABEBAAG0HlNvbWUgVXNlciA8c29t\\\\nZXVzZXJAZ21haWwuY29tPokBOAQTAQIAIgUCVrJhnQIbAwYLCQgHAwIGFQgCCQoL\\\\nBBYCAwECHgECF4AACgkQMmLv8lug0nAViQgArWjI55+7p48URr2z9Jvak+yrBTx1\\\\nzkufltQAnHTJkq+Kl9dySSmTnOop8o3rE4++IOpYV5Y36PkKf9EZMk4n1RQiDPKE\\\\nAFtRVTkRaoWzOir9KQXJPfhKrl01j/QzY+utfiMvUoBJZ9ybq8Pa885SljW9lbaX\\\\nIYw+hl8ZdJ2KStvGrEyfQvRyq3aN5c9TV//4BdGnwx7Qabq/U+G18lizG6f/yq15\\\\ned7t0KELaCfeKPvytp4VE9/z/Ksah/h3+Qilx07/oG2Ae5kC1bEC9coD/ogPUhbv\\\\nb2bsBIoY9E9YwsLoif2lU+o1t76zLgUktuNscRRUKobW028H1zuFS/XQhrkBDQRW\\\\nsmGdAQgApnyyv3i144OLYy0O4UKQxd3e10Y3WpDwfnGIBefAI1m7RxnUxBag/DsU\\\\n7gi9qLEC4VHSfq4eiNfr1LJOyCL2edTgCWFgBhVjbXjZe6YAOrAnhxwCErnN0Y7N\\\\n6s8wVh9fObSOyf8ZE6G7JeKpcq9Q6gd/KxagfD48a1v+fyRHpyQc6J9pUEmtrDJ7\\\\nBjmsd2VWzLBvNWdHyxDNtZweIaqIO9VUYYpr1mtTliNBOZLUelmgrt7HBRcJpWMA\\\\nS8muVVbuP5MK0trLBq/JB8qUH3zRzB/PhMgzmkIfjEK1VYDWm4E8DYyTWEJcHqkb\\\\neqFsNjrIlwPaA122BWC6gUOPwwH+oQARAQABiQEfBBgBAgAJBQJWsmGdAhsMAAoJ\\\\nEDJi7/JboNJwAyAIALd4xcdmGbZD98gScJzqwzkOMcO8zFHqHNvJ42xIFvGny7c0\\\\n1Rx7iyrdypOby5AxE+viQcjG4rpLZW/xKYBNGrCfDyQO7511I0v8x20EICMlMfD/\\\\nNrWQCzesEPcUlKTP07d+sFyP8AyseOidbzY/92CpskTgdSBjY/ntLSaoknl/fjJE\\\\nQM8OkPqU7IraO1Jzzdnm20d5PZL9+PIwIWdSTedU/vBMTJyNcoqvSfKf1wNC66XP\\\\nhqfYgXJE564AdWZKA3C0IyCqiv+LHwxLnUHio1a4/r91C8KPzxs6tGxRDjXLd7ms\\\\nuYFGWymiUGOE/giHlcxdYcHzwLnPDliMQOLiTkK5AQ0EVuxMygEIAOD+bW1cDTmE\\\\nBxh5JECoqeHuwgl6DlLhnubWPkQ4ZeRzBRAsFcEJQlwlJjrzFDicL+lnm6Qq4tt0\\\\n560TwHdf15/AKTZIZu7H25axvGNzgeaUkJEJdYAq9zTKWwX7wKyzBszi485nQg97\\\\nMfAqwhMpDW0Qqf8+7Ug+WEmfBSGv9uL3aQC6WEeIsHfri0n0n8v4XgwhfShXguxO\\\\nCsOztEsuW7WWKW9P4TngKKv4lCHdPlV6FwxeMzODBJvc2fkHVHnqc0PqszJ5xcF8\\\\n6gZCpMM027SbpeYWCAD5zwJyYP9ntfO1p2HjnQ1dZaP9FeNcO7uIV1Lnd1eGCu6I\\\\nsrVp5k1f3isAEQEAAYkCPgQYAQIACQUCVuxMygIbAgEpCRAyYu/yW6DScMBdIAQZ\\\\nAQIABgUCVuxMygAKCRCKohN4dhq2b4tcCACHxmOHVXNpu47OvUGYQydLgMACUlXN\\\\nlj+HfE0VReqShxdDmpasAY9IRpuMB2RsGK8GbNP+4SlOlAiPf5SMhS7nZNkNDgQQ\\\\naZ3HFpgrFmFwmE10BKT4iQtoxELLM57z0qGOAfTsEjWFQa4sF+6IHAQR/ptkdkkI\\\\nBUEXiMnAwVwBysLIJiLO8qdjB6qp52QkT074JVrwywT/P+DkMfC2k4r/AfEbf6eF\\\\ndmPDuPk6KD87+hJZsSa5MaMUBQVvRO/mgEkhJRITVu58eWGaBOcQJ8gqurhCqM5P\\\\nDfUA4TJ7wiqM6sS764vV1rOioTTXkszzhClQqET7hPVnVQjenYgv0EZHNyQH/1f1\\\\n/CYqvV1vFjM9vJjMbxXsATCkZe6wvBVKD8vLsJAr8N+onKQz+4OPc3kmKq7aESu3\\\\nCi/iuie5KKVwnuNhr9AzT61vEkKxwHcVFEvHB77F6ZAAInhRvjzmQbD2dlPLLQCC\\\\nqDj71ODSSAPTEmUy6969bgD9PfWei7kNkBIx7s3eBv8yzytSc2EcuUgopqFazquw\\\\nFs1+tqGHjBvQfTo6bqbJjp/9Ci2pvde3ElV2rAgUlb3lqXyXjRDqrXosh5GcRPQj\\\\nK8Nhj1BNhnrCVskE4BP0LYbOHuzgm86uXwGCFsY+w2VOsSm16Jx5GHyG5S5WU3+D\\\\nIts/HFYRLiFgDLmTlxo=\\\\n=+OzK\\\\n-----END PGP PUBLIC KEY BLOCK-----\\\"\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys/:gpg_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys",
										":gpg_key_id"
									],
									"variable": [
										{
											"key": "gpg_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "Delete a GPG key for the authenticated user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/gpg_keys/:gpg_key_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"gpg_keys",
								":gpg_key_id"
							],
							"variable": [
								{
									"key": "gpg_key_id",
									"value": "41891364",
									"description": "(Required) gpg_key_id parameter"
								}
							]
						},
						"description": "Removes a GPG key from the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `admin:gpg_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys/:gpg_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys",
										":gpg_key_id"
									],
									"variable": [
										{
											"key": "gpg_key_id"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys/:gpg_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys",
										":gpg_key_id"
									],
									"variable": [
										{
											"key": "gpg_key_id"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys/:gpg_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys",
										":gpg_key_id"
									],
									"variable": [
										{
											"key": "gpg_key_id"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys/:gpg_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys",
										":gpg_key_id"
									],
									"variable": [
										{
											"key": "gpg_key_id"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys/:gpg_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys",
										":gpg_key_id"
									],
									"variable": [
										{
											"key": "gpg_key_id"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/gpg_keys/:gpg_key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"gpg_keys",
										":gpg_key_id"
									],
									"variable": [
										{
											"key": "gpg_key_id"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add an email address for the authenticated user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"emails\": [\n        \"octocat@github.com\",\n        \"mona@github.com\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/emails",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"emails"
							]
						},
						"description": "This endpoint is accessible with the `user` scope."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"emails\": [\n        \"octocat@github.com\",\n        \"mona@github.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"emails\": [\n        \"octocat@github.com\",\n        \"mona@github.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"emails\": [\n        \"octocat@github.com\",\n        \"mona@github.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"emails\": [\n        \"octocat@github.com\",\n        \"mona@github.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"emails\": [\n        \"octocat@github.com\",\n        \"mona@github.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"emails\": [\n        \"octocat@github.com\",\n        \"mona@github.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"email\": \"octocat@octocat.org\",\n  \"primary\": false,\n  \"verified\": false,\n  \"visibility\": \"public\"\n },\n {\n  \"email\": \"octocat@github.com\",\n  \"primary\": false,\n  \"verified\": false,\n  \"visibility\": null\n },\n {\n  \"email\": \"mona@github.com\",\n  \"primary\": false,\n  \"verified\": false,\n  \"visibility\": null\n }\n]"
						}
					]
				},
				{
					"name": "Delete an email address for the authenticated user",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"emails\": [\n        \"username@example.com\",\n        \"username@example.com\"\n    ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/emails",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"emails"
							]
						},
						"description": "This endpoint is accessible with the `user` scope."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"emails\": [\n        \"username@example.com\",\n        \"username@example.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"emails\": [\n        \"username@example.com\",\n        \"username@example.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"emails\": [\n        \"username@example.com\",\n        \"username@example.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"emails\": [\n        \"username@example.com\",\n        \"username@example.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"emails\": [\n        \"username@example.com\",\n        \"username@example.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"emails\": [\n        \"username@example.com\",\n        \"username@example.com\"\n    ]\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List email addresses for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/emails?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"emails"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Lists all of your email addresses, and specifies which one is visible to the public. This endpoint is accessible with the `user:email` scope."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/emails?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/emails?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/emails?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/emails?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/emails?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"email\": \"octocat@github.com\",\n  \"verified\": true,\n  \"primary\": true,\n  \"visibility\": \"public\"\n }\n]"
						}
					]
				},
				{
					"name": "Follow a user",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/following/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"following",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Note that you'll need to set `Content-Length` to zero when calling out to this endpoint. For more information, see \"[HTTP verbs](https://developer.github.com/v3/#http-verbs).\"\n\nFollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope."
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Unfollow a user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/following/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"following",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Unfollowing a user requires the user to be logged in and authenticated with basic auth or OAuth with the `user:follow` scope."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check if a person is followed by the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/following/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"following",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Response if the person is not followed by the authenticated user",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Response if the person is followed by the authenticated user",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/following/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"following",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Block a user",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/blocks/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"blocks",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Unblock a user",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/blocks/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"blocks",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						}
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Empty response",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Check if a user is blocked by the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/blocks/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"blocks",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "If the user is blocked:\n\nIf the user is not blocked:"
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "If the user is not blocked:",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "If the user is blocked:",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "List public email addresses for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/public_emails?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"public_emails"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Lists your publicly visible email address, which you can set with the [Set primary email visibility for the authenticated user](https://developer.github.com/v3/users/emails/#set-primary-email-visibility-for-the-authenticated-user) endpoint. This endpoint is accessible with the `user:email` scope."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/public_emails?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"public_emails"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/public_emails?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"public_emails"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/public_emails?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"public_emails"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"email\": \"octocat@github.com\",\n  \"verified\": true,\n  \"primary\": true,\n  \"visibility\": \"public\"\n }\n]"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/public_emails?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"public_emails"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/public_emails?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"public_emails"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List the people a user follows",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/following?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"following"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists the people who the specified user follows."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/following?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"following"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						}
					]
				},
				{
					"name": "List users blocked by the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/blocks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"blocks"
							]
						},
						"description": "List the users you've blocked on your personal account."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Preview Header Missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks"
									]
								}
							},
							"status": "Unsupported Media Type",
							"code": 415,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"tempor laborum\",\n \"documentation_url\": \"dolor sit\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/blocks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"blocks"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						}
					]
				},
				{
					"name": "Get a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Provides publicly available information about someone with a GitHub account.\n\nGitHub Apps with the `Plan` user permission can use this endpoint to retrieve information about a user's GitHub plan. The GitHub App must be authenticated as a user. See \"[Identifying and authorizing users for GitHub Apps](https://developer.github.com/apps/building-github-apps/identifying-and-authorizing-users-for-github-apps/)\" for details about authentication. For an example response, see \"[Response with GitHub plan information](https://developer.github.com/v3/users/#response-with-github-plan-information).\"\n\nThe `email` key in the following response is the publicly visible email address from your GitHub [profile page](https://github.com/settings/profile). When setting up your profile, you can select a primary email address to be “public” which provides an email entry for this endpoint. If you do not set a public email address for `email`, then it will have a value of `null`. You only see publicly visible email addresses when authenticated with GitHub. For more information, see [Authentication](https://developer.github.com/v3/#authentication).\n\nThe Emails API enables you to list all of your email addresses, and toggle a primary email to be visible publicly. For more information, see \"[Emails API](https://developer.github.com/v3/users/emails/)\"."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"login\": \"octocat\",\n \"id\": 1,\n \"node_id\": \"MDQ6VXNlcjE=\",\n \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n \"gravatar_id\": \"\",\n \"url\": \"https://api.github.com/users/octocat\",\n \"html_url\": \"https://github.com/octocat\",\n \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n \"type\": \"User\",\n \"site_admin\": false,\n \"name\": \"monalisa octocat\",\n \"company\": \"GitHub\",\n \"blog\": \"https://github.com/blog\",\n \"location\": \"San Francisco\",\n \"email\": \"octocat@github.com\",\n \"hireable\": false,\n \"bio\": \"There once was...\",\n \"twitter_username\": \"monatheoctocat\",\n \"public_repos\": 2,\n \"public_gists\": 1,\n \"followers\": 20,\n \"following\": 0,\n \"created_at\": \"2008-01-14T04:33:35Z\",\n \"updated_at\": \"2008-01-14T04:33:35Z\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List GPG keys for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/gpg_keys?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"gpg_keys"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists the GPG keys for a user. This information is accessible by anyone."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/gpg_keys?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"gpg_keys"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 3,\n  \"primary_key_id\": 2,\n  \"key_id\": \"3262EFF25BA0D270\",\n  \"public_key\": \"xsBNBFayYZ...\",\n  \"emails\": [\n   {\n    \"email\": \"mastahyeti@users.noreply.github.com\",\n    \"verified\": true\n   }\n  ],\n  \"subkeys\": [\n   {\n    \"id\": 4,\n    \"primary_key_id\": 3,\n    \"key_id\": \"4A595D4C72EE49C7\",\n    \"public_key\": \"zsBNBFayYZ...\",\n    \"emails\": [],\n    \"subkeys\": [],\n    \"can_sign\": false,\n    \"can_encrypt_comms\": true,\n    \"can_encrypt_storage\": true,\n    \"can_certify\": false,\n    \"created_at\": \"2016-03-24T11:31:04-06:00\",\n    \"expires_at\": \"2016-03-24T11:31:04-07:00\"\n   }\n  ],\n  \"can_sign\": true,\n  \"can_encrypt_comms\": false,\n  \"can_encrypt_storage\": false,\n  \"can_certify\": true,\n  \"created_at\": \"2016-03-24T11:31:04-06:00\",\n  \"expires_at\": \"2016-03-24T11:31:04-07:00\",\n  \"raw_key\": \"string\"\n }\n]"
						}
					]
				},
				{
					"name": "Check if a user follows another user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/following/:target_user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"following",
								":target_user"
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								},
								{
									"key": "target_user",
									"value": "aliquip sint",
									"description": "(Required) target_user parameter"
								}
							]
						}
					},
					"response": [
						{
							"name": "Response if the user does not follow the target user",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/following/:target_user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"following",
										":target_user"
									],
									"variable": [
										{
											"key": "username"
										},
										{
											"key": "target_user"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Response if the user follows the target user",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/following/:target_user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"following",
										":target_user"
									],
									"variable": [
										{
											"key": "username"
										},
										{
											"key": "target_user"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Create a public SSH key for the authenticated user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"key\": \"ecdsa-sha2-nistp384 \",\n    \"title\": \"Personal MacBook Air\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"keys"
							]
						},
						"description": "Adds a public SSH key to the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth, or OAuth with at least `write:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"ecdsa-sha2-nistp384 \",\n    \"title\": \"Personal MacBook Air\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"ecdsa-sha2-nistp384 \",\n    \"title\": \"Personal MacBook Air\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"ecdsa-sha2-nistp384 \",\n    \"title\": \"Personal MacBook Air\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"ecdsa-sha2-nistp384 \",\n    \"title\": \"Personal MacBook Air\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"ecdsa-sha2-nistp384 \",\n    \"title\": \"Personal MacBook Air\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"key_id\": \"012345678912345678\",\n \"key\": \"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234\",\n \"id\": 2,\n \"url\": \"https://api.github.com/user/keys/2\",\n \"title\": \"ssh-rsa AAAAB3NzaC1yc2EAAA\",\n \"created_at\": \"2020-06-11T21:31:57Z\",\n \"verified\": false,\n \"read_only\": false\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"key\": \"ecdsa-sha2-nistp384 \",\n    \"title\": \"Personal MacBook Air\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List public SSH keys for the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/keys?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"keys"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							]
						},
						"description": "Lists the public SSH keys for the authenticated user's GitHub account. Requires that you are authenticated via Basic Auth or via OAuth with at least `read:public_key` [scope](https://developer.github.com/apps/building-oauth-apps/understanding-scopes-for-oauth-apps/)."
					},
					"response": [
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"key_id\": \"012345678912345678\",\n  \"key\": \"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJyvv1234\",\n  \"id\": 2,\n  \"url\": \"https://api.github.com/user/keys/2\",\n  \"title\": \"ssh-rsa AAAAB3NzaC1yc2EAAA\",\n  \"created_at\": \"2020-06-11T21:31:57Z\",\n  \"verified\": false,\n  \"read_only\": false\n },\n {\n  \"key_id\": \"012345678912345608\",\n  \"key\": \"2Sg8iYjAxxmI2LvUXpJjkYrMxURPc8r+dB7TJy931234\",\n  \"id\": 3,\n  \"url\": \"https://api.github.com/user/keys/3\",\n  \"title\": \"ssh-rsa AAAAB3NzaC1yc2EAAB\",\n  \"created_at\": \"2020-07-11T21:31:57Z\",\n  \"verified\": false,\n  \"read_only\": false\n }\n]"
						}
					]
				},
				{
					"name": "Get the authenticated user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						},
						"description": "If the authenticated user is authenticated through basic authentication or OAuth with the `user` scope, then the response lists public and private profile information.\n\nIf the authenticated user is authenticated through OAuth without the `user` scope, then the response lists only public profile information."
					},
					"response": [
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"login\": \"octocat\",\n \"id\": 1,\n \"node_id\": \"MDQ6VXNlcjE=\",\n \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n \"gravatar_id\": \"\",\n \"url\": \"https://api.github.com/users/octocat\",\n \"html_url\": \"https://github.com/octocat\",\n \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n \"type\": \"User\",\n \"site_admin\": false,\n \"name\": \"monalisa octocat\",\n \"company\": \"GitHub\",\n \"blog\": \"https://github.com/blog\",\n \"location\": \"San Francisco\",\n \"email\": \"octocat@github.com\",\n \"hireable\": false,\n \"bio\": \"There once was...\",\n \"twitter_username\": \"monatheoctocat\",\n \"public_repos\": 2,\n \"public_gists\": 1,\n \"followers\": 20,\n \"following\": 0,\n \"created_at\": \"2008-01-14T04:33:35Z\",\n \"updated_at\": \"2008-01-14T04:33:35Z\",\n \"private_gists\": 81,\n \"total_private_repos\": 100,\n \"owned_private_repos\": 100,\n \"disk_usage\": 10000,\n \"collaborators\": 8,\n \"two_factor_authentication\": true,\n \"plan\": {\n  \"name\": \"Medium\",\n  \"space\": 400,\n  \"private_repos\": 20,\n  \"collaborators\": 0\n }\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update the authenticated user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Omar Jahandar\",\n    \"email\": \"omar@example.com\",\n    \"blog\": \"blog.example.com\",\n    \"twitter_username\": \"therealomarj\",\n    \"company\": \"Acme corporation\",\n    \"location\": \"Berlin, Germany\",\n    \"hireable\": true,\n    \"bio\": \"dolore id enim pariatur\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						},
						"description": "**Note:** If your email is set to private and you send an `email` parameter as part of this request to update your profile, your privacy settings are still enforced: the email address will not be displayed on your public profile or via the API."
					},
					"response": [
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Omar Jahandar\",\n    \"email\": \"omar@example.com\",\n    \"blog\": \"blog.example.com\",\n    \"twitter_username\": \"therealomarj\",\n    \"company\": \"Acme corporation\",\n    \"location\": \"Berlin, Germany\",\n    \"hireable\": true,\n    \"bio\": \"dolore id enim pariatur\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Omar Jahandar\",\n    \"email\": \"omar@example.com\",\n    \"blog\": \"blog.example.com\",\n    \"twitter_username\": \"therealomarj\",\n    \"company\": \"Acme corporation\",\n    \"location\": \"Berlin, Germany\",\n    \"hireable\": true,\n    \"bio\": \"dolore id enim pariatur\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Omar Jahandar\",\n    \"email\": \"omar@example.com\",\n    \"blog\": \"blog.example.com\",\n    \"twitter_username\": \"therealomarj\",\n    \"company\": \"Acme corporation\",\n    \"location\": \"Berlin, Germany\",\n    \"hireable\": true,\n    \"bio\": \"dolore id enim pariatur\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"login\": \"octocat\",\n \"id\": 1,\n \"node_id\": \"MDQ6VXNlcjE=\",\n \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n \"gravatar_id\": \"\",\n \"url\": \"https://api.github.com/users/octocat\",\n \"html_url\": \"https://github.com/octocat\",\n \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n \"type\": \"User\",\n \"site_admin\": false,\n \"name\": \"monalisa octocat\",\n \"company\": \"GitHub\",\n \"blog\": \"https://github.com/blog\",\n \"location\": \"San Francisco\",\n \"email\": \"octocat@github.com\",\n \"hireable\": false,\n \"bio\": \"There once was...\",\n \"twitter_username\": \"monatheoctocat\",\n \"public_repos\": 2,\n \"public_gists\": 1,\n \"followers\": 20,\n \"following\": 0,\n \"created_at\": \"2008-01-14T04:33:35Z\",\n \"updated_at\": \"2008-01-14T04:33:35Z\",\n \"private_gists\": 81,\n \"total_private_repos\": 100,\n \"owned_private_repos\": 100,\n \"disk_usage\": 10000,\n \"collaborators\": 8,\n \"two_factor_authentication\": true,\n \"plan\": {\n  \"name\": \"Medium\",\n  \"space\": 400,\n  \"private_repos\": 20,\n  \"collaborators\": 0\n }\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Omar Jahandar\",\n    \"email\": \"omar@example.com\",\n    \"blog\": \"blog.example.com\",\n    \"twitter_username\": \"therealomarj\",\n    \"company\": \"Acme corporation\",\n    \"location\": \"Berlin, Germany\",\n    \"hireable\": true,\n    \"bio\": \"dolore id enim pariatur\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Omar Jahandar\",\n    \"email\": \"omar@example.com\",\n    \"blog\": \"blog.example.com\",\n    \"twitter_username\": \"therealomarj\",\n    \"company\": \"Acme corporation\",\n    \"location\": \"Berlin, Germany\",\n    \"hireable\": true,\n    \"bio\": \"dolore id enim pariatur\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Omar Jahandar\",\n    \"email\": \"omar@example.com\",\n    \"blog\": \"blog.example.com\",\n    \"twitter_username\": \"therealomarj\",\n    \"company\": \"Acme corporation\",\n    \"location\": \"Berlin, Germany\",\n    \"hireable\": true,\n    \"bio\": \"dolore id enim pariatur\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users?since=aliquip sint&per_page=-27113311",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "since",
									"value": "aliquip sint",
									"description": "Only show notifications updated after the given time. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`."
								},
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								}
							]
						},
						"description": "Lists all users, in the order that they signed up on GitHub. This list includes personal user accounts and organization accounts.\n\nNote: Pagination is powered exclusively by the `since` parameter. Use the [Link header](https://developer.github.com/v3/#link-header) to get the URL for the next page of users."
					},
					"response": [
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?since=nisi reprehenderit&per_page=-27113311",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										}
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users?since=nisi reprehenderit&per_page=-27113311",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users"
									],
									"query": [
										{
											"key": "since",
											"value": "nisi reprehenderit"
										},
										{
											"key": "per_page",
											"value": "-27113311"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						}
					]
				},
				{
					"name": "Get contextual information for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/hovercard?subject_type=repository&subject_id=aliquip sint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"hovercard"
							],
							"query": [
								{
									"key": "subject_type",
									"value": "repository",
									"description": "Identifies which additional information you'd like to receive about the person's hovercard. Can be `organization`, `repository`, `issue`, `pull_request`. **Required** when using `subject_id`."
								},
								{
									"key": "subject_id",
									"value": "aliquip sint",
									"description": "Uses the ID for the `subject_type` you specified. **Required** when using `subject_type`."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Provides hovercard information when authenticated through basic auth or OAuth with the `repo` scope. You can find out more about someone in relation to their pull requests, issues, repositories, and organizations.\n\nThe `subject_type` and `subject_id` parameters provide context for the person's hovercard, which returns more information than without the parameters. For example, if you wanted to find out more about `octocat` who owns the `Spoon-Knife` repository via cURL, it would look like this:\n\n```shell\n curl -u username:token\n  https://api.github.com/users/octocat/hovercard?subject_type=repository&subject_id=1300192\n```"
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/hovercard?subject_type=issue&subject_id=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"hovercard"
									],
									"query": [
										{
											"key": "subject_type",
											"value": "issue"
										},
										{
											"key": "subject_id",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/hovercard?subject_type=issue&subject_id=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"hovercard"
									],
									"query": [
										{
											"key": "subject_type",
											"value": "issue"
										},
										{
											"key": "subject_id",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/hovercard?subject_type=issue&subject_id=nisi reprehenderit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"hovercard"
									],
									"query": [
										{
											"key": "subject_type",
											"value": "issue"
										},
										{
											"key": "subject_id",
											"value": "nisi reprehenderit"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"contexts\": [\n  {\n   \"message\": \"Owns this repository\",\n   \"octicon\": \"repo\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Set primary email visibility for the authenticated user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"org@example.com\",\n    \"visibility\": \"public\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/email/visibility",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"email",
								"visibility"
							]
						},
						"description": "Sets the visibility for your primary email addresses."
					},
					"response": [
						{
							"name": "Resource Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"org@example.com\",\n    \"visibility\": \"public\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/email/visibility",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"email",
										"visibility"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Validation Failed",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"org@example.com\",\n    \"visibility\": \"public\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/email/visibility",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"email",
										"visibility"
									]
								}
							},
							"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"dolore ut ex aliqua\",\n \"documentation_url\": \"in irure Lorem in\",\n \"errors\": [\n  {\n   \"code\": \"anim\",\n   \"resource\": \"esse voluptate ullamco\",\n   \"field\": \"esse ut cupidatat aliquip\",\n   \"message\": \"amet consequat fugiat \",\n   \"index\": 98834121,\n   \"value\": \"sit est\"\n  },\n  {\n   \"code\": \"in culpa ut\",\n   \"resource\": \"ad magna irure Lorem\",\n   \"field\": \"nulla volu\",\n   \"message\": \"anim Lorem\",\n   \"index\": -34597542,\n   \"value\": \"non aute cupidatat\"\n  }\n ]\n}"
						},
						{
							"name": "response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"org@example.com\",\n    \"visibility\": \"public\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/email/visibility",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"email",
										"visibility"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"email\": \"octocat@github.com\",\n  \"primary\": true,\n  \"verified\": true,\n  \"visibility\": \"private\"\n }\n]"
						},
						{
							"name": "Forbidden",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"org@example.com\",\n    \"visibility\": \"public\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/email/visibility",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"email",
										"visibility"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						},
						{
							"name": "Not Modified",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"org@example.com\",\n    \"visibility\": \"public\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/email/visibility",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"email",
										"visibility"
									]
								}
							},
							"status": "Not Modified",
							"code": 304,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Requires Authentication",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"org@example.com\",\n    \"visibility\": \"public\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/user/email/visibility",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"email",
										"visibility"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"ulla\",\n \"documentation_url\": \"cillum fug\"\n}"
						}
					]
				},
				{
					"name": "List public keys for a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/keys?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"keys"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists the _verified_ public SSH keys for a user. This is accessible by anyone."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/keys?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"keys"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": 1,\n  \"key\": \"ssh-rsa AAA...\"\n }\n]"
						}
					]
				},
				{
					"name": "List followers of a user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/:username/followers?per_page=-27113311&page=-70394044",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								":username",
								"followers"
							],
							"query": [
								{
									"key": "per_page",
									"value": "-27113311",
									"description": "Results per page (max 100)"
								},
								{
									"key": "page",
									"value": "-70394044",
									"description": "Page number of the results to fetch."
								}
							],
							"variable": [
								{
									"key": "username",
									"value": "aliquip sint",
									"description": "(Required) "
								}
							]
						},
						"description": "Lists the people following the specified user."
					},
					"response": [
						{
							"name": "response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:username/followers?per_page=-27113311&page=-70394044",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":username",
										"followers"
									],
									"query": [
										{
											"key": "per_page",
											"value": "-27113311"
										},
										{
											"key": "page",
											"value": "-70394044"
										}
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Link",
									"value": "aliquip sint",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"login\": \"octocat\",\n  \"id\": 1,\n  \"node_id\": \"MDQ6VXNlcjE=\",\n  \"avatar_url\": \"https://github.com/images/error/octocat_happy.gif\",\n  \"gravatar_id\": \"\",\n  \"url\": \"https://api.github.com/users/octocat\",\n  \"html_url\": \"https://github.com/octocat\",\n  \"followers_url\": \"https://api.github.com/users/octocat/followers\",\n  \"following_url\": \"https://api.github.com/users/octocat/following{/other_user}\",\n  \"gists_url\": \"https://api.github.com/users/octocat/gists{/gist_id}\",\n  \"starred_url\": \"https://api.github.com/users/octocat/starred{/owner}{/repo}\",\n  \"subscriptions_url\": \"https://api.github.com/users/octocat/subscriptions\",\n  \"organizations_url\": \"https://api.github.com/users/octocat/orgs\",\n  \"repos_url\": \"https://api.github.com/users/octocat/repos\",\n  \"events_url\": \"https://api.github.com/users/octocat/events{/privacy}\",\n  \"received_events_url\": \"https://api.github.com/users/octocat/received_events\",\n  \"type\": \"User\",\n  \"site_admin\": false\n }\n]"
						}
					]
				}
			],
			"description": "Interact with and view information about users and also current user.",
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "https://api.github.com",
			"type": "string"
		},
		{
			"id": "base",
			"key": "base",
			"value": "",
			"type": "any",
			"description": {
				"content": "base parameter",
				"type": "text/plain"
			}
		},
		{
			"id": "head",
			"key": "head",
			"value": "",
			"type": "any",
			"description": {
				"content": "head parameter",
				"type": "text/plain"
			}
		},
		{
			"id": "origin",
			"key": "origin",
			"value": "https://uploads.github.com",
			"type": "any",
			"description": {
				"content": "The URL origin (protocol + host name + port) is included in `upload_url` returned in the response of the \"Create a release\" endpoint",
				"type": "text/plain"
			}
		}
	],
	"protocolProfileBehavior": {}
}